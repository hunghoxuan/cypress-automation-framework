{
	"info": {
		"_postman_id": "e99ffc73-d33c-4531-9afb-f52bb92649de",
		"name": "RS2SP - Dynamic Collection _111",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17910564",
		"_collection_link": "https://speeding-moon-966879.postman.co/workspace/New-Team-Workspace~03b386e5-c4a2-45fc-b0f7-1d59831644c3/collection/17910564-e99ffc73-d33c-4531-9afb-f52bb92649de?action=share&creator=17910564&source=collection_link"
	},
	"item": [
		{
			"name": "Start Dynamic Collection",
			"item": [
				{
					"name": "Client Selection",
					"item": [
						{
							"name": "Client Selection",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer\r",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Client Identification\r",
											"    // pm.environment.set(\"clientSelection\",           \"PS EU\");\r",
											"    // pm.environment.set(\"clientSelection\",           \"PS UK\");\r",
											"    // pm.environment.set(\"clientSelection\",           \"CRB\");\r",
											"    // pm.environment.set(\"clientSelection\",           \"BNZ\");\r",
											"    // pm.environment.set(\"clientSelection\",           \"SUM\");\r",
											"    pm.environment.set(\"clientSelection\",           \"FSEU\");\r",
											"    // pm.environment.set(\"clientSelection\",           \"TRP\");\r",
											"    // pm.environment.set(\"clientSelection\",           \"BOA\");\r",
											"//  -------------------------------------------------------------\r",
											"    pm.environment.set(\"password\",\"Enigma.1234\");\r",
											"    if (pm.environment.get(\"clientSelection\") == \"PS EU\") {\r",
											"        pm.environment.set(\"username\",\"paysafe-eu-api\");\r",
											"        postman.setNextRequest(\"PS EU | Access Token\");\r",
											"    }\r",
											"    else if (pm.environment.get(\"clientSelection\") == \"PS UK\") {\r",
											"        pm.environment.set(\"username\",\"paysafe-uk-api\");\r",
											"        postman.setNextRequest(\"PS UK | Access Token\");\r",
											"    }\r",
											"    else if (pm.environment.get(\"clientSelection\") == \"CRB\") {\r",
											"        pm.environment.set(\"username\",\"crb-api\");\r",
											"        postman.setNextRequest(\"CRB | Access Token\");\r",
											"    }\r",
											"    else if (pm.environment.get(\"clientSelection\") == \"BNZ\") {\r",
											"        pm.environment.set(\"username\",\"bnz-api\");\r",
											"        postman.setNextRequest(\"BNZ | Access Token\");\r",
											"    }\r",
											"    else if (pm.environment.get(\"clientSelection\") == \"TRP\") {\r",
											"        pm.environment.set(\"username\",\"trust-payments-api\");\r",
											"        postman.setNextRequest(\"TRP | Access Token\");\r",
											"    }\r",
											"    else if (pm.environment.get(\"clientSelection\") == \"SUM\") {\r",
											"        pm.environment.set(\"username\",\"sumup-api\");\r",
											"        postman.setNextRequest(\"SUM | Access Token\");\r",
											"    }\r",
											"    else if (pm.environment.get(\"clientSelection\") == \"FSEU\") {\r",
											"        pm.environment.set(\"username\",\"fseu-api\");\r",
											"        postman.setNextRequest(\"FSEU | Access Token\");\r",
											"    }\r",
											"    else if (pm.environment.get(\"clientSelection\") == \"BOA\") {\r",
											"        pm.environment.set(\"username\",\"boa-api\");\r",
											"        postman.setNextRequest(\"BOA | Access Token\");\r",
											"    }\r",
											"    else {\r",
											"        postman.setNextRequest();\r",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								},
								"description": "This request identifies which client will be chosen to select the variables to use during the next run."
							},
							"response": []
						}
					]
				},
				{
					"name": "BNZ | Authorization and BankWORKS Variables",
					"item": [
						{
							"name": "BNZ | Access Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Set this variable as the Number of Items in the Hierarchy.",
											"    pm.globals.set (\"int\", \"3\");",
											"    ",
											"    // URL: http://unit_cr-rs2sp-web02.rs2.com/",
											"    //USER: bnz-api",
											"    //PASS: Rs2Adm1n!"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Basic {{base64(username:password)}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": [
								{
									"name": "Access Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic {{base64(username:password)}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}/oauth2/token",
											"host": [
												"{{hostName}}{{contextRoot}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 09 Aug 2019 17:17:09 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "151"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"refresh_token\": \"e63f86da-3188-40d8-b3c3-ac3705d910e4\",\n    \"access_token\": \"acb8e2fa-dd92-47ab-a54b-a2722444b762\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": \"1799\",\n    \"scope\": [\n        \"\",\n        \"scope\"\n    ]\n}"
								}
							]
						},
						{
							"name": "BNZ | Change User Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"password\", \"Rs2Adm1n!\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"newPassword\":\"Rs2Adm1n!\"\r\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}api/user-management/userpassword",
									"host": [
										"{{hostName}}{{contextRoot}}api"
									],
									"path": [
										"user-management",
										"userpassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "BNZ | Access Token - New Pasword",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic {{base64(username:password)}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": [
								{
									"name": "Access Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic {{base64(username:password)}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}/oauth2/token",
											"host": [
												"{{hostName}}{{contextRoot}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 09 Aug 2019 17:17:09 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "151"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"refresh_token\": \"e63f86da-3188-40d8-b3c3-ac3705d910e4\",\n    \"access_token\": \"acb8e2fa-dd92-47ab-a54b-a2722444b762\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": \"1799\",\n    \"scope\": [\n        \"\",\n        \"scope\"\n    ]\n}"
								}
							]
						},
						{
							"name": "BNZ | Next Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Processing next BankWORKS Client",
											"    if(pm.globals.get(\"int\") == \"3\") {",
											"        postman.setNextRequest(\"BNZ | H1 | Group (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"2\") {",
											"        postman.setNextRequest(\"BNZ | H1 | Sub-Group (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"1\") {",
											"        postman.setNextRequest(\"BNZ | H1 | MID (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"0\") {",
											"        postman.setNextRequest(\"End Collection\");",
											"    }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/* ",
											"    Hierarchy Details",
											"    ",
											"    Levels are assigned as follows: ",
											"        3+ Level Heirarchy",
											"            Group       - 0",
											"            Sub-Groups  - 1 through N",
											"            Members     - -1",
											"        2 Level Heirarchy",
											"            Group       - 0",
											"            Members     - -2",
											"        Standalone Member",
											"            Members     - 0",
											"*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "BNZ | H1 | Group (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------",
											"    tests[\"Always OK\"] = responseCode.code === 404;",
											"// Hierarchy Level and Institution",
											"    pm.environment.set(\"hierarchyLevel\",            0);",
											"    pm.environment.set(\"institutionNumber\",         \"00000108\");",
											"// Merchant Details",
											"    pm.environment.set(\"clientNumber\",              \"10800020\");",
											"    pm.environment.set(\"clientType\",                \"002\");",
											"    pm.environment.set(\"country\",                   \"NZL\");",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");",
											"    pm.environment.set(\"processingRegion\",          \"000\");",
											"    pm.environment.set(\"state\",                     \"\");",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");",
											"    pm.environment.set(\"MCC\",                       \"8398\");",
											"    pm.environment.set(\"DMCC\",                      \"0000\");",
											"// Address Details",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"006\",\"022\"]);",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");",
											"// Contract Details",
											"    pm.environment.set(\"clientLevel\",               \"002\");",
											"    pm.environment.set(\"serviceContractId\",         \"101\");",
											"    pm.environment.set(\"clientTariff\",              \"000000\");",
											"    pm.environment.set(\"clientScheme\",              \"000000\");",
											"    pm.environment.set(\"settlementMethod\",          \"001\");",
											"    pm.environment.set(\"postingMethod\",             \"001\");",
											"    pm.environment.set(\"tierGroup\",                 \"000\");",
											"// Settlement/Account Details",
											"    pm.environment.set(\"billingAccounts\",           null);",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"NZD\"]);",
											"    pm.environment.set(\"statementGeneration\",       \"007\");",
											"    pm.environment.set(\"statementType\",             \"004\");",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");",
											"// Funding Client",
											"    pm.environment.set(\"fundingClientNumber\",       \"00000107\");",
											"// Service Details",
											"    pm.environment.set(\"services\",                  null);",
											"    pm.environment.set(\"cardBrands\",                null);",
											"        ",
											"// Next Request",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "BNZ | H1 | Sub-Group (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"10800021\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"003\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"007\"]);\r",
											"// Funding Client\r",
											"    pm.environment.set(\"fundingClientNumber\",       \"00000107\");\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "BNZ | H1 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"10800022\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\"]);\r",
											"// Funding Client\r",
											"    pm.environment.set(\"fundingClientNumber\",       \"00000107\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"101\",\"102\",\"201\",\"301\",\"718\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"002\",\"005\",\"230\"]);\r",
											"    pm.environment.set(\"serviceTariff\",             \"002004\");\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "BOA | Authorization and BankWORKS Variables",
					"item": [
						{
							"name": "BOA | Access Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Set this variable as the Number of Items in the Hierarchy.",
											"    pm.globals.set (\"int\", \"12\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic {{base64(username:password)}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": [
								{
									"name": "Access Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic {{base64(username:password)}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}/oauth2/token",
											"host": [
												"{{hostName}}{{contextRoot}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 09 Aug 2019 17:17:09 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "151"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"refresh_token\": \"e63f86da-3188-40d8-b3c3-ac3705d910e4\",\n    \"access_token\": \"acb8e2fa-dd92-47ab-a54b-a2722444b762\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": \"1799\",\n    \"scope\": [\n        \"\",\n        \"scope\"\n    ]\n}"
								}
							]
						},
						{
							"name": "BOA | Change User Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"password\", \"Rs2Adm1n!\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"newPassword\":\"Rs2Adm1n!\"\r\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}api/user-management/userpassword",
									"host": [
										"{{hostName}}{{contextRoot}}api"
									],
									"path": [
										"user-management",
										"userpassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "BOA | Access Token - New Pasword",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Basic {{base64(username:password)}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": [
								{
									"name": "Access Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic {{base64(username:password)}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}/oauth2/token",
											"host": [
												"{{hostName}}{{contextRoot}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 09 Aug 2019 17:17:09 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "151"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"refresh_token\": \"e63f86da-3188-40d8-b3c3-ac3705d910e4\",\n    \"access_token\": \"acb8e2fa-dd92-47ab-a54b-a2722444b762\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": \"1799\",\n    \"scope\": [\n        \"\",\n        \"scope\"\n    ]\n}"
								}
							]
						},
						{
							"name": "BOA | Next Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Processing next BankWORKS Client",
											"    if(pm.globals.get(\"int\") == \"12\") {",
											"        postman.setNextRequest(\"BOA | H1 | Holding Company (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"11\") {",
											"        postman.setNextRequest(\"BOA | H1 | Corporation (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"10\") {",
											"        postman.setNextRequest(\"BOA | H1 | Region (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"9\") {",
											"        postman.setNextRequest(\"BOA | H1 | District (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"8\") {",
											"        postman.setNextRequest(\"BOA | H1 | MID (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"7\") {",
											"        postman.setNextRequest(\"BOA | H1 | Region (2)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"6\") {",
											"        postman.setNextRequest(\"BOA | H1 | District (2)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"5\") {",
											"        postman.setNextRequest(\"BOA | H1 | MID (2)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"4\") {",
											"        postman.setNextRequest(\"BOA | H2 | Corporation (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"3\") {",
											"        postman.setNextRequest(\"BOA | H2 | MID (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"2\") {",
											"        postman.setNextRequest(\"BOA | H2 | MID (2)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"1\") {",
											"        postman.setNextRequest(\"BOA | H3 | MID (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"0\") {",
											"        postman.setNextRequest(\"End Collection\");",
											"    }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/* ",
											"    Hierarchy Details",
											"    ",
											"    Levels are assigned as follows: ",
											"        3+ Level Heirarchy",
											"            Group       - 0",
											"            Sub-Groups  - 1 through N",
											"            Members     - -1",
											"        2 Level Heirarchy",
											"            Group       - 0",
											"            Members     - -2",
											"        Standalone Member",
											"            Members     - 0",
											"*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "BOA | H1 | Holding Company (1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------",
											"    tests[\"Always OK\"] = responseCode.code === 404;",
											"",
											"// Hierarchy Level and Institution",
											"    pm.environment.set(\"hierarchyLevel\",            0);",
											"    pm.environment.set(\"institutionNumber\",         \"00000200\");",
											"    ",
											"// Merchant Details",
											"    pm.environment.set(\"clientNumber\",              \"50080000\");",
											"    pm.environment.set(\"ourReference\",              \"{{clientNumber}}       \");",
											"    pm.environment.set(\"clientType\",                \"015\");",
											"    pm.environment.set(\"country\",                   \"USA\");",
											"    pm.environment.set(\"state\",                     \"046\");",
											"",
											"// Address Details",
											"    pm.environment.set(\"addressCategory\",           [\"007\",\"003\",\"022\"]);",
											"    ",
											"// Contract Details",
											"    pm.environment.set(\"clientLevel\",               \"002\");",
											"    pm.environment.set(\"serviceContractId\",         \"051\");",
											"    pm.environment.set(\"clientTariff\",              \"005001\");",
											"    pm.environment.set(\"clientScheme\",              \"000000\");",
											"    pm.environment.set(\"settlementMethod\",          \"030\");",
											"    pm.environment.set(\"postingMethod\",             \"001\");",
											"    pm.environment.set(\"transactionChargesTariff\",  \"150000\");",
											"    pm.environment.set(\"entityId\",                  \"113\");",
											"    pm.environment.set(\"contractDefinitionId\",      \"serviceContractId={{serviceContractId}}\");",
											"    ",
											"// Settlement/Account Details",
											"    pm.environment.set(\"billingLevel\",              \"000\");",
											"    pm.environment.set(\"billingFee\",                \"000\");",
											"    pm.environment.set(\"billingPAR\",                \"000\");  ",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"USD\"]);",
											"    pm.environment.set(\"fundingClientNumber\",       null);",
											"    pm.environment.set(\"bankClearingNumber\",        \"132456789\");",
											"    ",
											"// Funding Client",
											"    pm.environment.set(\"fundingClientNumber\",       null);",
											"    ",
											"// Service Details",
											"    pm.environment.set(\"services\",                  null);",
											"    pm.environment.set(\"cardBrands\",                null);",
											"        ",
											"// Next Request",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "BOA | H1 | Corporation (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"    \r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            1);\r",
											"    \r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\", 1+Number(postman.getEnvironmentVariable(\"clientNumber\")));\r",
											"    pm.environment.set(\"clientType\",                \"016\");\r",
											"    pm.environment.set(\"country\",                   \"USA\");\r",
											"    pm.environment.set(\"state\",                     \"046\");\r",
											"\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"007\",\"003\",\"022\"]);\r",
											"\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"003\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"051\");\r",
											"    pm.environment.set(\"clientTariff\",              \"005001\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"030\");\r",
											"    pm.environment.set(\"postingMethod\",             \"001\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"150000\");\r",
											"    pm.environment.set(\"entityId\",                  \"113\");\r",
											"    pm.environment.set(\"contractDefinitionId\",      \"serviceContractId={{serviceContractId}}\");\r",
											"    \r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingLevel\",              \"000\");\r",
											"    pm.environment.set(\"billingFee\",                \"000\");\r",
											"    pm.environment.set(\"billingPAR\",                \"000\");  \r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"USD\"]);\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"132456789\");\r",
											"\r",
											"// Funding Client\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    \r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"        \r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "BOA | H1 | Region (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"    \r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            2);\r",
											"\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\", 1+Number(postman.getEnvironmentVariable(\"clientNumber\")));\r",
											"    pm.environment.set(\"clientType\",                \"017\");\r",
											"    pm.environment.set(\"country\",                   \"USA\");\r",
											"    pm.environment.set(\"state\",                     \"046\");\r",
											"\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"007\",\"003\",\"022\"]);\r",
											"    \r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"003\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"051\");\r",
											"    pm.environment.set(\"clientTariff\",              \"005001\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"030\");\r",
											"    pm.environment.set(\"postingMethod\",             \"001\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"150000\");\r",
											"    pm.environment.set(\"entityId\",                  \"113\");\r",
											"    pm.environment.set(\"contractDefinitionId\",      \"serviceContractId={{serviceContractId}}\");\r",
											"    \r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingLevel\",              \"000\");\r",
											"    pm.environment.set(\"billingFee\",                \"000\");\r",
											"    pm.environment.set(\"billingPAR\",                \"000\");  \r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"USD\"]);\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"132456789\");\r",
											"    \r",
											"// Funding Client\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    \r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "BOA | H1 | District (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"    \r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            3);\r",
											"\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\", 1+Number(postman.getEnvironmentVariable(\"clientNumber\")));\r",
											"    pm.environment.set(\"clientType\",                \"018\");\r",
											"    pm.environment.set(\"country\",                   \"USA\");\r",
											"    pm.environment.set(\"state\",                     \"046\");\r",
											"\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"007\",\"003\",\"022\"]);\r",
											"\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"003\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"051\");\r",
											"    pm.environment.set(\"clientTariff\",              \"005001\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"030\");\r",
											"    pm.environment.set(\"postingMethod\",             \"001\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"150000\");\r",
											"    pm.environment.set(\"entityId\",                  \"113\");\r",
											"    pm.environment.set(\"contractDefinitionId\",      \"serviceContractId={{serviceContractId}}\");\r",
											"    \r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingLevel\",              \"000\");\r",
											"    pm.environment.set(\"billingFee\",                \"000\");\r",
											"    pm.environment.set(\"billingPAR\",                \"000\");  \r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"USD\"]);\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"132456789\");\r",
											"    \r",
											"// Funding Client\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    \r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "BOA | H1 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"    \r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\", 1+Number(postman.getEnvironmentVariable(\"clientNumber\")));\r",
											"    pm.environment.set(\"clientType\",                \"019\");\r",
											"    pm.environment.set(\"country\",                   \"USA\");\r",
											"    pm.environment.set(\"state\",                     \"046\");\r",
											"\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"007\",\"003\",\"022\"]);\r",
											"    \r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"051\");\r",
											"    pm.environment.set(\"clientTariff\",              \"005001\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"030\");\r",
											"    pm.environment.set(\"postingMethod\",             \"001\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"150000\");\r",
											"    pm.environment.set(\"entityId\",                  \"113\");\r",
											"    pm.environment.set(\"contractDefinitionId\",      \"serviceContractId={{serviceContractId}}\");\r",
											"    \r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingLevel\",              \"001\");\r",
											"    pm.environment.set(\"billingFee\",                \"001\");\r",
											"    pm.environment.set(\"billingPAR\",                \"001\");  \r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"USD\"]);\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"132456789\");\r",
											"    \r",
											"// Funding Client\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    \r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"000102\",\"000201\",\"000301\",\"000359\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"002\",\"005\",\"015\",\"016\",\"091\"]);\r",
											"    \r",
											"// Card Scheme Addendum Details\r",
											"    //VISA\r",
											"        pm.environment.set(\"ipValueVISA\",           \"007\");\r",
											"        pm.environment.set(\"ipQualifiedVISA\",       \"003\");\r",
											"        pm.environment.set(\"thresholdVISA\",         \"001\");\r",
											"    //Mastercard\r",
											"        pm.environment.set(\"ipValueMC\",             \"001\");\r",
											"        pm.environment.set(\"ipQualifiedMC\",         \"002\");\r",
											"        pm.environment.set(\"thresholdMC\",           \"004\");\r",
											"    //AMEX\r",
											"        pm.environment.set(\"direct\",                \"\");\r",
											"    //Discover\r",
											"        pm.environment.set(\"retained\",              \"\");\r",
											"        pm.environment.set(\"stub\",                  \"\");\r",
											"    //Diners\r",
											"        pm.environment.set(\"intesCode\",             \"\");\r",
											"    //Pin Debits\r",
											"        pm.environment.set(\"ipQualifiedAFFN\",       \"\");\r",
											"        pm.environment.set(\"registeredAFFN\",        \"001\");\r",
											"        pm.environment.set(\"ipQualifiedNYCE\",       \"\");\r",
											"        pm.environment.set(\"registeredNYCE\",        \"001\");\r",
											"        pm.environment.set(\"ipQualifiedPULSE\",      \"\");\r",
											"        pm.environment.set(\"registeredPULSE\",       \"001\");\r",
											"        pm.environment.set(\"ipQualifiedSHAZAM\",     \"\");\r",
											"        pm.environment.set(\"registeredSHAZAM\",      \"001\");\r",
											"        pm.environment.set(\"ipQualifiedACCEL\",      \"\");\r",
											"        pm.environment.set(\"registeredACCEL\",       \"001\");\r",
											"        pm.environment.set(\"ipQualifiedCULIANCE\",   \"\");\r",
											"        pm.environment.set(\"registeredCULIANCE\",    \"001\");\r",
											"        pm.environment.set(\"ipQualifiedINTER\",      \"\");\r",
											"        pm.environment.set(\"registeredINTER\",       \"001\");\r",
											"        pm.environment.set(\"ipQualifiedPAVD\",       \"\");\r",
											"        pm.environment.set(\"registeredPAVD\",        \"001\");\r",
											"        pm.environment.set(\"ipQualifiedEBT\",        \"\");\r",
											"        pm.environment.set(\"registeredEBT\",         \"001\");\r",
											"        pm.environment.set(\"ipQualifiedSTAR\",       \"030\");\r",
											"        pm.environment.set(\"registeredSTAR\",        \"001\");\r",
											"        \r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "BOA | H1 | Region (2)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"    \r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            2);\r",
											"\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              1+Number(postman.getEnvironmentVariable(\"clientNumber\")));\r",
											"    pm.environment.set(\"clientType\",                \"017\");\r",
											"    pm.environment.set(\"country\",                   \"USA\");\r",
											"    pm.environment.set(\"state\",                     \"046\");\r",
											"\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"007\",\"003\",\"022\"]);\r",
											"    \r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"003\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"051\");\r",
											"    pm.environment.set(\"clientTariff\",              \"005001\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"030\");\r",
											"    pm.environment.set(\"postingMethod\",             \"001\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"150000\");\r",
											"    pm.environment.set(\"entityId\",                  \"113\");\r",
											"    pm.environment.set(\"contractDefinitionId\",      \"serviceContractId={{serviceContractId}}\");\r",
											"    \r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingLevel\",              \"000\");\r",
											"    pm.environment.set(\"billingFee\",                \"000\");\r",
											"    pm.environment.set(\"billingPAR\",                \"000\");  \r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"USD\"]);\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"132456789\");\r",
											"    \r",
											"// Funding Client\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"    \r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "BOA | H1 | District (2)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"    \r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            3);\r",
											"\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              1+Number(postman.getEnvironmentVariable(\"clientNumber\")));\r",
											"    pm.environment.set(\"clientType\",                \"018\");\r",
											"    pm.environment.set(\"country\",                   \"USA\");\r",
											"    pm.environment.set(\"state\",                     \"046\");\r",
											"\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"007\",\"003\",\"022\"]);\r",
											"\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"003\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"051\");\r",
											"    pm.environment.set(\"clientTariff\",              \"000501\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"030\");\r",
											"    pm.environment.set(\"postingMethod\",             \"001\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"150000\");\r",
											"    pm.environment.set(\"entityId\",                  \"113\");\r",
											"    pm.environment.set(\"contractDefinitionId\",      \"serviceContractId={{serviceContractId}}\");\r",
											"    \r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingLevel\",              \"000\");\r",
											"    pm.environment.set(\"billingFee\",                \"000\");\r",
											"    pm.environment.set(\"billingPAR\",                \"000\");  \r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"USD\"]);\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"132456789\");\r",
											"\r",
											"// Funding Client\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"    \r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "BOA | H1 | MID (2)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"    \r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              1+Number(postman.getEnvironmentVariable(\"clientNumber\")));\r",
											"    pm.environment.set(\"clientType\",                \"019\");\r",
											"    pm.environment.set(\"country\",                   \"USA\");\r",
											"    pm.environment.set(\"state\",                     \"046\");\r",
											"\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"007\",\"003\",\"022\"]);\r",
											"\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"051\");\r",
											"    pm.environment.set(\"clientTariff\",              \"005001\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"030\");\r",
											"    pm.environment.set(\"postingMethod\",             \"001\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"150000\");\r",
											"    pm.environment.set(\"entityId\",                  \"113\");\r",
											"    pm.environment.set(\"contractDefinitionId\",      \"serviceContractId={{serviceContractId}}\");\r",
											"    \r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingLevel\",              \"001\");\r",
											"    pm.environment.set(\"billingFee\",                \"001\");\r",
											"    pm.environment.set(\"billingPAR\",                \"001\");  \r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"USD\"]);\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"132456789\");\r",
											"    \r",
											"// Funding Client\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"102\",\"201\",\"301\",\"357\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"010\",\"005\"]);\r",
											"\r",
											"// Card Scheme Addendum Details\r",
											"    //VISA\r",
											"        pm.environment.set(\"ipValueVISA\",           \"007\");\r",
											"        pm.environment.set(\"ipQualifiedVISA\",       \"003\");\r",
											"        pm.environment.set(\"thresholdVISA\",         \"001\");\r",
											"    //Mastercard\r",
											"        pm.environment.set(\"ipValueMC\",             \"001\");\r",
											"        pm.environment.set(\"ipQualifiedMC\",         \"002\");\r",
											"        pm.environment.set(\"thresholdMC\",           \"004\");\r",
											"    //AMEX\r",
											"        pm.environment.set(\"direct\",                \"\");\r",
											"    //Discover\r",
											"        pm.environment.set(\"retained\",              \"\");\r",
											"        pm.environment.set(\"stub\",                  \"\");\r",
											"    //Diners\r",
											"        pm.environment.set(\"intesCode\",             \"\");\r",
											"    //Pin Debits\r",
											"        pm.environment.set(\"ipQualifiedAFFN\",       \"\");\r",
											"        pm.environment.set(\"registeredAFFN\",        \"001\");\r",
											"        pm.environment.set(\"ipQualifiedNYCE\",       \"\");\r",
											"        pm.environment.set(\"registeredNYCE\",        \"001\");\r",
											"        pm.environment.set(\"ipQualifiedPULSE\",      \"\");\r",
											"        pm.environment.set(\"registeredPULSE\",       \"001\");\r",
											"        pm.environment.set(\"ipQualifiedSHAZAM\",     \"\");\r",
											"        pm.environment.set(\"registeredSHAZAM\",      \"001\");\r",
											"        pm.environment.set(\"ipQualifiedACCEL\",      \"\");\r",
											"        pm.environment.set(\"registeredACCEL\",       \"001\");\r",
											"        pm.environment.set(\"ipQualifiedCULIANCE\",   \"\");\r",
											"        pm.environment.set(\"registeredCULIANCE\",    \"001\");\r",
											"        pm.environment.set(\"ipQualifiedINTER\",      \"\");\r",
											"        pm.environment.set(\"registeredINTER\",       \"001\");\r",
											"        pm.environment.set(\"ipQualifiedPAVD\",       \"\");\r",
											"        pm.environment.set(\"registeredPAVD\",        \"001\");\r",
											"        pm.environment.set(\"ipQualifiedEBT\",        \"\");\r",
											"        pm.environment.set(\"registeredEBT\",         \"001\");\r",
											"        pm.environment.set(\"ipQualifiedSTAR\",       \"030\");\r",
											"        pm.environment.set(\"registeredSTAR\",        \"001\");\r",
											"\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "BOA | H2 | Corporation (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"    \r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"    \r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              1+Number(postman.getEnvironmentVariable(\"clientNumber\")));\r",
											"    pm.environment.set(\"clientType\",                \"016\");\r",
											"    pm.environment.set(\"country\",                   \"USA\");\r",
											"    pm.environment.set(\"state\",                     \"046\");\r",
											"\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"007\",\"003\",\"022\"]);\r",
											"\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"002\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"051\");\r",
											"    pm.environment.set(\"clientTariff\",              \"005001\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"030\");\r",
											"    pm.environment.set(\"postingMethod\",             \"001\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"150000\");\r",
											"    pm.environment.set(\"entityId\",                  \"113\");\r",
											"    pm.environment.set(\"contractDefinitionId\",      \"serviceContractId={{serviceContractId}}\");\r",
											"    \r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingLevel\",              \"000\");\r",
											"    pm.environment.set(\"billingFee\",                \"000\");\r",
											"    pm.environment.set(\"billingPAR\",                \"000\");  \r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"USD\"]);\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"132456789\");\r",
											"    \r",
											"// Funding Client\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    \r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"        \r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "BOA | H2 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"    \r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -2);\r",
											"\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              1+Number(postman.getEnvironmentVariable(\"clientNumber\")));\r",
											"    pm.environment.set(\"clientType\",                \"019\");\r",
											"    pm.environment.set(\"country\",                   \"USA\");\r",
											"    pm.environment.set(\"state\",                     \"046\");\r",
											"\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"007\",\"003\",\"022\"]);\r",
											"\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"051\");\r",
											"    pm.environment.set(\"clientTariff\",              \"005001\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"030\");\r",
											"    pm.environment.set(\"postingMethod\",             \"001\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"150000\");\r",
											"    pm.environment.set(\"entityId\",                  \"113\");\r",
											"    pm.environment.set(\"contractDefinitionId\",      \"serviceContractId={{serviceContractId}}\");\r",
											"    \r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingLevel\",              \"001\");\r",
											"    pm.environment.set(\"billingFee\",                \"001\");\r",
											"    pm.environment.set(\"billingPAR\",                \"001\");  \r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"USD\"]);\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"132456789\");\r",
											"\r",
											"// Funding Client\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    \r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"000102\",\"000201\",\"000301\",\"000357\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"010\",\"005\"]);\r",
											"\r",
											"// Card Scheme Addendum Details\r",
											"    //VISA\r",
											"        pm.environment.set(\"ipValueVISA\",           \"007\");\r",
											"        pm.environment.set(\"ipQualifiedVISA\",       \"003\");\r",
											"        pm.environment.set(\"thresholdVISA\",         \"001\");\r",
											"    //Mastercard\r",
											"        pm.environment.set(\"ipValueMC\",             \"001\");\r",
											"        pm.environment.set(\"ipQualifiedMC\",         \"002\");\r",
											"        pm.environment.set(\"thresholdMC\",           \"004\");\r",
											"    //AMEX\r",
											"        pm.environment.set(\"direct\",                \"\");\r",
											"    //Discover\r",
											"        pm.environment.set(\"retained\",              \"\");\r",
											"        pm.environment.set(\"stub\",                  \"\");\r",
											"    //Diners\r",
											"        pm.environment.set(\"intesCode\",             \"\");\r",
											"    //Pin Debits\r",
											"        pm.environment.set(\"ipQualifiedAFFN\",       \"\");\r",
											"        pm.environment.set(\"registeredAFFN\",        \"001\");\r",
											"        pm.environment.set(\"ipQualifiedNYCE\",       \"\");\r",
											"        pm.environment.set(\"registeredNYCE\",        \"001\");\r",
											"        pm.environment.set(\"ipQualifiedPULSE\",      \"\");\r",
											"        pm.environment.set(\"registeredPULSE\",       \"001\");\r",
											"        pm.environment.set(\"ipQualifiedSHAZAM\",     \"\");\r",
											"        pm.environment.set(\"registeredSHAZAM\",      \"001\");\r",
											"        pm.environment.set(\"ipQualifiedACCEL\",      \"\");\r",
											"        pm.environment.set(\"registeredACCEL\",       \"001\");\r",
											"        pm.environment.set(\"ipQualifiedCULIANCE\",   \"\");\r",
											"        pm.environment.set(\"registeredCULIANCE\",    \"001\");\r",
											"        pm.environment.set(\"ipQualifiedINTER\",      \"\");\r",
											"        pm.environment.set(\"registeredINTER\",       \"001\");\r",
											"        pm.environment.set(\"ipQualifiedPAVD\",       \"\");\r",
											"        pm.environment.set(\"registeredPAVD\",        \"001\");\r",
											"        pm.environment.set(\"ipQualifiedEBT\",        \"\");\r",
											"        pm.environment.set(\"registeredEBT\",         \"001\");\r",
											"        pm.environment.set(\"ipQualifiedSTAR\",       \"030\");\r",
											"        pm.environment.set(\"registeredSTAR\",        \"001\");\r",
											"        \r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "BOA | H2 | MID (2)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"    \r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -2);\r",
											"\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              1+Number(postman.getEnvironmentVariable(\"clientNumber\")));\r",
											"    pm.environment.set(\"clientType\",                \"019\");\r",
											"    pm.environment.set(\"country\",                   \"USA\");\r",
											"    pm.environment.set(\"state\",                     \"046\");\r",
											"\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"007\",\"003\",\"022\"]);\r",
											"\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"051\");\r",
											"    pm.environment.set(\"clientTariff\",              \"005001\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"030\");\r",
											"    pm.environment.set(\"postingMethod\",             \"001\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"150000\");\r",
											"    pm.environment.set(\"entityId\",                  \"113\");\r",
											"    pm.environment.set(\"contractDefinitionId\",      \"serviceContractId={{serviceContractId}}\");\r",
											"    \r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingLevel\",              \"001\");\r",
											"    pm.environment.set(\"billingFee\",                \"001\");\r",
											"    pm.environment.set(\"billingPAR\",                \"001\");  \r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"USD\"]);\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"132456789\");\r",
											"    \r",
											"// Funding Client\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    \r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"000102\",\"000201\",\"000301\",\"000357\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"010\",\"005\"]);\r",
											"\r",
											"// Card Scheme Addendum Details\r",
											"    //VISA\r",
											"        pm.environment.set(\"ipValueVISA\",           \"007\");\r",
											"        pm.environment.set(\"ipQualifiedVISA\",       \"003\");\r",
											"        pm.environment.set(\"thresholdVISA\",         \"001\");\r",
											"    //Mastercard\r",
											"        pm.environment.set(\"ipValueMC\",             \"001\");\r",
											"        pm.environment.set(\"ipQualifiedMC\",         \"002\");\r",
											"        pm.environment.set(\"thresholdMC\",           \"004\");\r",
											"    //AMEX\r",
											"        pm.environment.set(\"direct\",                \"\");\r",
											"    //Discover\r",
											"        pm.environment.set(\"retained\",              \"\");\r",
											"        pm.environment.set(\"stub\",                  \"\");\r",
											"    //Diners\r",
											"        pm.environment.set(\"intesCode\",             \"\");\r",
											"    //Pin Debits\r",
											"        pm.environment.set(\"ipQualifiedAFFN\",       \"\");\r",
											"        pm.environment.set(\"registeredAFFN\",        \"001\");\r",
											"        pm.environment.set(\"ipQualifiedNYCE\",       \"\");\r",
											"        pm.environment.set(\"registeredNYCE\",        \"001\");\r",
											"        pm.environment.set(\"ipQualifiedPULSE\",      \"\");\r",
											"        pm.environment.set(\"registeredPULSE\",       \"001\");\r",
											"        pm.environment.set(\"ipQualifiedSHAZAM\",     \"\");\r",
											"        pm.environment.set(\"registeredSHAZAM\",      \"001\");\r",
											"        pm.environment.set(\"ipQualifiedACCEL\",      \"\");\r",
											"        pm.environment.set(\"registeredACCEL\",       \"001\");\r",
											"        pm.environment.set(\"ipQualifiedCULIANCE\",   \"\");\r",
											"        pm.environment.set(\"registeredCULIANCE\",    \"001\");\r",
											"        pm.environment.set(\"ipQualifiedINTER\",      \"\");\r",
											"        pm.environment.set(\"registeredINTER\",       \"001\");\r",
											"        pm.environment.set(\"ipQualifiedPAVD\",       \"\");\r",
											"        pm.environment.set(\"registeredPAVD\",        \"001\");\r",
											"        pm.environment.set(\"ipQualifiedEBT\",        \"\");\r",
											"        pm.environment.set(\"registeredEBT\",         \"001\");\r",
											"        pm.environment.set(\"ipQualifiedSTAR\",       \"030\");\r",
											"        pm.environment.set(\"registeredSTAR\",        \"001\");\r",
											"        \r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "BOA | H3 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"    \r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              1+Number(postman.getEnvironmentVariable(\"clientNumber\")));\r",
											"    pm.environment.set(\"clientType\",                \"019\");\r",
											"    pm.environment.set(\"country\",                   \"USA\");\r",
											"    pm.environment.set(\"state\",                     \"046\");\r",
											"\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"007\",\"003\",\"022\"]);\r",
											"\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"051\");\r",
											"    pm.environment.set(\"clientTariff\",              \"005001\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"030\");\r",
											"    pm.environment.set(\"postingMethod\",             \"001\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"150000\");\r",
											"    pm.environment.set(\"entityId\",                  \"113\");\r",
											"    pm.environment.set(\"contractDefinitionId\",      \"serviceContractId={{serviceContractId}}\");\r",
											"    \r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingLevel\",              \"001\");\r",
											"    pm.environment.set(\"billingFee\",                \"001\");\r",
											"    pm.environment.set(\"billingPAR\",                \"001\");  \r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"USD\"]);\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"132456789\");\r",
											"    \r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"000102\",\"000201\",\"000301\",\"000357\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"010\",\"005\"]);\r",
											"    \r",
											"// Funding Client\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"    \r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"000102\",\"000201\",\"000301\",\"000357\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"010\",\"005\"]);\r",
											"\r",
											"// Card Scheme Addendum Details\r",
											"    //VISA\r",
											"        pm.environment.set(\"ipValueVISA\",           \"007\");\r",
											"        pm.environment.set(\"ipQualifiedVISA\",       \"003\");\r",
											"        pm.environment.set(\"thresholdVISA\",         \"001\");\r",
											"    //Mastercard\r",
											"        pm.environment.set(\"ipValueMC\",             \"001\");\r",
											"        pm.environment.set(\"ipQualifiedMC\",         \"002\");\r",
											"        pm.environment.set(\"thresholdMC\",           \"004\");\r",
											"    //AMEX\r",
											"        pm.environment.set(\"direct\",                \"\");\r",
											"    //Discover\r",
											"        pm.environment.set(\"retained\",              \"\");\r",
											"        pm.environment.set(\"stub\",                  \"\");\r",
											"    //Diners\r",
											"        pm.environment.set(\"intesCode\",             \"\");\r",
											"    //Pin Debits\r",
											"        pm.environment.set(\"ipQualifiedAFFN\",       \"\");\r",
											"        pm.environment.set(\"registeredAFFN\",        \"001\");\r",
											"        pm.environment.set(\"ipQualifiedNYCE\",       \"\");\r",
											"        pm.environment.set(\"registeredNYCE\",        \"001\");\r",
											"        pm.environment.set(\"ipQualifiedPULSE\",      \"\");\r",
											"        pm.environment.set(\"registeredPULSE\",       \"001\");\r",
											"        pm.environment.set(\"ipQualifiedSHAZAM\",     \"\");\r",
											"        pm.environment.set(\"registeredSHAZAM\",      \"001\");\r",
											"        pm.environment.set(\"ipQualifiedACCEL\",      \"\");\r",
											"        pm.environment.set(\"registeredACCEL\",       \"001\");\r",
											"        pm.environment.set(\"ipQualifiedCULIANCE\",   \"\");\r",
											"        pm.environment.set(\"registeredCULIANCE\",    \"001\");\r",
											"        pm.environment.set(\"ipQualifiedINTER\",      \"\");\r",
											"        pm.environment.set(\"registeredINTER\",       \"001\");\r",
											"        pm.environment.set(\"ipQualifiedPAVD\",       \"\");\r",
											"        pm.environment.set(\"registeredPAVD\",        \"001\");\r",
											"        pm.environment.set(\"ipQualifiedEBT\",        \"\");\r",
											"        pm.environment.set(\"registeredEBT\",         \"001\");\r",
											"        pm.environment.set(\"ipQualifiedSTAR\",       \"030\");\r",
											"        pm.environment.set(\"registeredSTAR\",        \"001\");\r",
											"        \r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "CRB | Authorization and BankWORKS Variables",
					"item": [
						{
							"name": "CRB | Access Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Set this variable as the Number of Items in the Hierarchy.",
											"    pm.globals.set (\"int\", \"3\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "Rs2Adm1n!",
											"type": "string"
										},
										{
											"key": "username",
											"value": "crb-api",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Basic {{base64(username:password)}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": [
								{
									"name": "Access Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic {{base64(username:password)}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}/oauth2/token",
											"host": [
												"{{hostName}}{{contextRoot}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 09 Aug 2019 17:17:09 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "151"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"refresh_token\": \"e63f86da-3188-40d8-b3c3-ac3705d910e4\",\n    \"access_token\": \"acb8e2fa-dd92-47ab-a54b-a2722444b762\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": \"1799\",\n    \"scope\": [\n        \"\",\n        \"scope\"\n    ]\n}"
								}
							]
						},
						{
							"name": "CRB | Change User Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"password\", \"Rs2Adm1n!\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"newPassword\":\"Rs2Adm1n!\"\r\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}api/user-management/userpassword",
									"host": [
										"{{hostName}}{{contextRoot}}api"
									],
									"path": [
										"user-management",
										"userpassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "CRB | Access Token - New Pasword",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "Rs2Adm1n!",
											"type": "string"
										},
										{
											"key": "username",
											"value": "crb-api",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Basic {{base64(username:password)}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": [
								{
									"name": "Access Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic {{base64(username:password)}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}/oauth2/token",
											"host": [
												"{{hostName}}{{contextRoot}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 09 Aug 2019 17:17:09 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "151"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"refresh_token\": \"e63f86da-3188-40d8-b3c3-ac3705d910e4\",\n    \"access_token\": \"acb8e2fa-dd92-47ab-a54b-a2722444b762\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": \"1799\",\n    \"scope\": [\n        \"\",\n        \"scope\"\n    ]\n}"
								}
							]
						},
						{
							"name": "CRB | Next Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Always OK\"] = responseCode.code === 404;",
											"    ",
											"    // Processing next BankWORKS Client",
											"    if(pm.globals.get(\"int\") == \"3\") {",
											"        postman.setNextRequest(\"CRB | H1 | Group (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"2\") {",
											"        postman.setNextRequest(\"CRB | H1 | MID (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"1\") {",
											"        postman.setNextRequest(\"CRB | H2 | MID (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"0\") {",
											"        postman.setNextRequest(\"End Collection\");",
											"    }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/* ",
											"    Hierarchy Details",
											"    ",
											"    Levels are assigned as follows: ",
											"        3+ Level Heirarchy",
											"            Group       - 0",
											"            Sub-Groups  - 1 through N",
											"            Members     - -1",
											"        2 Level Heirarchy",
											"            Group       - 0",
											"            Members     - -2",
											"        Standalone Member",
											"            Members     - 0",
											"*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "CRB | H1 | Group (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------",
											"    tests[\"Always OK\"] = responseCode.code === 404;",
											"// Hierarchy Level and Institution",
											"    pm.environment.set(\"hierarchyLevel\",            0);",
											"    pm.environment.set(\"institutionNumber\",         \"00000106\");",
											"// Merchant Details",
											"    pm.environment.set(\"clientNumber\",              \"12345708\");",
											"    pm.environment.set(\"clientType\",                \"002\");",
											"    pm.environment.set(\"country\",                   \"USA\");",
											"    pm.environment.set(\"eCommerceIndicator\",        \"000\");",
											"    pm.environment.set(\"processingRegion\",          \"000\");",
											"    pm.environment.set(\"state\",                     \"035\");",
											"    pm.environment.set(\"legalForm\",                 \"007\");",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");",
											"// Contract Details",
											"    pm.environment.set(\"clientLevel\",               \"002\");",
											"    pm.environment.set(\"serviceContractId\",         \"111\");",
											"    pm.environment.set(\"clientTariff\",              \"500001\");",
											"    pm.environment.set(\"clientScheme\",              \"000000\");",
											"    pm.environment.set(\"settlementMethod\",          \"001\");",
											"    pm.environment.set(\"postingMethod\",             \"002\");",
											"    pm.environment.set(\"tierGroup\",                 \"\");",
											"// Address Details",
											"    pm.environment.set(\"addressCategory\",           [\"001\", \"003\", \"006\", \"022\"]);",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");",
											"// Settlement/Account Details",
											"    pm.environment.set(\"billingLevel\",              \"000\");",
											"    pm.environment.set(\"accountTypes\",              [\"007\", \"009\", \"012\", \"059\"]);",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"USD\"]);",
											"    pm.environment.set(\"statementGeneration\",       \"001\");",
											"    pm.environment.set(\"statementType\",             \"900\");",
											"    pm.environment.set(\"bankClearingNumber\",        \"132456789\");",
											"// Funding Client",
											"    pm.environment.set(\"fundingClientNumber\",       null);",
											"// Service Details",
											"    pm.environment.set(\"services\",                  null);",
											"    pm.environment.set(\"cardBrands\",                null);",
											"// Next Request",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "CRB | H1 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\", 1+Number(postman.getEnvironmentVariable(\"clientNumber\")));\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");    \r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"007\", \"009\", \"012\", \"059\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"007\", \"009\", \"012\", \"059\"]);\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"102\",\"201\",\"352\",\"609\",\"991\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"002\",\"005\"]);\r",
											"    pm.environment.set(\"serviceTariff\",             \"000006\");\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "CRB | H2 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"    pm.environment.set(\"institutionNumber\",         \"00000106\");\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\", 1+Number(postman.getEnvironmentVariable(\"clientNumber\")));\r",
											"    pm.environment.set(\"clientType\",                \"002\");\r",
											"    pm.environment.set(\"country\",                   \"USA\");\r",
											"    pm.environment.set(\"eCommerceIndicator\",        \"000\");\r",
											"    pm.environment.set(\"processingRegion\",          \"000\");\r",
											"    pm.environment.set(\"state\",                     \"035\");\r",
											"    pm.environment.set(\"legalForm\",                 \"007\");\r",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"001\", \"003\", \"006\", \"022\"]);\r",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"111\");\r",
											"    pm.environment.set(\"clientTariff\",              \"500001\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"001\");\r",
											"    pm.environment.set(\"postingMethod\",             \"002\");\r",
											"    pm.environment.set(\"tierGroup\",                 \"\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"007\", \"009\", \"012\", \"059\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"007\", \"009\", \"012\", \"059\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"USD\"]);\r",
											"    pm.environment.set(\"statementGeneration\",       \"001\");\r",
											"    pm.environment.set(\"statementType\",             \"900\");\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"132456789\");\r",
											"// Funding Client\r",
											"    pm.environment.set(\"fundingClientNumber\",       null);\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"102\",\"201\",\"352\",\"609\",\"991\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"002\",\"005\"]);\r",
											"    pm.environment.set(\"serviceTariff\",             \"000006\");\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "PS EU | Authorization and BankWORKS Variables",
					"item": [
						{
							"name": "PS EU | Access Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Set this variable as the Number of Items in the Hierarchy.",
											"    pm.globals.set (\"int\", \"8\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic {{base64(username:password)}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": [
								{
									"name": "Access Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic {{base64(username:password)}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}/oauth2/token",
											"host": [
												"{{hostName}}{{contextRoot}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 09 Aug 2019 17:17:09 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "151"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"refresh_token\": \"e63f86da-3188-40d8-b3c3-ac3705d910e4\",\n    \"access_token\": \"acb8e2fa-dd92-47ab-a54b-a2722444b762\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": \"1799\",\n    \"scope\": [\n        \"\",\n        \"scope\"\n    ]\n}"
								}
							]
						},
						{
							"name": "PS EU | Change User Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"password\", \"Rs2Adm1n!\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"newPassword\":\"Rs2Adm1n!\"\r\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}api/user-management/userpassword",
									"host": [
										"{{hostName}}{{contextRoot}}api"
									],
									"path": [
										"user-management",
										"userpassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS EU | Access Token - New Pasword",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic {{base64(username:password)}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": [
								{
									"name": "Access Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic {{base64(username:password)}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}/oauth2/token",
											"host": [
												"{{hostName}}{{contextRoot}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 09 Aug 2019 17:17:09 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "151"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"refresh_token\": \"e63f86da-3188-40d8-b3c3-ac3705d910e4\",\n    \"access_token\": \"acb8e2fa-dd92-47ab-a54b-a2722444b762\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": \"1799\",\n    \"scope\": [\n        \"\",\n        \"scope\"\n    ]\n}"
								}
							]
						},
						{
							"name": "PS EU | Next Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Processing next BankWORKS Client",
											"    if(pm.globals.get(\"int\") == \"8\") {",
											"        postman.setNextRequest(\"PS EU | H1 | Group (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"7\") {",
											"        postman.setNextRequest(\"PS EU | H1 | Sub-Group (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"6\") {",
											"        postman.setNextRequest(\"PS EU | H1 | MID (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"5\") {",
											"        postman.setNextRequest(\"PS EU | H1 | MID (2)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"4\") {",
											"        postman.setNextRequest(\"PS EU | H1 | MID (3)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"3\") {",
											"        postman.setNextRequest(\"PS EU | H2 | Group (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"2\") {",
											"        postman.setNextRequest(\"PS EU | H2 | Sub-Group (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"1\") {",
											"        postman.setNextRequest(\"PS EU | H2 | MID (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"0\") {",
											"        postman.setNextRequest(\"End Collection\");",
											"    }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/* ",
											"    Hierarchy Details",
											"    ",
											"    Levels are assigned as follows: ",
											"        3+ Level Heirarchy",
											"            Group       - 0",
											"            Sub-Groups  - 1 through N",
											"            Members     - -1",
											"        2 Level Heirarchy",
											"            Group       - 0",
											"            Members     - -2",
											"        Standalone Member",
											"            Members     - 0",
											"*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								},
								"description": "Merchant Details\n- Set the Client Number of the First Merchant and subsequent merchants will follow\n\nAddress Details \n- Insert Address Categories required\n\nContract Details \n- If all Merchants have the same Contract Details as below, then this need only be done once, for the Group Merchant. \n- Client Level must be inserted per each level.\n    \nSettlement/Account Details \n- Receivable Details still not supported.\n    \nFunding Client \n- If this is commented out, then it will not create a Funding Client Link when creating the Settlement Package.\n    \nService Details \n- If no services, comment out these two lines (CTRL + /)"
							},
							"response": []
						},
						{
							"name": "PS EU | H1 | Group (1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------",
											"    tests[\"Always OK\"] = responseCode.code === 404;",
											"// Hierarchy Level and Institution",
											"    pm.environment.set(\"hierarchyLevel\",            0);",
											"    pm.environment.set(\"institutionNumber\",         \"00000010\");",
											"// BankWORKS Client Details",
											"    pm.environment.set(\"clientNumber\",              \"10122220\");",
											"    pm.environment.set(\"country\",                   \"ESP\");    ",
											"    pm.environment.set(\"clientType\",                \"002\");",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");",
											"    pm.environment.set(\"processingRegion\",          \"000\");",
											"    pm.environment.set(\"state\",                     \"\");",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");",
											"    pm.environment.set(\"tierGroup\",                 \"\");",
											"    pm.environment.set(\"MCC\",                       \"8398\");",
											"    pm.environment.set(\"DMCC\",                      \"1437\");",
											"// Address Details",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");",
											"// Contract Details",
											"    pm.environment.set(\"clientLevel\",               \"002\");",
											"    pm.environment.set(\"serviceContractId\",         \"112\");",
											"    pm.environment.set(\"clientTariff\",              \"012487\");",
											"    pm.environment.set(\"clientScheme\",              \"000000\");",
											"    pm.environment.set(\"settlementMethod\",          \"469\");",
											"    pm.environment.set(\"postingMethod\",             \"006\");",
											"    pm.environment.set(\"transactionChargesTariff\",  \"001246\");",
											"// Settlement/Account Details",
											"    pm.environment.set(\"billingAccounts\",           null);",
											"    pm.environment.set(\"accountTypes\",              [\"012\",\"007\"]);",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"EUR\"]);",
											"    pm.environment.set(\"statementGeneration\",       \"001\");",
											"    pm.environment.set(\"statementType\",             \"900\");",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");",
											"// Service Details",
											"    pm.environment.set(\"services\",                  null);",
											"    pm.environment.set(\"cardBrands\",                null);",
											"// Next Request",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS EU | H1 | Sub-Group (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"10122221\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"003\");\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS EU | H1 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"10122222\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\",\"007\"]);\r",
											"// Funding Client\r",
											"    pm.environment.set(\"feeFundingClientNumber\",    null);\r",
											"    pm.environment.set(\"parFundingClientNumber\",    \"00000010\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"505\",\"506\",\"507\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"999\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS EU | H1 | MID (2)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"10122223\"); \r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\",\"007\"]);\r",
											"// Funding Client\r",
											"    pm.environment.set(\"feeFundingClientNumber\",    null);\r",
											"    pm.environment.set(\"parFundingClientNumber\",    \"00000010\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"505\",\"506\",\"507\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"999\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS EU | H1 | MID (3)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"10122224\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\",\"007\"]);\r",
											"// Funding Client\r",
											"    pm.environment.set(\"feeFundingClientNumber\",    null);\r",
											"    pm.environment.set(\"parFundingClientNumber\",    \"00000010\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"505\",\"506\",\"507\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"999\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS EU | H2 | Group (1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------",
											"    tests[\"Always OK\"] = responseCode.code === 404;",
											"// Hierarchy Level and Institution",
											"    pm.environment.set(\"hierarchyLevel\",            0);",
											"    pm.environment.set(\"institutionNumber\",         \"00000010\");",
											"// BankWORKS Client Details",
											"    pm.environment.set(\"clientNumber\",              \"10103003\");",
											"    pm.environment.set(\"country\",                   \"GBR\");    ",
											"    pm.environment.set(\"clientType\",                \"002\");",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");",
											"    pm.environment.set(\"processingRegion\",          \"000\");",
											"    pm.environment.set(\"state\",                     \"\");",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");",
											"    pm.environment.set(\"tierGroup\",                 \"\");",
											"    pm.environment.set(\"MCC\",                       \"8398\");",
											"    pm.environment.set(\"DMCC\",                      \"0000\");",
											"// Address Details",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");",
											"// Contract Details",
											"    pm.environment.set(\"clientLevel\",               \"002\");",
											"    pm.environment.set(\"serviceContractId\",         \"112\");",
											"    pm.environment.set(\"clientTariff\",              \"012509\");/*GBP_a0.01_c0.20_cbk25_A*/",
											"    pm.environment.set(\"clientScheme\",              \"000000\");",
											"    pm.environment.set(\"settlementMethod\",          \"421\");",
											"    pm.environment.set(\"postingMethod\",             \"009\"); /*ICPP*/",
											"    pm.environment.set(\"transactionChargesTariff\",  \"006633\");/*ICPP_0.08%_oct1.50_GBP*/",
											"// Settlement/Account Details",
											"    pm.environment.set(\"billingAccounts\",           null);",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"GBP\"]);",
											"    pm.environment.set(\"parFundingClientNumber\",    null);",
											"    pm.environment.set(\"feeFundingClientNumber\",    null);",
											"    pm.environment.set(\"statementGeneration\",       \"001\");",
											"    pm.environment.set(\"statementType\",             \"900\");",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");",
											"// Service Details",
											"    pm.environment.set(\"services\",                  null);",
											"    pm.environment.set(\"cardBrands\",                null);",
											"// Next Request",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS EU | H2 | Sub-Group (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"10103004\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"003\");\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS EU | H2 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"10103005\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\",\"007\"]);\r",
											"// Funding Client\r",
											"    pm.environment.set(\"feeFundingClientNumber\",    null);\r",
											"    pm.environment.set(\"parFundingClientNumber\",    \"00000010\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"505\",\"506\",\"507\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"999\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "PS UK | Authorization and BankWORKS Variables",
					"item": [
						{
							"name": "PS UK | Access Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Set this variable as the Number of Items in the Hierarchy.",
											"    pm.globals.set (\"int\", \"8\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic {{base64(username:password)}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": [
								{
									"name": "Access Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic {{base64(username:password)}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}/oauth2/token",
											"host": [
												"{{hostName}}{{contextRoot}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 09 Aug 2019 17:17:09 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "151"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"refresh_token\": \"e63f86da-3188-40d8-b3c3-ac3705d910e4\",\n    \"access_token\": \"acb8e2fa-dd92-47ab-a54b-a2722444b762\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": \"1799\",\n    \"scope\": [\n        \"\",\n        \"scope\"\n    ]\n}"
								}
							]
						},
						{
							"name": "PS UK | Change User Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"password\", \"Rs2Adm1n!\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"newPassword\":\"Rs2Adm1n!\"\r\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}api/user-management/userpassword",
									"host": [
										"{{hostName}}{{contextRoot}}api"
									],
									"path": [
										"user-management",
										"userpassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS UK | Access Token - New Pasword",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic {{base64(username:password)}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": [
								{
									"name": "Access Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic {{base64(username:password)}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}/oauth2/token",
											"host": [
												"{{hostName}}{{contextRoot}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 09 Aug 2019 17:17:09 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "151"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"refresh_token\": \"e63f86da-3188-40d8-b3c3-ac3705d910e4\",\n    \"access_token\": \"acb8e2fa-dd92-47ab-a54b-a2722444b762\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": \"1799\",\n    \"scope\": [\n        \"\",\n        \"scope\"\n    ]\n}"
								}
							]
						},
						{
							"name": "PS UK | Next Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Processing next BankWORKS Client",
											"    if(pm.globals.get(\"int\") == \"8\") {",
											"        postman.setNextRequest(\"PS UK | H1 | Group (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"7\") {",
											"        postman.setNextRequest(\"PS UK | H1 | Sub-Group (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"6\") {",
											"        postman.setNextRequest(\"PS UK | H1 | MID (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"5\") {",
											"        postman.setNextRequest(\"PS UK | H1 | MID (2)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"4\") {",
											"        postman.setNextRequest(\"PS UK | H1 | MID (3)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"3\") {",
											"        postman.setNextRequest(\"PS UK | H2 | Group (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"2\") {",
											"        postman.setNextRequest(\"PS UK | H2 | Sub-Group (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"1\") {",
											"        postman.setNextRequest(\"PS UK | H2 | MID (1)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"0\") {",
											"        postman.setNextRequest(\"End Collection\");",
											"    }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/* ",
											"    Hierarchy Details",
											"    ",
											"    Levels are assigned as follows: ",
											"        3+ Level Heirarchy",
											"            Group       - 0",
											"            Sub-Groups  - 1 through N",
											"            Members     - -1",
											"        2 Level Heirarchy",
											"            Group       - 0",
											"            Members     - -2",
											"        Standalone Member",
											"            Members     - 0",
											"*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								},
								"description": "Merchant Details\n- Set the Client Number of the First Merchant and subsequent merchants will follow\n\nAddress Details \n- Insert Address Categories required\n\nContract Details \n- If all Merchants have the same Contract Details as below, then this need only be done once, for the Group Merchant. \n- Client Level must be inserted per each level.\n    \nSettlement/Account Details \n- Receivable Details still not supported.\n    \nFunding Client \n- If this is commented out, then it will not create a Funding Client Link when creating the Settlement Package.\n    \nService Details \n- If no services, comment out these two lines (CTRL + /)"
							},
							"response": []
						},
						{
							"name": "PS UK | H1 | Group (1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------",
											"    tests[\"Always OK\"] = responseCode.code === 404;",
											"// Hierarchy Level and Institution",
											"    pm.environment.set(\"hierarchyLevel\",            0);",
											"    pm.environment.set(\"institutionNumber\",         \"00000010\");",
											"// BankWORKS Client Details",
											"    pm.environment.set(\"clientNumber\",              \"10102000\");",
											"    pm.environment.set(\"country\",                   \"ESP\");    ",
											"    pm.environment.set(\"clientType\",                \"002\");",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");",
											"    pm.environment.set(\"processingRegion\",          \"000\");",
											"    pm.environment.set(\"state\",                     \"\");",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");",
											"    pm.environment.set(\"tierGroup\",                 \"\");",
											"    pm.environment.set(\"MCC\",                       \"8398\");",
											"    pm.environment.set(\"DMCC\",                      \"1437\");",
											"// Address Details",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");",
											"// Contract Details",
											"    pm.environment.set(\"clientLevel\",               \"002\");",
											"    pm.environment.set(\"serviceContractId\",         \"112\");",
											"    pm.environment.set(\"clientTariff\",              \"012487\");",
											"    pm.environment.set(\"clientScheme\",              \"000000\");",
											"    pm.environment.set(\"settlementMethod\",          \"468\");",
											"    pm.environment.set(\"postingMethod\",             \"006\");",
											"    pm.environment.set(\"transactionChargesTariff\",  \"001246\");",
											"// Settlement/Account Details",
											"    pm.environment.set(\"billingAccounts\",           null);",
											"    pm.environment.set(\"accountTypes\",              [\"012\",\"007\"]);",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"EUR\"]);",
											"    pm.environment.set(\"statementGeneration\",       \"001\");",
											"    pm.environment.set(\"statementType\",             \"900\");",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");",
											"// Service Details",
											"    pm.environment.set(\"services\",                  null);",
											"    pm.environment.set(\"cardBrands\",                null);",
											"// Next Request",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS UK | H1 | Sub-Group (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"10102001\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"003\");\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS UK | H1 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"10102002\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\",\"007\"]);\r",
											"// Funding Client\r",
											"    pm.environment.set(\"feeFundingClientNumber\",    null);\r",
											"    pm.environment.set(\"parFundingClientNumber\",    \"50000004\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"505\",\"506\",\"507\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"999\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS UK | H1 | MID (2)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"10102003\");    \r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\",\"007\"]);\r",
											"// Funding Client\r",
											"    pm.environment.set(\"feeFundingClientNumber\",    null);\r",
											"    pm.environment.set(\"parFundingClientNumber\",    \"50000004\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"505\",\"506\",\"507\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"999\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS UK | H1 | MID (3)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"10102004\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\",\"007\"]);\r",
											"// Funding Client\r",
											"    pm.environment.set(\"feeFundingClientNumber\",    null);\r",
											"    pm.environment.set(\"parFundingClientNumber\",    \"50000004\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"505\",\"506\",\"507\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"999\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS UK | H2 | Group (1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------",
											"    tests[\"Always OK\"] = responseCode.code === 404;",
											"// Hierarchy Level and Institution",
											"    pm.environment.set(\"hierarchyLevel\",            0);",
											"    pm.environment.set(\"institutionNumber\",         \"00000010\");",
											"// BankWORKS Client Details",
											"    pm.environment.set(\"clientNumber\",              \"10103003\");",
											"    pm.environment.set(\"country\",                   \"GBR\");    ",
											"    pm.environment.set(\"clientType\",                \"002\");",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");",
											"    pm.environment.set(\"processingRegion\",          \"000\");",
											"    pm.environment.set(\"state\",                     \"\");",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");",
											"    pm.environment.set(\"tierGroup\",                 \"\");",
											"    pm.environment.set(\"MCC\",                       \"8398\");",
											"    pm.environment.set(\"DMCC\",                      \"0000\");",
											"// Address Details",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");",
											"// Contract Details",
											"    pm.environment.set(\"clientLevel\",               \"002\");",
											"    pm.environment.set(\"serviceContractId\",         \"112\");",
											"    pm.environment.set(\"clientTariff\",              \"012509\");/*GBP_a0.01_c0.20_cbk25_A*/",
											"    pm.environment.set(\"clientScheme\",              \"000000\");",
											"    pm.environment.set(\"settlementMethod\",          \"421\");",
											"    pm.environment.set(\"postingMethod\",             \"009\"); /*ICPP*/",
											"    pm.environment.set(\"transactionChargesTariff\",  \"006633\");/*ICPP_0.08%_oct1.50_GBP*/",
											"// Settlement/Account Details",
											"    pm.environment.set(\"billingAccounts\",           null);",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"GBP\"]);",
											"    pm.environment.set(\"parFundingClientNumber\",    null);",
											"    pm.environment.set(\"feeFundingClientNumber\",    null);",
											"    pm.environment.set(\"statementGeneration\",       \"001\");",
											"    pm.environment.set(\"statementType\",             \"900\");",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");",
											"// Service Details",
											"    pm.environment.set(\"services\",                  null);",
											"    pm.environment.set(\"cardBrands\",                null);",
											"// Next Request",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS UK | H2 | Sub-Group (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"10103004\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"003\");\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "PS UK | H2 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"10103005\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\",\"007\"]);\r",
											"// Funding Client\r",
											"    pm.environment.set(\"feeFundingClientNumber\",    null);\r",
											"    pm.environment.set(\"parFundingClientNumber\",    \"50000005\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"505\",\"506\",\"507\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"999\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "SUM | Authorization and BankWORKS Variables",
					"item": [
						{
							"name": "SUM | Access Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Set this variable as the Number of Items in the Hierarchy.",
											"    pm.globals.set (\"int\", \"12\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Basic {{base64(username:password)}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": []
						},
						{
							"name": "Change User Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.environment.set (\"password\", \"Rs2Adm1n!\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"newPassword\":\"Rs2Adm1n!\"\r\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}api/user-management/userpassword",
									"host": [
										"{{hostName}}{{contextRoot}}api"
									],
									"path": [
										"user-management",
										"userpassword"
									]
								},
								"description": "Test case to change the API password. A change in API Password is required at certain intervals on LIVE environment.\n\nAfter the password is changed, a new token is required."
							},
							"response": []
						},
						{
							"name": "SUM | Access Token - New Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Basic {{base64(username:password)}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": []
						},
						{
							"name": "SUM | Next Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Processing next BankWORKS Client",
											"    if(pm.globals.get(\"int\") == \"12\") {",
											"        postman.setNextRequest(\"SUM | H1 | MID\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"11\") {",
											"        postman.setNextRequest(\"SUM | H2 | MID\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"10\") {",
											"        postman.setNextRequest(\"SUM | H3 | MID\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"9\") {",
											"        postman.setNextRequest(\"SUM | H4 | MID\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"8\") {",
											"        postman.setNextRequest(\"SUM | H5 | MID\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"7\") {",
											"        postman.setNextRequest(\"SUM | H6 | MID\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"6\") {",
											"        postman.setNextRequest(\"SUM | H7 | MID\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"5\") {",
											"        postman.setNextRequest(\"SUM | H8 | MID\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"4\") {",
											"        postman.setNextRequest(\"SUM | H9 | MID\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"3\") {",
											"        postman.setNextRequest(\"SUM | H10 | MID\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"2\") {",
											"        postman.setNextRequest(\"SUM | H11 | MID\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"1\") {",
											"        postman.setNextRequest(\"SUM | H12 | MID\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"0\") {",
											"        postman.setNextRequest(\"End Collection\");",
											"    }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/* ",
											"    Hierarchy Details",
											"    ",
											"    Levels are assigned as follows: ",
											"        3+ Level Heirarchy",
											"            Group       - 0",
											"            Sub-Groups  - 1 through N",
											"            Members     - -1",
											"        2 Level Heirarchy",
											"            Group       - 0",
											"            Members     - -2",
											"        Standalone Member",
											"            Members     - 0",
											"*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								},
								"description": "Merchant Details\n- Set the Client Number of the First Merchant and subsequent merchants will follow\n\nAddress Details \n- Insert Address Categories required\n\nContract Details \n- If all Merchants have the same Contract Details as below, then this need only be done once, for the Group Merchant. \n- Client Level must be inserted per each level.\n    \nSettlement/Account Details \n- Receivable Details still not supported.\n    \nFunding Client \n- If this is commented out, then it will not create a Funding Client Link when creating the Settlement Package.\n    \nService Details \n- If no services, comment out these two lines (CTRL + /)"
							},
							"response": []
						},
						{
							"name": "SUM | H1 | MID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"    pm.environment.set(\"institutionNumber\",         \"00000112\");\r",
											"// BankWORKS Client Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11210000\");\r",
											"    pm.environment.set(\"country\",                   \"BRA\");    \r",
											"    pm.environment.set(\"clientType\",                \"002\");\r",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");\r",
											"    pm.environment.set(\"processingRegion\",          \"000\");\r",
											"    pm.environment.set(\"state\",                     \"\");\r",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");\r",
											"    pm.environment.set(\"tierGroup\",                 \"\");\r",
											"    pm.environment.set(\"MCC\",                       \"5499\"); //Supermarket\r",
											"    pm.environment.set(\"DMCC\",                      \"\");\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);\r",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"111\");\r",
											"    pm.environment.set(\"clientTariff\",              \"000000\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"001\");\r",
											"    pm.environment.set(\"postingMethod\",             \"999\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"BRL\"]);\r",
											"    pm.environment.set(\"statementGeneration\",       \"001\");\r",
											"    pm.environment.set(\"statementType\",             \"900\");\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"// Devices\r",
											"    pm.environment.set(\"devicesCounter\",            0);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "SUM | H2 | MID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"    pm.environment.set(\"institutionNumber\",         \"00000112\");\r",
											"// BankWORKS Client Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11210001\");\r",
											"    pm.environment.set(\"country\",                   \"BRA\");    \r",
											"    pm.environment.set(\"clientType\",                \"002\");\r",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");\r",
											"    pm.environment.set(\"processingRegion\",          \"000\");\r",
											"    pm.environment.set(\"state\",                     \"\");\r",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");\r",
											"    pm.environment.set(\"tierGroup\",                 \"\");\r",
											"    pm.environment.set(\"MCC\",                       \"5411\"); //Supermarket\r",
											"    pm.environment.set(\"DMCC\",                      \"\");\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);\r",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"111\");\r",
											"    pm.environment.set(\"clientTariff\",              \"000000\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"001\");\r",
											"    pm.environment.set(\"postingMethod\",             \"999\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"BRL\"]);\r",
											"    pm.environment.set(\"statementGeneration\",       \"001\");\r",
											"    pm.environment.set(\"statementType\",             \"900\");\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "SUM | H3 | MID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"    pm.environment.set(\"institutionNumber\",         \"00000112\");\r",
											"// BankWORKS Client Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11210002\");\r",
											"    pm.environment.set(\"country\",                   \"BRA\");    \r",
											"    pm.environment.set(\"clientType\",                \"002\");\r",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");\r",
											"    pm.environment.set(\"processingRegion\",          \"000\");\r",
											"    pm.environment.set(\"state\",                     \"\");\r",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");\r",
											"    pm.environment.set(\"tierGroup\",                 \"\");\r",
											"    pm.environment.set(\"MCC\",                       \"5542\"); //Gas\r",
											"    pm.environment.set(\"DMCC\",                      \"\");\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);\r",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"111\");\r",
											"    pm.environment.set(\"clientTariff\",              \"000000\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"001\");\r",
											"    pm.environment.set(\"postingMethod\",             \"999\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"BRL\"]);\r",
											"    pm.environment.set(\"statementGeneration\",       \"001\");\r",
											"    pm.environment.set(\"statementType\",             \"900\");\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "SUM | H4 | MID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"    pm.environment.set(\"institutionNumber\",         \"00000112\");\r",
											"// BankWORKS Client Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11210003\");\r",
											"    pm.environment.set(\"country\",                   \"BRA\");    \r",
											"    pm.environment.set(\"clientType\",                \"002\");\r",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");\r",
											"    pm.environment.set(\"processingRegion\",          \"000\");\r",
											"    pm.environment.set(\"state\",                     \"\");\r",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");\r",
											"    pm.environment.set(\"tierGroup\",                 \"\");\r",
											"    pm.environment.set(\"MCC\",                       \"5541\"); //Gas\r",
											"    pm.environment.set(\"DMCC\",                      \"\");\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);\r",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"111\");\r",
											"    pm.environment.set(\"clientTariff\",              \"000000\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"001\");\r",
											"    pm.environment.set(\"postingMethod\",             \"999\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"BRL\"]);\r",
											"    pm.environment.set(\"statementGeneration\",       \"001\");\r",
											"    pm.environment.set(\"statementType\",             \"900\");\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "SUM | H5 | MID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"    pm.environment.set(\"institutionNumber\",         \"00000112\");\r",
											"// BankWORKS Client Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11210004\");\r",
											"    pm.environment.set(\"country\",                   \"BRA\");    \r",
											"    pm.environment.set(\"clientType\",                \"002\");\r",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");\r",
											"    pm.environment.set(\"processingRegion\",          \"000\");\r",
											"    pm.environment.set(\"state\",                     \"\");\r",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");\r",
											"    pm.environment.set(\"tierGroup\",                 \"\");\r",
											"    pm.environment.set(\"MCC\",                       \"5912\"); //Gas\r",
											"    pm.environment.set(\"DMCC\",                      \"\");\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);\r",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"111\");\r",
											"    pm.environment.set(\"clientTariff\",              \"000000\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"001\");\r",
											"    pm.environment.set(\"postingMethod\",             \"999\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"BRL\"]);\r",
											"    pm.environment.set(\"statementGeneration\",       \"001\");\r",
											"    pm.environment.set(\"statementType\",             \"900\");\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "SUM | H6 | MID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"    pm.environment.set(\"institutionNumber\",         \"00000112\");\r",
											"// BankWORKS Client Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11210005\");\r",
											"    pm.environment.set(\"country\",                   \"BRA\");    \r",
											"    pm.environment.set(\"clientType\",                \"002\");\r",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");\r",
											"    pm.environment.set(\"processingRegion\",          \"000\");\r",
											"    pm.environment.set(\"state\",                     \"\");\r",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");\r",
											"    pm.environment.set(\"tierGroup\",                 \"\");\r",
											"    pm.environment.set(\"MCC\",                       \"5963\"); //Travel\r",
											"    pm.environment.set(\"DMCC\",                      \"\");\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);\r",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"111\");\r",
											"    pm.environment.set(\"clientTariff\",              \"000000\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"001\");\r",
											"    pm.environment.set(\"postingMethod\",             \"999\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"BRL\"]);\r",
											"    pm.environment.set(\"statementGeneration\",       \"001\");\r",
											"    pm.environment.set(\"statementType\",             \"900\");\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "SUM | H7 | MID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"    pm.environment.set(\"institutionNumber\",         \"00000112\");\r",
											"// BankWORKS Client Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11210006\");\r",
											"    pm.environment.set(\"country\",                   \"BRA\");    \r",
											"    pm.environment.set(\"clientType\",                \"002\");\r",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");\r",
											"    pm.environment.set(\"processingRegion\",          \"000\");\r",
											"    pm.environment.set(\"state\",                     \"\");\r",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");\r",
											"    pm.environment.set(\"tierGroup\",                 \"\");\r",
											"    pm.environment.set(\"MCC\",                       \"5712\"); //Travel\r",
											"    pm.environment.set(\"DMCC\",                      \"\");\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);\r",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"111\");\r",
											"    pm.environment.set(\"clientTariff\",              \"000000\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"001\");\r",
											"    pm.environment.set(\"postingMethod\",             \"999\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"BRL\"]);\r",
											"    pm.environment.set(\"statementGeneration\",       \"001\");\r",
											"    pm.environment.set(\"statementType\",             \"900\");\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "SUM | H8 | MID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"    pm.environment.set(\"institutionNumber\",         \"00000112\");\r",
											"// BankWORKS Client Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11210007\");\r",
											"    pm.environment.set(\"country\",                   \"BRA\");    \r",
											"    pm.environment.set(\"clientType\",                \"002\");\r",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");\r",
											"    pm.environment.set(\"processingRegion\",          \"000\");\r",
											"    pm.environment.set(\"state\",                     \"\");\r",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");\r",
											"    pm.environment.set(\"tierGroup\",                 \"\");\r",
											"    pm.environment.set(\"MCC\",                       \"6012\"); //Travel\r",
											"    pm.environment.set(\"DMCC\",                      \"\");\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);\r",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"111\");\r",
											"    pm.environment.set(\"clientTariff\",              \"000000\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"001\");\r",
											"    pm.environment.set(\"postingMethod\",             \"999\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"BRL\"]);\r",
											"    pm.environment.set(\"statementGeneration\",       \"001\");\r",
											"    pm.environment.set(\"statementType\",             \"900\");\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "SUM | H9 | MID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"    pm.environment.set(\"institutionNumber\",         \"00000112\");\r",
											"// BankWORKS Client Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11210008\");\r",
											"    pm.environment.set(\"country\",                   \"BRA\");    \r",
											"    pm.environment.set(\"clientType\",                \"002\");\r",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");\r",
											"    pm.environment.set(\"processingRegion\",          \"000\");\r",
											"    pm.environment.set(\"state\",                     \"\");\r",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");\r",
											"    pm.environment.set(\"tierGroup\",                 \"\");\r",
											"    pm.environment.set(\"MCC\",                       \"5969\"); //Travel\r",
											"    pm.environment.set(\"DMCC\",                      \"\");\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);\r",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"111\");\r",
											"    pm.environment.set(\"clientTariff\",              \"000000\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"001\");\r",
											"    pm.environment.set(\"postingMethod\",             \"999\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"BRL\"]);\r",
											"    pm.environment.set(\"statementGeneration\",       \"001\");\r",
											"    pm.environment.set(\"statementType\",             \"900\");\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "SUM | H10 | MID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"    pm.environment.set(\"institutionNumber\",         \"00000112\");\r",
											"// BankWORKS Client Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11210009\");\r",
											"    pm.environment.set(\"country\",                   \"BRA\");    \r",
											"    pm.environment.set(\"clientType\",                \"002\");\r",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");\r",
											"    pm.environment.set(\"processingRegion\",          \"000\");\r",
											"    pm.environment.set(\"state\",                     \"\");\r",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");\r",
											"    pm.environment.set(\"tierGroup\",                 \"\");\r",
											"    pm.environment.set(\"MCC\",                       \"5971\"); //Travel\r",
											"    pm.environment.set(\"DMCC\",                      \"\");\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);\r",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"111\");\r",
											"    pm.environment.set(\"clientTariff\",              \"000000\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"001\");\r",
											"    pm.environment.set(\"postingMethod\",             \"999\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"BRL\"]);\r",
											"    pm.environment.set(\"statementGeneration\",       \"001\");\r",
											"    pm.environment.set(\"statementType\",             \"900\");\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "SUM | H11 | MID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"    pm.environment.set(\"institutionNumber\",         \"00000112\");\r",
											"// BankWORKS Client Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11210010\");\r",
											"    pm.environment.set(\"country\",                   \"BRA\");    \r",
											"    pm.environment.set(\"clientType\",                \"002\");\r",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");\r",
											"    pm.environment.set(\"processingRegion\",          \"000\");\r",
											"    pm.environment.set(\"state\",                     \"\");\r",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");\r",
											"    pm.environment.set(\"tierGroup\",                 \"\");\r",
											"    pm.environment.set(\"MCC\",                       \"7011\"); //Travel\r",
											"    pm.environment.set(\"DMCC\",                      \"\");\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);\r",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"111\");\r",
											"    pm.environment.set(\"clientTariff\",              \"000000\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"001\");\r",
											"    pm.environment.set(\"postingMethod\",             \"999\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"BRL\"]);\r",
											"    pm.environment.set(\"statementGeneration\",       \"001\");\r",
											"    pm.environment.set(\"statementType\",             \"900\");\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "SUM | H12 | MID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"    pm.environment.set(\"institutionNumber\",         \"00000112\");\r",
											"// BankWORKS Client Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11210011\");\r",
											"    pm.environment.set(\"country\",                   \"BRA\");    \r",
											"    pm.environment.set(\"clientType\",                \"002\");\r",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");\r",
											"    pm.environment.set(\"processingRegion\",          \"000\");\r",
											"    pm.environment.set(\"state\",                     \"\");\r",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");\r",
											"    pm.environment.set(\"tierGroup\",                 \"\");\r",
											"    pm.environment.set(\"MCC\",                       \"5999\"); //Other\r",
											"    pm.environment.set(\"DMCC\",                      \"\");\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);\r",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"111\");\r",
											"    pm.environment.set(\"clientTariff\",              \"000000\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"001\");\r",
											"    pm.environment.set(\"postingMethod\",             \"999\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"BRL\"]);\r",
											"    pm.environment.set(\"statementGeneration\",       \"001\");\r",
											"    pm.environment.set(\"statementType\",             \"900\");\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						}
					],
					"description": "Authentication is based on OAuth2. In order to perform any API request, you need to first obtain a valid [access token](#request-access-token). This needs to be included as an Authorization header in each subsequent request. Note that the access token has a limited lifespan and would need to be refreshed if it expires. This is possible by using the [refresh token](#request-refresh-token) in order to obtain a new valid access token.\n\n_Please contact our [help desk](mailto:info@rs2.com) if you need a set of credentials to access the APIs._",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Response time is less than 1500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "FSEU | Authorization and BankWORKS Variables",
					"item": [
						{
							"name": "FSEU | Access Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Set this variable as the Number of Items in the Hierarchy.",
											"    pm.globals.set (\"int\", \"1\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Basic {{base64(username:password)}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": []
						},
						{
							"name": "Change User Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.environment.set (\"password\", \"LBtest12345!\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"newPassword\":\"LBtest12345!\"\r\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}api/user-management/userpassword",
									"host": [
										"{{hostName}}{{contextRoot}}api"
									],
									"path": [
										"user-management",
										"userpassword"
									]
								},
								"description": "Test case to change the API password. A change in API Password is required at certain intervals on LIVE environment.\n\nAfter the password is changed, a new token is required."
							},
							"response": []
						},
						{
							"name": "FSEU | Access Token - New Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Basic {{base64(username:password)}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": []
						},
						{
							"name": "FSEU | Next Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Processing next BankWORKS Client",
											"    if(pm.globals.get(\"int\") == \"1\") {",
											"        postman.setNextRequest(\"FSEU | H1 | MID\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"0\") {",
											"        postman.setNextRequest(\"End Collection\");",
											"    }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/* ",
											"    Hierarchy Details",
											"    ",
											"    Levels are assigned as follows: ",
											"        3+ Level Heirarchy",
											"            Group       - 0",
											"            Sub-Groups  - 1 through N",
											"            Members     - -1",
											"        2 Level Heirarchy",
											"            Group       - 0",
											"            Members     - -2",
											"        Standalone Member",
											"            Members     - 0",
											"*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								},
								"description": "Merchant Details\n- Set the Client Number of the First Merchant and subsequent merchants will follow\n\nAddress Details \n- Insert Address Categories required\n\nContract Details \n- If all Merchants have the same Contract Details as below, then this need only be done once, for the Group Merchant. \n- Client Level must be inserted per each level.\n    \nSettlement/Account Details \n- Receivable Details still not supported.\n    \nFunding Client \n- If this is commented out, then it will not create a Funding Client Link when creating the Settlement Package.\n    \nService Details \n- If no services, comment out these two lines (CTRL + /)"
							},
							"response": []
						},
						{
							"name": "FSEU | H1 | MID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"    pm.environment.set(\"institutionNumber\",         \"00000111\");\r",
											"// BankWORKS Client Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11100010\");\r",
											"    pm.environment.set(\"ourReference\",              \"11100000       \");    \r",
											"    pm.environment.set(\"country\",                   \"DEU\");    \r",
											"    pm.environment.set(\"clientType\",                \"002\");\r",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");\r",
											"    pm.environment.set(\"processingRegion\",          \"000\");\r",
											"    pm.environment.set(\"state\",                     \"\");\r",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");\r",
											"    pm.environment.set(\"tierGroup\",                 \"\");\r",
											"    pm.environment.set(\"MCC\",                       \"5999\"); //Miscellaneous\r",
											"    pm.environment.set(\"DMCC\",                      \"\");\r",
											"// Address Details\r",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);\r",
											"    pm.environment.set(\"deliveryMethod\",            \"500\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"serviceContractId\",         \"111\");\r",
											"    pm.environment.set(\"clientTariff\",              \"000001\");\r",
											"    pm.environment.set(\"clientScheme\",              \"000000\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"511\");\r",
											"    pm.environment.set(\"postingMethod\",             \"001\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000509\");\r",
											"    pm.environment.set(\"entityId\",                  \"001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"EUR\"]);\r",
											"    pm.environment.set(\"statementGeneration\",       \"001\");\r",
											"    pm.environment.set(\"statementType\",             \"900\");\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"301\",\"009\",\"102\",\"107\",\"109\",\"201\",\"202\",\"300\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"000\",\"005\",\"010\",\"042\",\"011\",\"028\",\"032\",\"039\"]);\r",
											"// Devices\r",
											"    pm.environment.set(\"devicesCounter\",            0);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						}
					],
					"description": "Authentication is based on OAuth2. In order to perform any API request, you need to first obtain a valid [access token](#request-access-token). This needs to be included as an Authorization header in each subsequent request. Note that the access token has a limited lifespan and would need to be refreshed if it expires. This is possible by using the [refresh token](#request-refresh-token) in order to obtain a new valid access token.\n\n_Please contact our [help desk](mailto:info@rs2.com) if you need a set of credentials to access the APIs._",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Response time is less than 1500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "TRP | Authorization and BankWORKS Variables",
					"item": [
						{
							"name": "TRP | Access Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Set this variable as the Number of Items in the Hierarchy.",
											"    pm.globals.set (\"int\", \"15\");",
											"    pm.environment.set(\"password\", \"Enigma.1234\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Basic {{base64(username:password)}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": [
								{
									"name": "Access Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic {{base64(username:password)}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}/oauth2/token",
											"host": [
												"{{hostName}}{{contextRoot}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 09 Aug 2019 17:17:09 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "151"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"refresh_token\": \"e63f86da-3188-40d8-b3c3-ac3705d910e4\",\n    \"access_token\": \"acb8e2fa-dd92-47ab-a54b-a2722444b762\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": \"1799\",\n    \"scope\": [\n        \"\",\n        \"scope\"\n    ]\n}"
								}
							]
						},
						{
							"name": "TRP | Change User Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"password\", \"Rs2Adm1n!\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"newPassword\":\"Rs2Adm1n!\"\r\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}api/user-management/userpassword",
									"host": [
										"{{hostName}}{{contextRoot}}api"
									],
									"path": [
										"user-management",
										"userpassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRP | Access Token - New Pasword",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"    tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"    var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"    tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"    tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"    tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"    pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"    pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Basic {{base64(username:password)}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}oauth2/token",
									"host": [
										"{{hostName}}{{contextRoot}}oauth2"
									],
									"path": [
										"token"
									]
								},
								"description": "To request an access token, provide the base64 encoded value of 'username:password' in the Authorization header (Basic Auth) with a grant_type set to 'client_credentials' in the body."
							},
							"response": [
								{
									"name": "Access Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Basic {{base64(username:password)}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}/oauth2/token",
											"host": [
												"{{hostName}}{{contextRoot}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 09 Aug 2019 17:17:09 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "151"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"refresh_token\": \"e63f86da-3188-40d8-b3c3-ac3705d910e4\",\n    \"access_token\": \"acb8e2fa-dd92-47ab-a54b-a2722444b762\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": \"1799\",\n    \"scope\": [\n        \"\",\n        \"scope\"\n    ]\n}"
								}
							]
						},
						{
							"name": "TRP | Next Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Processing next BankWORKS Client",
											"    if(pm.globals.get(\"int\") == \"15\") {",
											"        postman.setNextRequest(\"TRP | H1 | Group (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"14\") {",
											"        postman.setNextRequest(\"TRP | H1 | Sub-Group (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"13\") {",
											"        postman.setNextRequest(\"TRP | H1 | MID (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"12\") {",
											"        postman.setNextRequest(\"TRP | H1 | Sub-Group (2)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"11\") {",
											"        postman.setNextRequest(\"TRP | H1 | MID (2)\");",
											"    }",
											"    else if(pm.globals.get(\"int\") == \"10\") {",
											"        postman.setNextRequest(\"TRP | H2 | Group (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"9\") {",
											"        postman.setNextRequest(\"TRP | H2 | Sub-Group (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"8\") {",
											"        postman.setNextRequest(\"TRP | H2 | MID (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"7\") {",
											"        postman.setNextRequest(\"TRP | H2 | MID (2)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"6\") {",
											"        postman.setNextRequest(\"TRP | H3 | MID (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"5\") {",
											"        postman.setNextRequest(\"TRP | H4 | Group (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"4\") {",
											"        postman.setNextRequest(\"TRP | H4 | MID (1)\");",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"3\") {",
											"        postman.setNextRequest(\"TRP | H5 | MID (1)\");    ",
											"    }",
											"    else if (pm.globals.get(\"int\") == \"2\") {",
											"        postman.setNextRequest(\"TRP | H6 | MID (1)\");",
											"    }    ",
											"    else if (pm.globals.get(\"int\") == \"1\") {",
											"        postman.setNextRequest(\"TRP | H7 | MID (1)\");",
											"    }    ",
											"    else if(pm.globals.get(\"int\") == \"0\") {",
											"        postman.setNextRequest(\"End Collection\");",
											"    }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/* ",
											"    Hierarchy Details",
											"    ",
											"    Levels are assigned as follows: ",
											"        3+ Level Heirarchy",
											"            Group       - 0",
											"            Sub-Groups  - 1 through N",
											"            Members     - -1",
											"        2 Level Heirarchy",
											"            Group       - 0",
											"            Members     - -2",
											"        Standalone Member",
											"            Members     - 0",
											"*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								},
								"description": "Merchant Details\n- Set the Client Number of the First Merchant and subsequent merchants will follow\n\nAddress Details \n- Insert Address Categories required\n\nContract Details \n- If all Merchants have the same Contract Details as below, then this need only be done once, for the Group Merchant. \n- Client Level must be inserted per each level.\n    \nSettlement/Account Details \n- Receivable Details still not supported.\n    \nFunding Client \n- If this is commented out, then it will not create a Funding Client Link when creating the Settlement Package.\n    \nService Details \n- If no services, comment out these two lines (CTRL + /)"
							},
							"response": []
						},
						{
							"name": "TRP | H1 | Group (1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------",
											"    tests[\"Always OK\"] = responseCode.code === 404;",
											"    ",
											"// Hierarchy Level and Institution",
											"    pm.environment.set(\"hierarchyLevel\",            0);",
											"    pm.environment.set(\"institutionNumber\",         \"00000109\");",
											"// BankWORKS Client Details",
											"    pm.environment.set(\"clientNumber\",              \"11300091\");",
											"    pm.environment.set(\"country\",                   \"UKR\");",
											"    pm.environment.set(\"clientType\",                \"002\");",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");",
											"    pm.environment.set(\"processingRegion\",          \"000\");",
											"    pm.environment.set(\"state\",                     null);",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");",
											"    pm.environment.set(\"tierGroup\",                 \"000\");",
											"    pm.environment.set(\"MCC\",                       \"3754\");",
											"    pm.environment.set(\"DMCC\",                       \"\");",
											"    pm.environment.set(\"legalForm\",                 \"000\");",
											"// Address Details",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);",
											"    pm.environment.set(\"deliveryMethod\",            \"000\");   ",
											"// Contract Details",
											"    pm.environment.set(\"clientLevel\",               \"002\");",
											"    pm.environment.set(\"serviceContractId\",         \"112\");",
											"    pm.environment.set(\"clientTariff\",              \"500001\");",
											"    pm.environment.set(\"clientScheme\",              \"000000\");",
											"    pm.environment.set(\"settlementMethod\",          \"015\");",
											"    pm.environment.set(\"postingMethod\",             \"044\");",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");",
											"// Settlement/Account Details",
											"    pm.environment.set(\"billingAccounts\",           null);",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"GBP\"]);",
											"    pm.environment.set(\"statementGeneration\",       \"001\");",
											"    pm.environment.set(\"statementType\",             \"900\");",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");",
											"// Funding Client",
											"    pm.environment.set(\"parFundingClientNumber\",       null);",
											"    pm.environment.set(\"feeFundingClientNumber\",       null);",
											"// Service Details",
											"    pm.environment.set(\"services\",                  null);",
											"    pm.environment.set(\"cardBrands\",                null);",
											"// Next Request",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));",
											"",
											"//    pm.environment.set(\"clientNumber\", 1+Number(postman.getEnvironmentVariable(\"clientNumber\")));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRP | H1 | Sub-Group (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11300092\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"003\");\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRP | H1 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11300093\");\r",
											"    pm.environment.set(\"MCC\",                       \"3754\");\r",
											"    pm.environment.set(\"country\",                   \"UKR\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"clientTariff\",              \"500001\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"015\");\r",
											"    pm.environment.set(\"postingMethod\",             \"044\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"GBP\"]);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"501\",\"502\",\"503\",\"504\",\"505\",\"506\",\"507\",\"400\",\"401\",\"402\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"999\",\"000\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRP | H1 | Sub-Group (2)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11300094\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"003\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           null);\r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"GBP\"]);\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  null);\r",
											"    pm.environment.set(\"cardBrands\",                null);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRP | H1 | MID (2)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11300095\");\r",
											"    pm.environment.set(\"MCC\",                       \"3754\");\r",
											"    pm.environment.set(\"country\",                   \"UKR\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"clientTariff\",              \"500001\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"015\");\r",
											"    pm.environment.set(\"postingMethod\",             \"044\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"GBP\"]);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"501\",\"502\",\"503\",\"504\",\"505\",\"506\",\"507\",\"400\",\"401\",\"402\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"999\",\"000\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRP | H2 | Group (1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------",
											"    tests[\"Always OK\"] = responseCode.code === 404;",
											"// Hierarchy Level and Institution",
											"    pm.environment.set(\"hierarchyLevel\",            0);",
											"    pm.environment.set(\"institutionNumber\",         \"00000109\");",
											"// BankWORKS Client Details",
											"    pm.environment.set(\"clientNumber\",              \"11300096\");",
											"    pm.environment.set(\"country\",                   \"GBR\");    ",
											"    pm.environment.set(\"clientType\",                \"002\");",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");",
											"    pm.environment.set(\"processingRegion\",          \"000\");",
											"    pm.environment.set(\"state\",                     null);",
											"    pm.environment.set(\"registrationNumber\",        \"000000000000000\");",
											"    pm.environment.set(\"tierGroup\",                 \"000\");",
											"    pm.environment.set(\"MCC\",                       \"3756\");",
											"    pm.environment.set(\"legalForm\",                 \"000\");",
											"// Address Details",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);",
											"    pm.environment.set(\"deliveryMethod\",            \"000\");   ",
											"// Contract Details",
											"    pm.environment.set(\"clientLevel\",               \"002\");",
											"    pm.environment.set(\"serviceContractId\",         \"112\");",
											"    pm.environment.set(\"clientTariff\",              \"500001\");",
											"    pm.environment.set(\"clientScheme\",              \"000000\");",
											"    pm.environment.set(\"settlementMethod\",          \"016\");",
											"    pm.environment.set(\"postingMethod\",             \"024\");",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");",
											"// Settlement/Account Details",
											"    pm.environment.set(\"billingAccounts\",           null);",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"AUD\"]);",
											"    pm.environment.set(\"statementGeneration\",       \"001\");",
											"    pm.environment.set(\"statementType\",             \"900\");",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");",
											"// Service Details",
											"    pm.environment.set(\"services\",                  null);",
											"    pm.environment.set(\"cardBrands\",                null);",
											"// Next Request",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRP | H2 | Sub-Group (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11300097\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"003\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           null);\r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"AUD\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRP | H2 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11300098\");\r",
											"    pm.environment.set(\"MCC\",                       \"3756\");\r",
											"    pm.environment.set(\"country\",                   \"GBR\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"clientTariff\",              \"500001\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"016\");\r",
											"    pm.environment.set(\"postingMethod\",             \"024\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"AUD\"]);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"501\",\"502\",\"503\",\"504\",\"505\",\"506\",\"507\",\"400\",\"401\",\"402\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"999\",\"000\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRP | H2 | MID (2)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -1);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11300099\");\r",
											"    pm.environment.set(\"MCC\",                       \"3756\");\r",
											"    pm.environment.set(\"country\",                   \"GBR\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"clientTariff\",              \"500001\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"016\");\r",
											"    pm.environment.set(\"postingMethod\",             \"024\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"AUD\"]);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"501\",\"502\",\"503\",\"504\",\"505\",\"506\",\"507\",\"400\",\"401\",\"402\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"999\",\"000\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRP | H3 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11300100\");\r",
											"    pm.environment.set(\"MCC\",                       \"3757\");\r",
											"    pm.environment.set(\"country\",                   \"UZB\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"clientTariff\",              \"500001\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"017\");\r",
											"    pm.environment.set(\"postingMethod\",             \"025\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"CADF\"]);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"501\",\"502\",\"503\",\"504\",\"505\",\"506\",\"507\",\"400\",\"401\",\"402\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"999\",\"000\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRP | H4 | Group (1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------",
											"    tests[\"Always OK\"] = responseCode.code === 404;",
											"// Hierarchy Level and Institution",
											"    pm.environment.set(\"hierarchyLevel\",            0);",
											"    pm.environment.set(\"institutionNumber\",         \"00000109\");",
											"// BankWORKS Client Details",
											"    pm.environment.set(\"clientNumber\",              \"11300101\");",
											"    pm.environment.set(\"clientType\",                \"002\");",
											"    pm.environment.set(\"eCommerceIndicator\",        \"046\");",
											"    pm.environment.set(\"state\",                     null);",
											"    pm.environment.set(\"MCC\",                       \"3757\");",
											"    pm.environment.set(\"country\",                   \"UZB\");",
											"// Address Details",
											"    pm.environment.set(\"addressCategory\",           [\"001\",\"022\"]);",
											"    pm.environment.set(\"deliveryMethod\",            \"000\");   ",
											"// Contract Details",
											"    pm.environment.set(\"clientLevel\",               \"001\");",
											"    pm.environment.set(\"clientTariff\",              \"500001\");",
											"    pm.environment.set(\"settlementMethod\",          \"018\");",
											"    pm.environment.set(\"postingMethod\",             \"049\");",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");",
											"// Settlement/Account Details",
											"    pm.environment.set(\"billingAccounts\",           null);",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"EUR\"]);",
											"// Service Details",
											"    pm.environment.set(\"services\",                  null);",
											"    pm.environment.set(\"cardBrands\",                null);",
											"// Next Request",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRP | H4 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            -2);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11300102\");\r",
											"    pm.environment.set(\"MCC\",                       \"5072\");\r",
											"    pm.environment.set(\"country\",                   \"VAT\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"clientTariff\",              \"500001\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"018\");\r",
											"    pm.environment.set(\"postingMethod\",             \"049\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"EUR\"]);\r",
											"    pm.environment.set(\"bankClearingNumber\",        \"13245678\");\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"501\",\"502\",\"503\",\"504\",\"505\",\"506\",\"507\",\"400\",\"401\",\"402\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"999\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRP | H5 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11300103\");\r",
											"    pm.environment.set(\"MCC\",                       \"5094\");\r",
											"    pm.environment.set(\"country\",                   \"BLR\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"clientTariff\",              \"500001\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"019\");\r",
											"    pm.environment.set(\"postingMethod\",             \"050\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"GBP\"]);\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"501\",\"502\",\"503\",\"504\",\"505\",\"506\",\"507\",\"400\",\"401\",\"402\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"999\",\"000\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRP | H6 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11300104\");\r",
											"    pm.environment.set(\"MCC\",                       \"5094\");\r",
											"    pm.environment.set(\"country\",                   \"XKX\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"clientTariff\",              \"500001\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"011\");\r",
											"    pm.environment.set(\"postingMethod\",             \"058\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"USD\"]);\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"501\",\"502\",\"503\",\"504\",\"505\",\"506\",\"507\",\"400\",\"401\",\"402\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"999\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRP | H7 | MID (1)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Updating looping integer",
											"    pm.globals.set(\"int\", (Number(postman.getGlobalVariable(\"int\"))-1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// -------------------- Pre  Boarding --------------------\r",
											"    tests[\"Always OK\"] = responseCode.code === 404;\r",
											"\r",
											"// Hierarchy Level and Institution\r",
											"    pm.environment.set(\"hierarchyLevel\",            0);\r",
											"// Merchant Details\r",
											"    pm.environment.set(\"clientNumber\",              \"11300105\");\r",
											"    pm.environment.set(\"MCC\",                       \"5072\");\r",
											"    pm.environment.set(\"country\",                   \"VAT\");\r",
											"// Contract Details\r",
											"    pm.environment.set(\"clientLevel\",               \"001\");\r",
											"    pm.environment.set(\"clientTariff\",              \"500001\");\r",
											"    pm.environment.set(\"settlementMethod\",          \"018\");\r",
											"    pm.environment.set(\"postingMethod\",             \"056\");\r",
											"    pm.environment.set(\"transactionChargesTariff\",  \"000001\");\r",
											"// Settlement/Account Details\r",
											"    pm.environment.set(\"billingAccounts\",           [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"accountTypes\",              [\"007\",\"012\"]);\r",
											"    pm.environment.set(\"acctCurrencyArray\",         [\"PLN\"]);\r",
											"// Service Details\r",
											"    pm.environment.set(\"services\",                  [\"501\",\"502\",\"503\",\"504\",\"505\",\"506\",\"507\",\"400\",\"401\",\"402\"]);\r",
											"    pm.environment.set(\"cardBrands\",                [\"999\"]);\r",
											"// Next Request\r",
											"    postman.setNextRequest(\"Post Merchant Details\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "BankWORKS Client Boarding",
			"item": [
				{
					"name": "Post Merchant Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    tests[\"Status Code 201\"] = responseCode.code === 201;",
									"    var resp = JSON.parse(responseBody);",
									"    pm.environment.set(\"merchantId\", resp.data.id);",
									"    if (pm.environment.has(\"addressCategory\")) {",
									"        pm.environment.set(\"addrCounter\", 0);",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    if (pm.environment.get(\"broker\") === null || pm.environment.get(\"broker\") === false || pm.environment.get(\"broker\") === undefined) {",
									"        pm.environment.set(\"client\", \"merchants\");",
									"        pm.environment.set(\"processingRegion\", \"\\\"processingRegion\\\": \\\"000\\\",\");",
									"        pm.environment.set(\"serviceTelephone\", \"\\\"serviceTelephone\\\":\\\"9898989898\\\",\");",
									"    }",
									"    else {",
									"        pm.environment.set(\"client\", \"brokers\");",
									"        pm.environment.set(\"processingRegion\", \"\");",
									"        pm.environment.set(\"serviceTelephone\", \"\");",
									"    }",
									"    ",
									"    if (pm.environment.get(\"institutionNumber\") !== \"00000200\" || pm.environment.get(\"institutionNumber\") !== \"00000111\") {",
									"        pm.environment.set(\"ourReference\", pm.environment.get(\"clientNumber\"));",
									"    }",
									"",
									"    if (pm.environment.get(\"legalForm\") === null || pm.environment.get(\"legalForm\") === false || pm.environment.get(\"legalForm\") === undefined) {",
									"        pm.environment.set(\"legalForm\", \"001\");",
									"    }",
									"    else {",
									"        pm.environment.set(\"legalForm\", pm.environment.get(\"legalForm\"));",
									"    }",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Crnk-Compact",
								"type": "text",
								"value": "true"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"{{client}}\",\n        \"attributes\": {\n            \"clientNumber\": \"{{clientNumber}}\",\n            \"ourReference\": \"{{ourReference}}\",\n            \"clientType\": \"{{clientType}}\",\n            \"firstName\": \"Ñâmé\",\n            \"lastName\": \"T€ŠT!\",\n            \"registrationNumber\": \"123456\",\n            \"businessClass\": \"{{MCC}}\",\n            \"domesticMcc\": \"{{DMCC}}\",\n            \"shortName\": \"API Pipeline\",\n            \"language\": \"001\",\n            \"legalForm\": \"{{legalForm}}\",\n            \"vatRegistrationNumber\": \"BG123 122 1231\",\n            \"tradeName\": \"ÇôòöóPëñû\",\n            \"companyName\": \"ÇôòöóPëñû\",\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"{{country}}\",\n            {{processingRegion}}\n            \"mainContactDetails\": {\n                {{serviceTelephone}}\n                \"contactName\": \"ÇôòöóPëñû\"\n            },\n            \"middleName\": \"Middle Bill\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{hostName}}{{contextRoot}}{{serviceName}}{{client}}",
							"host": [
								"{{hostName}}{{contextRoot}}{{serviceName}}{{client}}"
							]
						},
						"description": "This call is the first step for onboarding and is **MANDATORY** to be created regardless of client level in the hierarchy. This API represents the main details of the client. For member level details (transacting merchant or lowest level in the hierarchy) this will include the unique merchant ID which stored in ourReference attribute of this request. \n\nA successful response will capture the ID of this merchants API resource such as the clientNumber and will be required on the succeeding API POST/PATCH calls for the following resources:\n\nPOST calls to:\n- /addresses\n- /merchantsAddendum\n- /merchantsAddendumUsa\n- /contracts\n- /settlementPackages\nPATCH to:\n- /merchants status for Application Processing\n\n**Important note:**\n\nFor merchant hierarchy onboarding, a top-down level approach should be followed such as Group level should be onboarded first followed by Sub-group level(s) and lastly the Member (transacting) level merchants. Please note that parent levels should be onboarded successfully (in ACTIVE status) before one can onboard the child level.\n\nEvery merchant pre-boarded to bankWORKS using WSM API will be marked with a specific status value of 023 (In Process), indicating that the merchant is not yet active in the system. After creation of the merchant followed by the related and required API resources for onboarding, the status of the merchant can be set to either 001 (Active) or 003 (Suspended) by sending a PATCH request to merchants API. Suspended status will only apply for member level merchants if needed.\n\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together. In this request, merchantId is assigned in order to be used to create related information of merchant in the succeeding calls."
					},
					"response": []
				},
				{
					"name": "Post Addresses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    tests[\"Merchant Addresses Created!\"] = responseCode.code === 201;",
									"    var resp = JSON.parse(responseBody);",
									"    ",
									"    if (Number(pm.environment.get(\"addrCounter\")+1) < Number(pm.environment.get(\"addressCategory\").length)) {",
									"        pm.environment.set(\"addrCounter\", pm.environment.get(\"addrCounter\") + 1);",
									"        postman.setNextRequest(\"Post Addresses\");",
									"    }",
									"    else {",
									"        if (pm.environment.get(\"institutionNumber\") === \"00000106\" || pm.environment.get(\"institutionNumber\") === \"00000200\") {",
									"            postman.setNextRequest(\"Post USA Merchant Addendum\");",
									"        }",
									"        else if (pm.environment.get(\"institutionNumber\") === \"00000109\" || pm.environment.get(\"institutionNumber\") === \"00000115\" || pm.environment.get(\"institutionNumber\") === \"00000112\" || pm.environment.get(\"institutionNumber\") === \"00000111\") {",
									"            postman.setNextRequest(\"Get Contract Definitions\");",
									"        }",
									"        else {",
									"            postman.setNextRequest();",
									"        }",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    var x = pm.environment.get(\"addrCounter\");",
									"    pm.environment.set(\"category\", pm.environment.get(\"addressCategory\")[x]);",
									"    ",
									"    if (pm.environment.get(\"country\") == \"USA\") {",
									"        pm.environment.set(\"countryState\", \"\\\"state\\\": \\\"{{state}}\\\",\");",
									"    }",
									"    else {",
									"        pm.environment.set(\"countryState\", \"\\\"state\\\": \\\"\\\",\");",
									"    }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Crnk-Compact",
								"type": "text",
								"value": "true"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"addresses\",\n        \"attributes\": {\n            {{countryState}}\n            \"addressCategory\": \"{{category}}\",\n            \"addressLine1\": \"Address ÇôòöóPëñû\",\n            \"addressLine2\": \"Main Street\",\n            \"addressLine3\": \"Main Place\",\n            \"addressLine4\": \"Main Block\",\n            \"addressLine5\": \"Block 5, Apartment 1\",\n            \"city\": \"City Name\",\n            \"postCode\": \"6010\",\n            \"country\": \"{{country}}\",\n            \"telephone1\": \"123456\",\n            \"telephone2\": \"234567\",\n            \"faxWork\": \"345678\",\n            \"deliveryMethod\": \"{{deliveryMethod}}\",\n            \"emailAddress\": \"email@rs2.com\",\n            \"contactName\": \"Ñâmé\"\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"type\": \"merchants\",\n                    \"id\": \"{{merchantId}}\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{hostName}}{{contextRoot}}{{serviceName}}addresses",
							"host": [
								"{{hostName}}{{contextRoot}}{{serviceName}}addresses"
							]
						},
						"description": "This call is **MANDATORY**.\n\nThis call will create merchant address/es depending on what address categories are required upon onboarding. Below are the minimum requirements and each category is equivalent to 1 API request:\n- Standard Address (**addressCategory 001**) is used mostly in reporting or any user interface where standard/default address is needed. \n- Clearing Address (**addressCategory 022**) is needed for outward clearing file to be sent to card schemes. This address should represent the physical location of the merchant and will most likely be the same as the Standard address. This can be enhanced in the future such that one API call for addresses will create both Standard and Clearing.\n- **merchants** resource will need to be linked to addresses"
					},
					"response": []
				},
				{
					"name": "Post Merchant Addendum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    tests[\"Status Code 201\"] = responseCode.code === 201;",
									"    ",
									"    var resp = JSON.parse(responseBody);",
									"    pm.environment.set(\"merchantAddendumId\", resp.data.id);",
									"    ",
									"    if (pm.environment.get(\"institutionNumber\") === \"00000200\") {",
									"        postman.setNextRequest();",
									"    }",
									"    else {",
									"        postman.setNextRequest(\"Get Contract Definitions\");",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Crnk-Compact",
								"type": "text",
								"value": "true"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"type\": \"merchantsAddendum\",\r\n        \"attributes\": {\r\n            \"feeProgramIndicator\": \"001\",\r\n            \"seasonalMerchant\": \"001\",\r\n            \"mastercardInterchangeProgram\": \"418587\",\r\n            \"mastercardInterchangeProgramQualification\": \"005\"\r\n        },\r\n        \"relationships\": {\r\n            \"merchant\": {\r\n                \"data\": {\r\n                    \"type\": \"merchants\",\r\n                    \"id\": \"{{merchantId}}\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{hostName}}{{contextRoot}}{{serviceName}}merchantsAddendum",
							"host": [
								"{{hostName}}{{contextRoot}}{{serviceName}}merchantsAddendum"
							]
						},
						"description": "This call is **OPTIONAL** and will create additional merchant attributes and flags. Attributes in this call should be generic regardless of the merchant country.\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together."
					},
					"response": []
				},
				{
					"name": "Post USA Merchant Addendum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    tests[\"Status Code 201\"] = responseCode.code === 201;",
									"    ",
									"    var resp = JSON.parse(responseBody);",
									"    pm.environment.set(\"merchantAddendumUsaId\", resp.data.id);",
									"    ",
									"    if (pm.environment.get(\"institutionNumber\") === \"00000200\") {",
									"        postman.setNextRequest();",
									"    }",
									"    else {",
									"        postman.setNextRequest(\"Get Contract Definitions\");",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Crnk-Compact",
								"type": "text",
								"value": "true"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"merchantsAddendumUsa\",\n        \"attributes\": {\n            \"taxId\": \"123456\",\n            \"independentSalesOrganisation\": \"GM SalesOrg\",\n            \"url\": \"http://www.website.com\"\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"type\": \"merchants\",\n                    \"id\": \"{{merchantId}}\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{hostName}}{{contextRoot}}{{serviceName}}merchantsAddendumUsa",
							"host": [
								"{{hostName}}{{contextRoot}}{{serviceName}}merchantsAddendumUsa"
							]
						},
						"description": "This call is **OPTIONAL**.\n\nThis call will create additional merchant attributes and flag for merchants based in USA.\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together."
					},
					"response": []
				},
				{
					"name": "Post Client References",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    tests[\"Status Code 201\"] = responseCode.code === 201;",
									"    ",
									"    var resp = JSON.parse(responseBody);",
									"    pm.environment.set(\"clientReferencesId\", resp.data.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Crnk-Compact",
								"type": "text",
								"value": "true"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"clientReferences\",\n        \"attributes\": {\n            \"referenceValue\": \"123456\",\n            \"referenceType\": \"001\"\n        },\n        \"relationships\": {\n            \"merchantAddendum\": {\n                \"data\": {\n                    \"type\": \"merchantsAddendum\",\n                    \"id\": \"{{merchantId}}\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{hostName}}{{contextRoot}}{{serviceName}}clientReferences",
							"host": [
								"{{hostName}}{{contextRoot}}{{serviceName}}clientReferences"
							]
						},
						"description": "This call is **OPTIONAL**.\n\nThis call will create additional merchant attributes and flag for merchants based in USA.\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together."
					},
					"response": []
				},
				{
					"name": "Get Contract Definitions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    if (pm.environment.has(\"services\") === false || pm.environment.get(\"services\") === null) {",
									"        pm.environment.set(\"serviceDefinitionsParams\", \"accountDefinitions\");",
									"    }",
									"    else {",
									"        pm.environment.set(\"serviceDefinitionsParams\", \"serviceDefinitions\");",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"    tests[\"Status Code 201\"] = responseCode.code === 200;",
									"    var data = JSON.parse(responseBody);",
									"    pm.environment.set(\"contractId\", data.data[0].id);",
									"    ",
									"// Checks if the services variable is defined. If defined, it populates the myServices Array of Service IDs",
									"    if (pm.environment.has(\"services\") === true && pm.environment.get(\"services\") !== null) {",
									"        var data = JSON.parse(responseBody);",
									"        pm.environment.set(\"serviceDefinitions\", data.data.forEach(contractDefinition => {",
									"            const result = contractDefinition.relationships.serviceDefinitions.data.reduce((serviceDefIds, serviceDefinition) => {",
									"                serviceDefIds.push(serviceDefinition.id);",
									"                pm.environment.set(\"myServices\", serviceDefIds);",
									"                return serviceDefIds;",
									"            }, []);",
									"        }));",
									"        pm.environment.set(\"position\", 0);",
									"        pm.environment.set(\"devicesCounter\", 0);",
									"        pm.environment.unset(\"serviceDefinitions\");",
									"    }",
									"//Checks if the accounts variable is defined. If defined, it populates the myAccounts Array of Service IDs",
									"    if (pm.environment.has(\"acctCurrencyArray\")) {",
									"        pm.environment.set(\"accountDefinitions\", data.data.forEach(contractDefinition => {",
									"            const result = contractDefinition.relationships.accountDefinitions.data.reduce((accountDefIds, accountDefinitions) => {",
									"                accountDefIds.push(accountDefinitions.id);",
									"                pm.environment.set(\"myAccounts\", accountDefIds);",
									"                return accountDefIds;",
									"            }, []);",
									"        }));",
									"        pm.environment.unset(\"accountDefinitions\");",
									"        pm.environment.set(\"acctCounter\", 0);",
									"    }",
									"    ",
									"    if (pm.environment.get(\"clientLevel\" != \"001\")) {",
									"        pm.environment.unset(\"position\");",
									"        pm.environment.unset(\"devicesCounter\");",
									"        pm.environment.unset(\"myServices\");",
									"        pm.environment.unset(\"services\");",
									"    }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Crnk-Compact",
								"value": "true",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contractDefinitions?include=accountDefinitions&include={{serviceDefinitionsParams}}&filter[accountDefinitions][accountTypeId]={{accountTypes}}&filter[accountDefinitions][accountCurrency]={{acctCurrencyArray}}&filter[serviceDefinitions][serviceId]={{services}}&fields[serviceDefinitions]=id&sort[accountDefinitions]=id&sort[serviceDefinitions]=id&filter[id]=serviceContractId={{serviceContractId}}&filter[serviceDefinitions][cardBrand]={{cardBrands}}",
							"host": [
								"{{hostName}}{{contextRoot}}{{serviceName}}contractDefinitions"
							],
							"query": [
								{
									"key": "include",
									"value": "accountDefinitions"
								},
								{
									"key": "include",
									"value": "{{serviceDefinitionsParams}}"
								},
								{
									"key": "filter[accountDefinitions][accountTypeId]",
									"value": "{{accountTypes}}"
								},
								{
									"key": "filter[accountDefinitions][accountCurrency]",
									"value": "{{acctCurrencyArray}}"
								},
								{
									"key": "filter[serviceDefinitions][serviceId]",
									"value": "{{services}}"
								},
								{
									"key": "fields[serviceDefinitions]",
									"value": "id"
								},
								{
									"key": "sort[accountDefinitions]",
									"value": "id"
								},
								{
									"key": "sort[serviceDefinitions]",
									"value": "id"
								},
								{
									"key": "filter[id]",
									"value": "serviceContractId={{serviceContractId}}"
								},
								{
									"key": "filter[serviceDefinitions][cardBrand]",
									"value": "{{cardBrands}}"
								}
							]
						},
						"description": "Mandatory to determine details such as the Account IDs and Service IDs."
					},
					"response": []
				},
				{
					"name": "Post Merchant Contract",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Declaring the relationship based on client level",
									"// Is Standalone Member or Group",
									"    if (pm.environment.get(\"hierarchyLevel\") === 0) {",
									"        pm.environment.set(\"contractRelationship\",  \"contractDefinition\");",
									"        pm.environment.set(\"type\",                  \"contractDefinitions\");",
									"        pm.environment.set(\"levelContractId\",       \"{{contractId}}\");",
									"    }",
									"// Is Sub-Group in Hierarchy - Supports 8 Sub-Group Levels (excluding Group and Member levels)",
									"    else if (pm.environment.get(\"hierarchyLevel\") >= 1) {",
									"        pm.environment.set(\"contractRelationship\",  \"parentContracts\");",
									"        pm.environment.set(\"type\",                  \"contracts\");",
									"// Creating Sub-Group Hierarchies",
									"        if (pm.environment.get(\"hierarchyLevel\") == 1) {",
									"            pm.environment.set(\"levelContractId\",   \"{{groupContractId}}\");",
									"        }",
									"        else if (pm.environment.get(\"hierarchyLevel\") == 2) {",
									"            pm.environment.set(\"levelContractId\",   \"{{sub1ContractId}}\");",
									"        }",
									"        else if (pm.environment.get(\"hierarchyLevel\") == 3) {",
									"            pm.environment.set(\"levelContractId\",   \"{{sub2ContractId}}\");",
									"        }",
									"        else if (pm.environment.get(\"hierarchyLevel\") == 4) {",
									"            pm.environment.set(\"levelContractId\",   \"{{sub3ContractId}}\");",
									"        }",
									"        else if (pm.environment.get(\"hierarchyLevel\") == 5) {",
									"            pm.environment.set(\"levelContractId\",   \"{{sub4ContractId}}\");",
									"        }",
									"        else if (pm.environment.get(\"hierarchyLevel\") == 6) {",
									"            pm.environment.set(\"levelContractId\",   \"{{sub5ContractId}}\");",
									"        }",
									"        else if (pm.environment.get(\"hierarchyLevel\") == 7) {",
									"            pm.environment.set(\"levelContractId\",   \"{{sub6ContractId}}\");",
									"        }",
									"        else if (pm.environment.get(\"hierarchyLevel\") == 8) {",
									"            pm.environment.set(\"levelContractId\",   \"{{sub7ContractId}}\");",
									"        }",
									"    }",
									"// Is Member in Hierarchy (2 Level)",
									"    else if (pm.environment.get(\"hierarchyLevel\") == -2) {",
									"        pm.environment.set(\"levelContractId\",       \"{{groupContractId}}\");",
									"        pm.environment.set(\"contractRelationship\",  \"parentContracts\");",
									"        pm.environment.set(\"type\",                  \"contracts\");",
									"    }",
									"// Is Member in Hierarchy (3+ Level)",
									"    else if (pm.environment.get(\"hierarchyLevel\") == -1) {",
									"        pm.environment.set(\"levelContractId\",       \"{{upperContractID}}\");",
									"        pm.environment.set(\"contractRelationship\",  \"parentContracts\");",
									"        pm.environment.set(\"type\",                  \"contracts\");",
									"    }",
									"// If BOA - Set Entity ID",
									"    if (pm.environment.get(\"institutionNumber\") == \"00000200\" || pm.environment.get(\"institutionNumber\") == \"00000111\") {",
									"        pm.environment.set(\"entity\", \"\\\"entityId\\\" : \\\"{{entityId}}\\\",\");",
									"    }",
									"    else {",
									"        pm.environment.set(\"entity\", \"\");",
									"    }",
									"// If BNZ - Do not set Transaction Charges Tariff",
									"    if (pm.environment.get(\"institutionNumber\") !== \"00000108\" && pm.environment.get(\"institutionNumber\") !== \"00000106\") {",
									"        pm.environment.set(\"merchantTranTariff\", \"\\\"transactionChargesTariff\\\" : \\\"{{transactionChargesTariff}}\\\",\");",
									"    }",
									"    else {",
									"        pm.environment.set(\"merchantTranTariff\", \"\");",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Setting Contract Variables based on Hierarchy",
									"    tests[\"Status Code 201\"] = responseCode.code === 201;",
									"    var resp = JSON.parse(responseBody);",
									"    pm.environment.set(\"currentContractId\",resp.data.id);",
									"    if (pm.environment.get(\"hierarchyLevel\") === 0) {",
									"// Group",
									"        if (pm.environment.get(\"clientLevel\") == \"002\") {",
									"            pm.environment.set(\"groupContractId\",   resp.data.id);",
									"            pm.environment.set(\"upperContractID\",   resp.data.id);",
									"        }",
									"// Standalone Member",
									"        else if (pm.environment.get(\"clientLevel\") == \"001\") {",
									"            pm.environment.set(\"contractId\",     resp.data.id);",
									"        }",
									"    }",
									"// Sub-Group",
									"    else if     (pm.environment.get(\"hierarchyLevel\") >= 1) { pm.environment.set(\"upperContractID\",resp.data.id);",
									"        if      (pm.environment.get(\"hierarchyLevel\") == 1) { pm.environment.set(\"sub1ContractId\",resp.data.id); }",
									"        else if (pm.environment.get(\"hierarchyLevel\") == 2) { pm.environment.set(\"sub2ContractId\",resp.data.id); }",
									"        else if (pm.environment.get(\"hierarchyLevel\") == 3) { pm.environment.set(\"sub3ContractId\",resp.data.id); }",
									"        else if (pm.environment.get(\"hierarchyLevel\") == 4) { pm.environment.set(\"sub4ContractId\",resp.data.id); }",
									"        else if (pm.environment.get(\"hierarchyLevel\") == 5) { pm.environment.set(\"sub5ContractId\",resp.data.id); }",
									"        else if (pm.environment.get(\"hierarchyLevel\") == 6) { pm.environment.set(\"sub6ContractId\",resp.data.id); }",
									"        else if (pm.environment.get(\"hierarchyLevel\") == 7) { pm.environment.set(\"sub7ContractId\",resp.data.id); }",
									"        else if (pm.environment.get(\"hierarchyLevel\") == 8) { pm.environment.set(\"sub8ContractId\",resp.data.id); }",
									"    }",
									"// Member in Hierarchy",
									"    else {",
									"        pm.environment.set(\"contractId\",     resp.data.id);",
									"    }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Crnk-Compact",
								"type": "text",
								"value": "true"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            {{entity}}\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"{{clientScheme}}\",\n            \"clientLevel\": \"{{clientLevel}}\",\n            \"settlementMethod\": \"{{settlementMethod}}\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"{{postingMethod}}\",\n            {{merchantTranTariff}}\n            \"tierGroup\": \"{{tierGroup}}\"\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"type\": \"merchants\",\n                    \"id\": \"{{merchantId}}\"\n                }\n            },\n            \"{{contractRelationship}}\": {\n                \"data\": {\n                    \"type\": \"{{type}}\",\n                    \"id\": \"{{levelContractId}}\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts",
							"host": [
								"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
							]
						},
						"description": "This will create a contract resource for a new client and is **MANDATORY** to be created regardless of client level. Creation of new contracts is not possible following client onboarding. Can be used to create future effective changes to a current contract record. \n\n**IMPORTANT NOTE:**\n\n*ATTRIBUTES:*\n\n- a top-down level approach creation below should be followed. The attribute **clientLevel** in this resource will need to be specified for each client level contract creation. Below are the available client levels available in BankWorks:\n\t- Group level: **002**\n\t- Subgroup level: **003**\n\t- Member level: **001**\n- **clientTariff** value can be retrieved from the list of **accountFeeDefinitions** or **serviceFeeDefinitions** prior this call\n- **transactionChargesTariff** value can be retrieved from **productChargeDefinitions** API prior this call\n\n*RELATIONSHIPS:*\n\n- **merchant** resource created should be associated in the relationships\n- **contractDefinition** is required in the relationship association as well for contract creation of **Group level** or **Standalone** merchants.\n- for creation of **Subgroup and Member level** contracts, **parentContracts** relationship should be associated instead of *contractDefinition* from the example request. Contract ID of the parent will need to be passed in this relationship.\n\t```\n\t\"parentContracts\" : {\n\t\t\"data\" : {\n\t\t\t\"type\" : \"contracts\",\n\t\t\t\"id\" : \"{{parentContractId}}\"\n\t\t}\n\t}\n\t```"
					},
					"response": []
				},
				{
					"name": "Post Settlement Package",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var account = pm.environment.get(\"myAccounts\");",
									"    var x = Number(pm.environment.get(\"acctCounter\"));",
									"    pm.environment.set(\"currency\", JSON.stringify(pm.environment.get(\"myAccounts\")[pm.environment.get(\"acctCounter\")]).split(\"&\")[1].split(\"=\")[1]);",
									"    pm.environment.set(\"accountTypeId\", JSON.stringify(pm.environment.get(\"myAccounts\")[pm.environment.get(\"acctCounter\")]).split(\"&\")[0].split(\"=\")[1]);",
									"    // Funding Client if Required.",
									"    if (pm.environment.get(\"accountTypeId\") == \"012\" && pm.environment.has(\"parFundingClientNumber\") === true && pm.environment.get(\"parFundingClientNumber\") !== null) {",
									"    \tpm.environment.set(\"settlementCategory\", \"001\");",
									"    \tpm.environment.set(\"funding\", \"\\\"fundingClient\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"fundingClients\\\", \\r \\\"id\\\": \\\"clientNumber={{parFundingClientNumber}}\\\"\\r}\\r},\");",
									"    }",
									"    else if (pm.environment.get(\"accountTypeId\") == \"007\" && pm.environment.has(\"feeFundingClientNumber\") === true && pm.environment.get(\"feeFundingClientNumber\") !== null) {",
									"    \tpm.environment.set(\"settlementCategory\", \"002\");",
									"    \tpm.environment.set(\"funding\", \"\\\"fundingClient\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"fundingClients\\\", \\r \\\"id\\\": \\\"clientNumber={{feeFundingClientNumber}}\\\"\\r}\\r},\");",
									"    }",
									"    else {",
									"       \tpm.environment.set(\"settlementCategory\", \"001\");",
									"        pm.environment.set(\"funding\", \"\");",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"    tests[\"Status Code 201\"] = responseCode.code === 201;",
									"    var resp = JSON.parse(responseBody);",
									"    pm.environment.set(\"settlementPackageId\", resp.data.id);",
									"    ",
									"    if (pm.environment.get(\"institutionNumber\") !== \"00000200\") {",
									"        postman.setNextRequest(\"Post Accounts\");",
									"    }",
									"    else {",
									"        postman.setNextRequest();",
									"    }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Crnk-Compact",
								"value": "true",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"settlementPackages\",\n        \"attributes\": {\n            \"settlementCategory\": \"{{settlementCategory}}\",\n            \"bankClearingNumber\": \"{{bankClearingNumber}}\",\n            \"bankTelNumber\": \"1236547890\",\n            \"paymentReference\": \"PR_665522KT\",\n            \"paymentMethod\": \"002\",\n            \"accountCurrency\": \"{{currency}}\",\n            \"contingencyLiabilityAccount\": \"\",\n            \"correspondingBankAccount\": \"84783403\",\n            \"correspondingBankNumber\": \"00000000030080508568\",\n            \"receiverCountryCode\": \"{{country}}\",\n            \"noteText\": \"Max Testing\",\n            \"payableDetails\": {\n                \"counterBankAccount\": \"30345677\",\n                \"confirmationMethod\": \"003\",\n                \"bankContactName\": \"BANK_CONTACT_NAME\",\n                \"counterBankCity\": \"Count Bank City\"\n            }\n        },\n        \"relationships\": {\n            {{funding}}\n            \"merchant\": {\n                \"data\": {\n                    \"type\": \"merchants\",\n                    \"id\": \"{{merchantId}}\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{hostName}}{{contextRoot}}{{serviceName}}settlementPackages",
							"host": [
								"{{hostName}}{{contextRoot}}{{serviceName}}settlementPackages"
							]
						},
						"description": "This will define the settlement information including RBS bank account number of the merchant and is **MANDATORY** only if a **billing level** account is to be created.\n\nMultiple settlement information/package can be added (up to 99). This number will be set automatically and stored in settlementNumber as part of the resource ID.\n\nFor settlementPackages with related **fundingClient**, it is to be associated in the relationship from the request apart from **merchant** relationship/linkage:\n\t\n```\n\t\"fundingClient\": {\n        \"data\": {\n          \"type\": \"fundingClients\",\n          \"id\": \"{{fundingClientId}}\"\n        }\n      }\n```"
					},
					"response": []
				},
				{
					"name": "Post Mandate Information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    tests[\"Status Code 201\"] = responseCode.code === 201;",
									"    var resp = JSON.parse(responseBody);",
									"    pm.environment.set(\"mandateInformationId\", resp.data.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Crnk-Compact",
								"type": "text",
								"value": "true"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"mandateInformation\",\n        \"attributes\": {\n            \"uniqueMandateReference\": \"MANDJMH002\",\n            \"instrumentCode\": \"001\",\n            \"firstOccurrence\": \"001\",\n            \"signatureDate\": \"2019-12-31\"\n        },\n        \"relationships\": {\n            \"settlementPackages\": {\n                \"data\": {\n                    \"type\": \"settlementPackages\",\n                    \"id\": \"{{settlementPackageId}}\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{hostName}}{{contextRoot}}{{serviceName}}mandateInformation",
							"host": [
								"{{hostName}}{{contextRoot}}{{serviceName}}mandateInformation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Accounts",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Utilising the account ID based on the next AccountDefinition ID in the myAccounts array",
									"    var account = pm.environment.get(\"myAccounts\");",
									"    var x = Number(pm.environment.get(\"acctCounter\"));",
									"    pm.environment.set(\"accountId\", JSON.parse(JSON.stringify(account[x])));",
									"    pm.environment.set(\"accountTypeId\", pm.environment.get(\"accountId\").split(\"&\")[0].split(\"=\")[1]);",
									"    var billings = pm.environment.get(\"billingAccounts\");",
									"// Billing Level determines if there should be a Settlement Information record link",
									"    if (pm.environment.get(\"billingAccounts\") === undefined || pm.environment.get(\"billingAccounts\") === null) {    ",
									"        pm.environment.set(\"settlementPackageLink\", \"\");",
									"    }        ",
									"    else {",
									"        for (var i = 0; i < pm.environment.get(\"billingAccounts\").length; i++) {",
									"            if (JSON.parse(JSON.stringify(billings[i])) === pm.environment.get(\"accountTypeId\")) {",
									"                pm.environment.set(\"settlementPackageLink\", \"\\\"settlementPackage\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"settlementPackages\\\", \\r \\\"id\\\": \\\"{{settlementPackageId}}\\\"\\r}\\r},\");",
									"                break;",
									"            }",
									"            else {",
									"                pm.environment.set(\"settlementPackageLink\", \"\");",
									"            }",
									"        }",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Creating Accounts",
									"    tests[\"Status Code 201\"] = responseCode.code === 201;",
									"    var data = JSON.parse(responseBody);",
									"    ",
									"//If there are more accounts to add, loop back to Create Settlement Package",
									"    if ((Number(pm.environment.get(\"acctCounter\")+1)) < (Number(pm.environment.get(\"myAccounts\").length))) {",
									"        pm.environment.set(\"acctCounter\", Number(pm.environment.get(\"acctCounter\")+1));",
									"        postman.setNextRequest(\"Post Settlement Package\");",
									"    }",
									"//If services is not defined, skip to Process Applicaiton",
									"    else if (pm.environment.has(\"services\") === false || pm.environment.get(\"services\") === null) {",
									"        postman.setNextRequest(\"Process Application\");",
									"    }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"accounts\",\n        \"attributes\": {\n            \"clientAccountName\": \"Merchant Account\",\n            \"statementType\": \"{{statementType}}\",\n            \"statementGeneration\": \"{{statementGeneration}}\"\n        },\n        \"relationships\": {\n            {{settlementPackageLink}}\n            \"accountDefinition\": {\n                \"data\": {\n                    \"type\": \"accountDefinitions\",\n                    \"id\": \"{{accountId}}\"\n                }\n            },\n            \"contracts\": {\n                \"data\": [\n                    {\n                        \"type\": \"contracts\",\n                        \"id\": \"{{currentContractId}}\"\n                    }\n                ]\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{hostName}}{{contextRoot}}{{serviceName}}accounts",
							"host": [
								"{{hostName}}{{contextRoot}}{{serviceName}}accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    tests[\"Status Code 201\"] = responseCode.code === 201;",
									"    var data = JSON.parse(responseBody);",
									"",
									"    pm.environment.set(\"cardOrganizationId\", data.data.relationships.serviceDefinitions.data[0].id.split(\"&\")[3].split(\"=\")[1]);",
									"    ",
									"    pm.environment.set(\"serviceIdAddendum\", pm.environment.get(\"serviceId\").split(\"&\")[0].split(\"=\")[1]);",
									"    ",
									"    if ((Number(pm.environment.get(\"position\")+1)) < (Number(pm.environment.get(\"myServices\").length))) {",
									"        pm.environment.set(\"position\", Number(pm.environment.get(\"position\")+1));",
									"        if (pm.environment.get(\"institutionNumber\") === \"00000200\") {",
									"                if (pm.environment.get(\"cardOrganizationId\") == \"301\") {",
									"                    postman.setNextRequest(\"Post Services\");",
									"                }",
									"                else {",
									"                    postman.setNextRequest();",
									"                }",
									"        }",
									"        else {",
									"            postman.setNextRequest(\"Post Services\");",
									"        }",
									"    }",
									"    else {",
									"        if (pm.environment.get(\"institutionNumber\") === \"00000200\") {",
									"                if (pm.environment.get(\"cardOrganizationId\") == \"301\") {",
									"                    postman.setNextRequest(\"Post Services\");",
									"                }",
									"                else {",
									"                    postman.setNextRequest();",
									"                }",
									"        }",
									"        else {",
									"            postman.setNextRequest(\"Process Application\");",
									"        }",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Creating Services",
									"    var service = pm.environment.get(\"myServices\");",
									"    var x = Number(pm.environment.get(\"position\"));",
									"    pm.environment.set(\"serviceId\", JSON.parse(JSON.stringify(service[x])));",
									"    ",
									"    if (pm.environment.get(\"institutionNumber\") === \"00000108\" || pm.environment.get(\"institutionNumber\") === \"00000106\") {",
									"    \tpm.environment.set(\"attributes\", \"\\\"attributes\\\": { \\r \\\"clientTariff\\\": \\\"{{serviceTariff}}\\\"\\r },\");",
									"    }",
									"    else {",
									"        pm.environment.set(\"attributes\", \"\");",
									"    }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"type\": \"services\",\r\n        {{attributes}}\r\n    \"relationships\": {\r\n            \"serviceDefinitions\": {\r\n                \"data\": [\r\n                    {\r\n                        \"type\": \"serviceDefinitions\",\r\n                        \"id\": \"{{serviceId}}\"\r\n                    }\r\n                ]\r\n            },\r\n            \"contracts\": {\r\n                \"data\": [\r\n                    {\r\n                        \"type\": \"contracts\",\r\n                        \"id\": \"{{currentContractId}}\"\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{hostName}}{{contextRoot}}{{serviceName}}services",
							"host": [
								"{{hostName}}{{contextRoot}}{{serviceName}}services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Card Scheme Addendum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    tests[\"Status Code 201\"] = responseCode.code === 201;",
									"    var resp = JSON.parse(responseBody);",
									"    ",
									"    if ((Number(pm.environment.get(\"position\")+1)) < (Number(pm.environment.get(\"myServices\").length))) {",
									"        postman.setNextRequest(\"Post Services\");",
									"    }",
									"    else {",
									"        postman.setNextRequest();",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Not configured for Amex Direct, Diners and Discover Ret.",
									"    if (pm.environment.get(\"clientLevel\") == \"001\") {",
									"        var service = pm.environment.get(\"myServices\");",
									"        var x = Number(pm.environment.get(\"position\"));",
									"        pm.environment.set(\"serviceId\", JSON.parse(JSON.stringify(service[x])));",
									"    }",
									"    else {",
									"        postman.setNextRequest();",
									"    }",
									"// Mastercard   - Service ID = 102 - Card Organization - 002",
									"    if (pm.environment.get(\"serviceIdAddendum\") == \"000102\") {",
									"        pm.environment.set(\"attributes\", \"\\\"attributes\\\": {\\r\\n\\\"cardOrganisation\\\": \\\"{{cardOrganizationId}}\\\",\\r\\n\\\"mastercard\\\": {\\r\\n\\\"ipValue\\\": \\\"{{ipValueMC}}\\\",\\r\\n\\\"ipQualified\\\": \\\"{{ipQualifiedMC}}\\\"\\r\\n}\\r\\n },\");",
									"    }",
									"// Visa         - Service ID = 201 - Card Organization - 003",
									"    else if (pm.environment.get(\"serviceIdAddendum\") == \"000201\") {",
									"        pm.environment.set(\"attributes\", \"\\\"attributes\\\": {\\r\\n\\\"cardOrganisation\\\": \\\"{{cardOrganizationId}}\\\",\\r\\n\\\"visa\\\": {\\r\\n\\\"ipValue\\\": \\\"{{ipValueVISA}}\\\",\\r\\n\\\"ipQualified\\\": \\\"{{ipQualifiedVISA}}\\\",\\r\\n\\\"threshold\\\": \\\"{{threshold}}\\\"\\r\\n}\\r\\n },\");",
									"    }",
									"// Amex         - Service ID = 114 - Card Organization - 004",
									"    else if (pm.environment.get(\"serviceIdAddendum\") == \"000114\") {",
									"        pm.environment.set(\"attributes\", \"\\\"attributes\\\": {\\r\\n\\\"cardOrganisation\\\": \\\"{{cardOrganizationId}}\\\",\\r\\n\\\"amex\\\": {\\r\\n\\\"direct\\\": \\\"{{direct}}\\\"\\r\\n}\\r\\n },\");",
									"    }",
									"// Discover     - Service ID = 206 - Card Organization - 023",
									"    else if (pm.environment.get(\"serviceIdAddendum\") == \"000206\") {",
									"        pm.environment.set(\"attributes\", \"\\\"attributes\\\": {\\r\\n\\\"cardOrganisation\\\": \\\"{{cardOrganizationId}}\\\",\\r\\n\\\"discover\\\": {\\r\\n\\\"retained\\\": \\\"{{retained}}\\\",\\r\\n\\\"stub\\\": \\\"{{stub}}\\\"\\r\\n}\\r\\n },\");",
									"    }",
									"// STAR         - Service ID = 357 - Card Organization - 032",
									"    else if (pm.environment.get(\"serviceIdAddendum\") == \"000357\") { ",
									"        pm.environment.set(\"attributes\", \"\\\"attributes\\\": {\\r\\n\\\"cardOrganisation\\\": \\\"{{cardOrganizationId}}\\\",\\r\\n\\\"pinDebit\\\": {\\r\\n\\\"ipQualified\\\": \\\"{{ipQualifiedSTAR}}\\\",\\r\\n\\\"registered\\\": \\\"{{registeredSTAR}}\\\"\\r\\n}\\r\\n },\");",
									"    }",
									"// NYCE         - Service ID = 355 - Card Organization - 033",
									"    else if (pm.environment.get(\"serviceIdAddendum\") == \"000355\") { ",
									"        pm.environment.set(\"attributes\", \"\\\"attributes\\\": {\\r\\n\\\"cardOrganisation\\\": \\\"{{cardOrganizationId}}\\\",\\r\\n\\\"pinDebit\\\": {\\r\\n\\\"ipQualified\\\": \\\"{{ipQualifiedNYCE}}\\\",\\r\\n\\\"registered\\\": \\\"{{registeredNYCE}}\\\"\\r\\n}\\r\\n },\");",
									"    }",
									"// Pulse        - Service ID = 356 - Card Organization - 034",
									"    else if (pm.environment.get(\"serviceIdAddendum\") == \"000356\") { ",
									"        pm.environment.set(\"attributes\", \"\\\"attributes\\\": {\\r\\n\\\"cardOrganisation\\\": \\\"{{cardOrganizationId}}\\\",\\r\\n\\\"pinDebit\\\": {\\r\\n\\\"ipQualified\\\": \\\"{{ipQualifiedPULSE}}\\\",\\r\\n\\\"registered\\\": \\\"{{registeredPULSE}}\\\"\\r\\n}\\r\\n },\");",
									"    }",
									"// Shazam       - Service ID = 359 - Card Organization - 035",
									"    else if (pm.environment.get(\"serviceIdAddendum\") == \"000359\") { ",
									"        pm.environment.set(\"attributes\", \"\\\"attributes\\\": {\\r\\n\\\"cardOrganisation\\\": \\\"{{cardOrganizationId}}\\\",\\r\\n\\\"pinDebit\\\": {\\r\\n\\\"ipQualified\\\": \\\"{{ipQualifiedSHAZAM}}\\\",\\r\\n\\\"registered\\\": \\\"{{registeredSHAZAM}}\\\"\\r\\n}\\r\\n },\");",
									"    }",
									"// Accel        - Service ID = 354 - Card Organization - 036",
									"    else if (pm.environment.get(\"serviceIdAddendum\") == \"000354\") { ",
									"        pm.environment.set(\"attributes\", \"\\\"attributes\\\": {\\r\\n\\\"cardOrganisation\\\": \\\"{{cardOrganizationId}}\\\",\\r\\n\\\"pinDebit\\\": {\\r\\n\\\"ipQualified\\\": \\\"{{ipQualifiedACCEL}}\\\",\\r\\n\\\"registered\\\": \\\"{{registeredACCEL}}\\\"\\r\\n}\\r\\n },\");",
									"    }",
									"// AFFN         - Service ID = 358 - Card Organization - 037",
									"    else if (pm.environment.get(\"serviceIdAddendum\") == \"000358\") { ",
									"        pm.environment.set(\"attributes\", \"\\\"attributes\\\": {\\r\\n\\\"cardOrganisation\\\": \\\"{{cardOrganizationId}}\\\",\\r\\n\\\"pinDebit\\\": {\\r\\n\\\"ipQualified\\\": \\\"{{ipQualifiedAFFN}}\\\",\\r\\n\\\"registered\\\": \\\"{{registeredAFFN}}\\\"\\r\\n}\\r\\n },\");",
									"    }",
									"// Culiance     - Service ID = 360 - Card Organization - 038",
									"    else if (pm.environment.get(\"serviceIdAddendum\") == \"000360\") { ",
									"        pm.environment.set(\"attributes\", \"\\\"attributes\\\": {\\r\\n\\\"cardOrganisation\\\": \\\"{{cardOrganizationId}}\\\",\\r\\n\\\"pinDebit\\\": {\\r\\n\\\"ipQualified\\\": \\\"{{ipQualifiedCULIANCE}}\\\",\\r\\n\\\"registered\\\": \\\"{{registeredCULIANCE}}\\\"\\r\\n}\\r\\n },\");",
									"    }",
									"// Interlink    - Service ID = 362 - Card Organization - 039",
									"    else if (pm.environment.get(\"serviceIdAddendum\") == \"000362\") { ",
									"        pm.environment.set(\"attributes\", \"\\\"attributes\\\": {\\r\\n\\\"cardOrganisation\\\": \\\"{{cardOrganizationId}}\\\",\\r\\n\\\"pinDebit\\\": {\\r\\n\\\"ipQualified\\\": \\\"{{ipQualifiedINTER}}\\\",\\r\\n\\\"registered\\\": \\\"{{registeredINTER}}\\\"\\r\\n}\\r\\n },\");",
									"    }",
									"// PAVD         - Service ID = 364 - Card Organization - 040",
									"    else if (pm.environment.get(\"serviceIdAddendum\") == \"000364\") { ",
									"        pm.environment.set(\"attributes\", \"\\\"attributes\\\": {\\r\\n\\\"cardOrganisation\\\": \\\"{{cardOrganizationId}}\\\",\\r\\n\\\"pinDebit\\\": {\\r\\n\\\"ipQualified\\\": \\\"{{ipQualifiedPAVD}}\\\",\\r\\n\\\"registered\\\": \\\"{{registeredPAVD}}\\\"\\r\\n}\\r\\n },\");",
									"    }",
									"// EBT          - Service ID = 365 - Card Organization - 041",
									"    else if (pm.environment.get(\"serviceIdAddendum\") == \"000365\") { ",
									"        pm.environment.set(\"attributes\", \"\\\"attributes\\\": {\\r\\n\\\"cardOrganisation\\\": \\\"{{cardOrganizationId}}\\\",\\r\\n\\\"pinDebit\\\": {\\r\\n\\\"ipQualified\\\": \\\"{{ipQualifiedEBT}}\\\",\\r\\n\\\"registered\\\": \\\"{{registeredEBT}}\\\"\\r\\n}\\r\\n },\");",
									"    }",
									"    else {",
									"        console.log(\"Invalid Card Organization\");",
									"    }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Crnk-Compact",
								"type": "text",
								"value": "true"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"cardSchemeAddendum\",\n        {{attributes}}\n        \"relationships\": {\n            \"contracts\": {\n                \"data\": {\n                    \"type\": \"contracts\",\n                    \"id\": \"{{currentContractId}}\"\n                }\n            }\n        }\n    }\n}."
						},
						"url": {
							"raw": "{{hostName}}{{contextRoot}}{{serviceName}}cardSchemeAddendum",
							"host": [
								"{{hostName}}{{contextRoot}}{{serviceName}}cardSchemeAddendum"
							]
						},
						"description": "This call is **OPTIONAL**.\n\nThis call will create additional merchant attributes and flag for merchants based in USA.\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together."
					},
					"response": []
				},
				{
					"name": "Process Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    tests[\"Application Processed\"] = responseCode.code === 200;",
									"    //If services is not defined, skip to Process Applicaiton",
									"    if (pm.environment.get(\"institutionNumber\") === \"00000111\" || pm.environment.get(\"institutionNumber\") === \"00000106\" || pm.environment.get(\"institutionNumber\") === \"00000109\" || pm.environment.get(\"institutionNumber\") === \"00000200\" || pm.environment.get(\"institutionNumber\") === \"00000108\") {",
									"        postman.setNextRequest(\"Get Device Services\");",
									"    }",
									"    else if (pm.environment.get(\"institutionNumber\") === \"00000010\") {",
									"        postman.setNextRequest(\"PS EU | Next Request\");",
									"    }",
									"    else if (pm.environment.get(\"institutionNumber\") === \"00000012\") {",
									"        postman.setNextRequest(\"PS UK | Next Request\");",
									"    }",
									"    else {",
									"        postman.setNextRequest();",
									"    }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{merchantId}}\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"status\": \"001\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{hostName}}{{contextRoot}}{{serviceName}}merchants/{{merchantId}}",
							"host": [
								"{{hostName}}{{contextRoot}}{{serviceName}}merchants"
							],
							"path": [
								"{{merchantId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Extension of Service | Devices",
			"item": [
				{
					"name": "Get Device Services",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"    tests[\"Status Code 200\"] = responseCode.code === 200;",
									"    ",
									"    var results = JSON.parse(responseBody);",
									"    let array = [];",
									"    _.each(results.data, (iteration) => { array.push(iteration.id) });",
									"    pm.environment.set(\"myDevices\", array);",
									"",
									"    if ((Number(pm.environment.get(\"devicesCounter\")+1)) < (Number(pm.environment.get(\"myDevices\").length))) {",
									"        postman.setNextRequest(\"Post Device\");",
									"    }",
									"    else {",
									"        if (pm.environment.get(\"institutionNumber\") === \"00000106\") {",
									"            postman.setNextRequest(\"CRB | Next Request\");",
									"        }",
									"        else if (pm.environment.get(\"institutionNumber\") === \"00000109\") {",
									"            postman.setNextRequest(\"TRP | Next Request\");",
									"        }",
									"        else if (pm.environment.get(\"institutionNumber\") === \"00000200\") {",
									"            postman.setNextRequest(\"BOA | Next Request\");",
									"        }",
									"        else if (pm.environment.get(\"institutionNumber\") === \"00000004\" || pm.environment.get(\"institutionNumber\") === \"00000010\" || pm.environment.get(\"institutionNumber\") === \"00000012\") {",
									"            postman.setNextRequest(\"PSEOS | Next Request\");",
									"        }",
									"        else if (pm.environment.get(\"institutionNumber\") === \"00000108\") {",
									"            postman.setNextRequest(\"BNZ | Next Request\");",
									"        }",
									"        else {",
									"            postman.setNextRequest();",
									"        }",
									"    }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							}
						],
						"url": {
							"raw": "{{hostName}}{{contextRoot}}{{serviceName}}services?fields[services]=id&filter[services][clientNumber]={{clientNumber}}&filter[services][serviceCategory]=022",
							"host": [
								"{{hostName}}{{contextRoot}}{{serviceName}}services"
							],
							"query": [
								{
									"key": "fields[services]",
									"value": "id"
								},
								{
									"key": "filter[services][clientNumber]",
									"value": "{{clientNumber}}"
								},
								{
									"key": "filter[services][serviceCategory]",
									"value": "022"
								}
							]
						},
						"description": "Should only be done when boarding a merchant at sub-group or member level. This is done to search for its desired parent contract."
					},
					"response": []
				},
				{
					"name": "Post Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    pm.test(\"Status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });",
									"    var resp = JSON.parse(responseBody);",
									"    pm.environment.set(\"deviceId\", resp.data.id);",
									"    if ((Number(pm.environment.get(\"devicesCounter\")+1)) < (Number(pm.environment.get(\"myDevices\").length))) {",
									"        pm.environment.set(\"devicesCounter\", Number(pm.environment.get(\"devicesCounter\")+1));",
									"        postman.setNextRequest(\"Get Device Services\");",
									"     ",
									"    }",
									"    else if ((Number(pm.environment.get(\"devicesCounter\")+1)) >= (Number(pm.environment.get(\"myDevices\").length))) {",
									"        if (pm.environment.get(\"institutionNumber\") === \"00000106\") {",
									"            postman.setNextRequest(\"CRB | Next Request\");",
									"        }",
									"        else if (pm.environment.get(\"institutionNumber\") === \"00000109\") {",
									"            postman.setNextRequest(\"TRP | Next Request\");",
									"        }",
									"        else if (pm.environment.get(\"institutionNumber\") === \"00000200\") {",
									"            postman.setNextRequest(\"BOA | Next Request\");",
									"        }",
									"        else if (pm.environment.get(\"institutionNumber\") === \"00000010\") {",
									"            postman.setNextRequest(\"PS EU | Next Request\");",
									"        }",
									"        else if (pm.environment.get(\"institutionNumber\") === \"00000012\") {",
									"            postman.setNextRequest(\"PS UK | Next Request\");",
									"        }",
									"        else if (pm.environment.get(\"institutionNumber\") === \"00000112\") {",
									"            postman.setNextRequest(\"SUM | Next Request\");",
									"        }",
									"        else if (pm.environment.get(\"institutionNumber\") === \"00000108\") {",
									"            postman.setNextRequest(\"BNZ | Next Request\");",
									"        }",
									"        else if (pm.environment.get(\"institutionNumber\") === \"00000111\") {",
									"            postman.setNextRequest(\"FSEU | Next Request\");",
									"        }",
									"        else {",
									"            postman.setNextRequest();",
									"        }",
									"    }",
									"    else {",
									"        postman.setNextRequest();",
									"    }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    var devices = pm.environment.get(\"myDevices\");",
									"    var x = Number(pm.environment.get(\"devicesCounter\"));",
									"    pm.environment.set(\"devices\", JSON.parse(JSON.stringify(devices[x])));",
									"    if(pm.environment.get(\"institutionNumber\") === \"00000111\"){",
									"        pm.environment.set(\"terminalId\",pm.environment.get('merchantId').split(\"=\")[1]);",
									"    }",
									"    else {",
									"        pm.environment.set(\"terminalId\", `${pm.environment.get('clientNumber').substring(1)}${pm.environment.get('devicesCounter')}`);",
									"    }",
									"    if(pm.environment.get(\"institutionNumber\") === \"00000200\"){",
									"        if (pm.environment.has(\"partnerId\") === false || pm.environment.has(\"partnerId\") === false || pm.environment.has(\"partnerId\") === undefined) {",
									"            pm.environment.set(\"partnerId\", \"\\\"partnerId\\\": \\\"{{partnerId}}\\\",\");",
									"        }",
									"        else {",
									"            pm.environment.set(\"partnerId\",\"\");",
									"        }",
									"        pm.environment.set(\"mscn\", \"\\\"mscn\\\": \\\"12346578\\\",\");",
									"    }",
									"    else {",
									"        pm.environment.set(\"partnerId\",\"\");",
									"        pm.environment.set(\"mscn\",\"\");",
									"    }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": " {{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"devices\",\n        \"attributes\": {\n            \"terminalId\": \"{{terminalId}}\",\n            \"status\": \"001\",\n            \"currency\": \"EUR\",\n            \"posCapability\": \"000\",\n            \"endOfDayIndicator\": \"002\",\n            {{mscn}}\n            {{partnerId}}\n            \"setupSheet\": \"001\"\n        },\n        \"relationships\": {\n            \"services\": {\n                \"data\": {\n                    \"type\": \"services\",\n                    \"id\": \"{{devices}}\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{hostName}}{{contextRoot}}{{serviceName}}devices",
							"host": [
								"{{hostName}}{{contextRoot}}{{serviceName}}devices"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Miscellaneous Requests",
			"item": [
				{
					"name": "Authorizations",
					"item": [
						{
							"name": "Purchases",
							"item": [
								{
									"name": "eCommerce",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/*[[start postmanerator :: struct-uses]]*/",
													"function populateRequestStructUses() {",
													"    APIStructure = {",
													"        structure: 'authorisations',",
													"        requiredAttributes: ['cardNumber','expiryDate','messageTypeId','transactionDate','amount','transactionType','eCom','pos'],",
													"        customAttributeDescriptions: [ // optional",
													"            {name: 'authIndicator', description: 'Optional attribute.  \\'R\\' can be passed to indicate a recurring transaction.'},",
													"            {name: 'messageTypeId', description: '\\'0200\\' must be provided to indicate a financial authorization.'},",
													"            {name: 'transactionType', description: '\\'00\\' must be provided to indicate a purchase transaction.'}",
													"        ],",
													"        excludedAttributes: ['transactionStatus','responseCode','reasonCode','authorisationCode','stan','retrievalReference','responseCode','authorisationCode','stan','retrievalReference'],",
													"        requiredRelationships: ['merchant'],",
													"        excludedRelationships: ['originalAuth']",
													"    };",
													"}",
													"/*[[end postmanerator :: struct-uses]]*/",
													"",
													"",
													"tests[\"Status Code 201\"] = responseCode.code === 201;",
													"",
													"var data = JSON.parse(responseBody);",
													"pm.environment.set(\"authorisationId\", data.data.id);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// test merchant from sandbox",
													"pm.environment.set(\"merchantId\", \"clientNumber=10050000\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"data\": {\r\n    \"type\": \"authorisations\",\r\n    \"attributes\": {\r\n        \"cardNumber\" : \"4001232312234051\",\r\n        \"expiryDate\" : \"1912\",\r\n        \"messageTypeId\" : \"0200\",\r\n        \"transactionDate\" : \"2019-04-25T22:15:20\",\r\n        \"transactionType\" : \"00\",\r\n        \"amount\" : {\r\n        \t\"currency\": \"USD\",\r\n        \t\"value\": 20.99\r\n        },\r\n        \"externalReference\" : \"US123550023\",\r\n        \"eCom\" : {\r\n        \t\"cvc2\" : \"123\",\r\n        \t\"3dSecure\" : \"00C782F8A993E2E889E391C782F8A993\",\r\n        \t\"xid\" : \"\",\r\n        \t\"securityLevelIndicator\" : \"212\"\r\n        },\r\n        \"pos\" : {\r\n        \t\"posCondition\" : \"59\"\r\n        },\r\n        \"avs\" : {\r\n        \t\"postCode\" : \"10118\",\r\n        \t\"streetAddress\" : \"West 34th Street\"\r\n        }\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/authorisations",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"authorisations"
											]
										},
										"description": "An eCommerce purchase authorization, supporting 3D Secure/UCAF and AVS functionality.  The authorization must be linked to a merchant resource in BankWORKS."
									},
									"response": [
										{
											"name": "eCommerce",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{token}}"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Content-Type",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Crnk-Compact",
														"value": "true",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"data\": {\r\n    \"type\": \"authorisations\",\r\n    \"attributes\": {\r\n        \"cardNumber\" : \"4001232312234051\",\r\n        \"expiryDate\" : \"1912\",\r\n        \"messageTypeId\" : \"0200\",\r\n        \"transactionDate\" : \"2019-04-25T22:15:20\",\r\n        \"transactionType\" : \"00\",\r\n        \"amount\" : {\r\n        \t\"currency\": \"USD\",\r\n        \t\"value\": 20.99\r\n        },\r\n        \"externalReference\" : \"US123550023\",\r\n        \"eCom\" : {\r\n        \t\"cvc2\" : \"123\",\r\n        \t\"3dSecure\" : \"00C782F8A993E2E889E391C782F8A993\",\r\n        \t\"xid\" : \"\",\r\n        \t\"securityLevelIndicator\" : \"212\"\r\n        },\r\n        \"pos\" : {\r\n        \t\"posCondition\" : \"59\"\r\n        },\r\n        \"avs\" : {\r\n        \t\"postCode\" : \"10118\",\r\n        \t\"streetAddress\" : \"West 34th Street\"\r\n        }\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
												},
												"url": {
													"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/authorisations",
													"host": [
														"{{hostName}}{{contextRoot}}{{serviceName}}"
													],
													"path": [
														"authorisations"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "X-Powered-By",
													"value": "Undertow/1"
												},
												{
													"key": "Server",
													"value": "JBoss-EAP/7"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Date",
													"value": "Mon, 07 Oct 2019 14:03:50 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Content-Type",
													"value": "application/vnd.api+json;charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "816"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": \"transactionID=dcf22218-17bc-4588-9&transmissionDate=2019-10-07T16:03:50\",\n        \"type\": \"authorisations\",\n        \"attributes\": {\n            \"amount\": {\n                \"currency\": \"USD\",\n                \"value\": 20.99\n            },\n            \"transactionStatus\": \"999\",\n            \"errorMessage\": null,\n            \"authIndicator\": null,\n            \"transactionDate\": \"2019-04-25T22:15:20\",\n            \"authorisationCode\": null,\n            \"responseCode\": \"000\",\n            \"expiryDate\": \"1912\",\n            \"transactionType\": \"00\",\n            \"externalReference\": \"US123550023\",\n            \"retrievalReference\": \"928016000001\",\n            \"eCom\": {\n                \"securityLevelIndicator\": \"212\",\n                \"cvc2\": null,\n                \"xid\": null,\n                \"3dSecure\": null\n            },\n            \"pos\": {\n                \"posCondition\": \"59\",\n                \"terminalId\": null\n            },\n            \"messageTypeId\": \"0200\",\n            \"stan\": \"000001\",\n            \"reasonCode\": null,\n            \"cardNumber\": \"400123******4051\",\n            \"avs\": {\n                \"postCode\": null,\n                \"streetAddress\": null,\n                \"response\": null\n            }\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00001111\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "MOTO",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/*[[start postmanerator :: struct-uses]]*/",
													"function populateRequestStructUses() {",
													"    APIStructure = {",
													"        structure: 'authorisations',",
													"        requiredAttributes: ['cardNumber','expiryDate','messageTypeId','transactionDate','amount','transactionType','pos'],",
													"        customAttributeDescriptions: [ // optional",
													"            {name: 'authIndicator', description: 'Optional attribute.  \\'R\\' can be passed to indicate a recurring transaction.'},",
													"            {name: 'messageTypeId', description: '\\'0200\\' must be provided to indicate a financial authorization.'},",
													"            {name: 'transactionType', description: '\\'00\\' must be provided to indicate a purchase transaction.'}",
													"        ],",
													"        excludedAttributes: ['transactionStatus','responseCode','reasonCode','authorisationCode','stan','retrievalReference','responseCode','authorisationCode','stan','retrievalReference','eCom'],",
													"        requiredRelationships: ['merchant'],",
													"        excludedRelationships: ['originalAuth']",
													"    };",
													"}",
													"/*[[end postmanerator :: struct-uses]]*/",
													"",
													"tests[\"Status Code 201\"] = responseCode.code === 201;",
													"",
													"var data = JSON.parse(responseBody);",
													"pm.environment.set(\"authorisationId\", data.data.id);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// test merchant from sandbox",
													"pm.environment.set(\"merchantId\", \"clientNumber=10050000\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"data\": {\r\n    \"type\": \"authorisations\",\r\n    \"attributes\": {\r\n        \"cardNumber\" : \"4001232312234051\",\r\n        \"expiryDate\" : \"1912\",\r\n        \"messageTypeId\" : \"0200\",\r\n        \"transactionDate\" : \"2019-04-25T22:15:20\",\r\n        \"transactionType\" : \"00\",\r\n        \"amount\" : {\r\n        \t\"currency\": \"USD\",\r\n        \t\"value\": 20.99\r\n        },\r\n        \"externalReference\" : \"US153550023\",\r\n        \"pos\" : {\r\n        \t\"posCondition\" : \"07\"\r\n        },\r\n        \"avs\" : {\r\n        \t\"postCode\" : \"10118\",\r\n        \t\"streetAddress\" : \"West 34th Street\"\r\n        }\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/authorisations",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"authorisations"
											]
										},
										"description": "The posCondition attribute will need to be used to make a distinction between Mail Order and Telephone Order authorizations.  The authorization must be linked to a merchant resource in BankWORKS."
									},
									"response": [
										{
											"name": "MOTO",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{token}}"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Content-Type",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Crnk-Compact",
														"value": "true",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"data\": {\r\n    \"type\": \"authorisations\",\r\n    \"attributes\": {\r\n        \"cardNumber\" : \"4001232312234051\",\r\n        \"expiryDate\" : \"1912\",\r\n        \"messageTypeId\" : \"0200\",\r\n        \"transactionDate\" : \"2019-04-25T22:15:20\",\r\n        \"transactionType\" : \"00\",\r\n        \"amount\" : {\r\n        \t\"currency\": \"USD\",\r\n        \t\"value\": 20.99\r\n        },\r\n        \"externalReference\" : \"US153550023\",\r\n        \"pos\" : {\r\n        \t\"posCondition\" : \"07\"\r\n        },\r\n        \"avs\" : {\r\n        \t\"postCode\" : \"10118\",\r\n        \t\"streetAddress\" : \"West 34th Street\"\r\n        }\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
												},
												"url": {
													"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/authorisations",
													"host": [
														"{{hostName}}{{contextRoot}}{{serviceName}}"
													],
													"path": [
														"authorisations"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "X-Powered-By",
													"value": "Undertow/1"
												},
												{
													"key": "Server",
													"value": "JBoss-EAP/7"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Date",
													"value": "Mon, 07 Oct 2019 14:05:12 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Content-Type",
													"value": "application/vnd.api+json;charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "815"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": \"transactionID=403d2017-50ff-4c0f-9&transmissionDate=2019-10-07T16:05:12\",\n        \"type\": \"authorisations\",\n        \"attributes\": {\n            \"amount\": {\n                \"currency\": \"USD\",\n                \"value\": 20.99\n            },\n            \"transactionStatus\": \"999\",\n            \"errorMessage\": null,\n            \"authIndicator\": null,\n            \"transactionDate\": \"2019-04-25T22:15:20\",\n            \"authorisationCode\": null,\n            \"responseCode\": \"000\",\n            \"expiryDate\": \"1912\",\n            \"transactionType\": \"00\",\n            \"externalReference\": \"US153550023\",\n            \"retrievalReference\": \"928016000002\",\n            \"eCom\": {\n                \"securityLevelIndicator\": null,\n                \"cvc2\": null,\n                \"xid\": null,\n                \"3dSecure\": null\n            },\n            \"pos\": {\n                \"posCondition\": \"07\",\n                \"terminalId\": null\n            },\n            \"messageTypeId\": \"0200\",\n            \"stan\": \"000002\",\n            \"reasonCode\": null,\n            \"cardNumber\": \"400123******4051\",\n            \"avs\": {\n                \"postCode\": null,\n                \"streetAddress\": null,\n                \"response\": null\n            }\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00001111\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
										}
									]
								}
							],
							"description": "This section covers the purchase authorization (sales) transactions supported.  Currently we cover card-not-present transaction for both eCommerce and MOTO use cases.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Pre-Authorizations",
							"item": [
								{
									"name": "1. Pre-Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/*[[start postmanerator :: struct-uses]]*/",
													"function populateRequestStructUses() {",
													"    APIStructure = {",
													"        structure: 'authorisations',",
													"        requiredAttributes: ['cardNumber','expiryDate','messageTypeId','transactionDate','amount','transactionType','pos'],",
													"        customAttributeDescriptions: [",
													"            {name: 'authIndicator', description: 'Indicates if the authorization is incremental or aggregate.\\n\\n- A - Pre-authorization Incremental\\n- P - Pre-authorization Aggregate'},",
													"            {name: 'messageTypeId', description: '\\'0100\\' must be provided to indicate a financial authorization.'},",
													"            {name: 'transactionType', description: '\\'00\\' must be provided to indicate a purchase transaction.'}",
													"        ],",
													"        excludedAttributes: ['transactionStatus','responseCode','stan','retrievalReference', 'authorisationCode', 'reasonCode'],",
													"        requiredRelationships: ['merchant'],",
													"        customRelationshipDescriptions: [ {name: 'originalAuth', description: 'Optional relationship for linking a pre-auth with an original pre-auth in cases of multiple related pre-auths (increental or aggregate).'} ]",
													"    };",
													"}",
													"/*[[end postmanerator :: struct-uses]]*/",
													"",
													"tests[\"Status Code 201\"] = responseCode.code === 201;",
													"",
													"var data = JSON.parse(responseBody);",
													"pm.environment.set(\"authorisationId\", data.data.id);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// test merchant from sandbox",
													"pm.environment.set(\"merchantId\", \"clientNumber=10050000\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"data\": {\r\n    \"type\": \"authorisations\",\r\n    \"attributes\": {\r\n        \"cardNumber\" : \"4001232312234051\",\r\n        \"expiryDate\" : \"1912\",\r\n        \"messageTypeId\" : \"0100\",\r\n        \"transactionDate\" : \"2019-04-26T22:15:25\",\r\n        \"transactionType\" : \"00\",\r\n        \"authIndicator\" : \"A\",\r\n        \"amount\" : {\r\n        \t\"currency\": \"USD\",\r\n        \t\"value\": 30.10\r\n        },\r\n        \"externalReference\" : \"US123550176\",\r\n        \"eCom\" : {\r\n        \t\"cvc2\" : \"123\",\r\n        \t\"3dSecure\" : \"00C782F8A993E2E889E391C782F8A993\",\r\n        \t\"xid\" : \"\",\r\n        \t\"securityLevelIndicator\" : \"212\"\r\n        },\r\n        \"pos\" : {\r\n        \t\"posCondition\" : \"59\"\r\n        },\r\n        \"avs\" : {\r\n        \t\"postCode\" : \"10118\",\r\n        \t\"streetAddress\" : \"West 34th Street\"\r\n        }\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/authorisations",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"authorisations"
											]
										},
										"description": "A **pre-authorization** is a temporary hold of a specific amount of the available balance on a credit or debit card. The pre-authorization is not a charge, hence no funds are debited from an account.  Fund will be debited upon **completion** (refer to the completion request below).\n\nPre-Auths can either be **aggregate** or **incremental**.\n\n+ **Aggregate**: the amount debited to the account is the amount of the completion, irrespective of the previously sent pre-auths.\n  + Pre-Auth of $10\n  + Pre-Auth of $15\n  + Completion of $5 (amount debited is $5)\n+ **Incremental**: the amount debited to the account is the sum of amounts taken from all pre-auths.\n  + Pre-Auth of $10\n  + Pre-Auth of $15\n  + Completion (amount debited is $25)\n\nWhen creating a number of related pre-auths, each sub-sequent pre-auth must be linked with the original pre-auth.  This can be achieved by providing the original pre-auth resource ID and passing it through the originalAuth relationship.  For example:\n\nFirst aggregate pre-auth request body example\n```\t\n\t{\n\t  \"data\": {\n\t    \"type\": \"authorisations\",\n\t    \"attributes\": {\n\t        \"cardNumber\" : \"4001232312234051\",\n\t        ...\n\t    },\n\t    \"relationships\": {\n\t      \"merchant\": {\n\t        \"data\": {\n\t          \"type\": \"merchants\",\n\t          \"id\": \"clientNumber=41123321\"\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n```\n\t\nSecond aggregate pre-auth request body example linked to first pre-auth via the originalAuth relationship.\n```\n\t{\n\t  \"data\": {\n\t    \"type\": \"authorisations\",\n\t    \"attributes\": {\n\t        \"cardNumber\" : \"4001232312234051\",\n\t        ...\n\t    },\n\t    \"relationships\": {\n\t      \"merchant\": {\n\t        \"data\": {\n\t          \"type\": \"merchants\",\n\t          \"id\": \"clientNumber=41123321\"\n\t        }\n\t      },\n\t      \"originalAuth\": {\n\t        \"data\": {\n\t          \"type\": \"authorisations\",\n\t          \"id\": \"transactionID=5d655522-f1ad329e92-fe94c3&transmissionDate=2019-08-27T20:34:50\"\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n```"
									},
									"response": [
										{
											"name": "1. Pre-Authorization",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{token}}"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Content-Type",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Crnk-Compact",
														"type": "text",
														"value": "true"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"data\": {\r\n    \"type\": \"authorisations\",\r\n    \"attributes\": {\r\n        \"cardNumber\" : \"4001232312234051\",\r\n        \"expiryDate\" : \"1912\",\r\n        \"messageTypeId\" : \"0100\",\r\n        \"transactionDate\" : \"2019-04-26T22:15:25\",\r\n        \"transactionType\" : \"00\",\r\n        \"authIndicator\" : \"A\",\r\n        \"amount\" : {\r\n        \t\"currency\": \"USD\",\r\n        \t\"value\": 30.10\r\n        },\r\n        \"externalReference\" : \"US123550176\",\r\n        \"eCom\" : {\r\n        \t\"cvc2\" : \"123\",\r\n        \t\"3dSecure\" : \"00C782F8A993E2E889E391C782F8A993\",\r\n        \t\"xid\" : \"\",\r\n        \t\"securityLevelIndicator\" : \"212\"\r\n        },\r\n        \"pos\" : {\r\n        \t\"posCondition\" : \"59\"\r\n        },\r\n        \"avs\" : {\r\n        \t\"postCode\" : \"10118\",\r\n        \t\"streetAddress\" : \"West 34th Street\"\r\n        }\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
												},
												"url": {
													"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/authorisations",
													"host": [
														"{{hostName}}{{contextRoot}}{{serviceName}}"
													],
													"path": [
														"authorisations"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "X-Powered-By",
													"value": "Undertow/1"
												},
												{
													"key": "Server",
													"value": "JBoss-EAP/7"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Date",
													"value": "Mon, 07 Oct 2019 14:06:18 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Content-Type",
													"value": "application/vnd.api+json;charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "815"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": \"transactionID=d779e184-817b-462e-a&transmissionDate=2019-10-07T16:06:18\",\n        \"type\": \"authorisations\",\n        \"attributes\": {\n            \"amount\": {\n                \"currency\": \"USD\",\n                \"value\": 30.1\n            },\n            \"transactionStatus\": \"999\",\n            \"errorMessage\": null,\n            \"authIndicator\": null,\n            \"transactionDate\": \"2019-04-26T22:15:25\",\n            \"authorisationCode\": null,\n            \"responseCode\": \"000\",\n            \"expiryDate\": \"1912\",\n            \"transactionType\": \"00\",\n            \"externalReference\": \"US123550176\",\n            \"retrievalReference\": \"928016000003\",\n            \"eCom\": {\n                \"securityLevelIndicator\": \"212\",\n                \"cvc2\": null,\n                \"xid\": null,\n                \"3dSecure\": null\n            },\n            \"pos\": {\n                \"posCondition\": \"59\",\n                \"terminalId\": null\n            },\n            \"messageTypeId\": \"0100\",\n            \"stan\": \"000003\",\n            \"reasonCode\": null,\n            \"cardNumber\": \"400123******4051\",\n            \"avs\": {\n                \"postCode\": null,\n                \"streetAddress\": null,\n                \"response\": null\n            }\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00001111\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "2. Completion",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/*[[start postmanerator :: struct-uses]]*/",
													"function populateRequestStructUses() {",
													"    APIStructure = {",
													"        structure: 'authorisations',",
													"        requiredAttributes: ['messageTypeId','reasonCode','transactionDate','amount','transactionType'],",
													"        customAttributeDescriptions: [ // optional",
													"            {name: 'messageTypeId', description: '\\'0220\\' must be provided to indicate a completion advice.'},",
													"            {name: 'transactionType', description: '\\'00\\' must be provided to indicate a purchase.'},",
													"            {name: 'reasonCode', description: '\\'00\\' must be provided to indicate a request for advice approval.'}",
													"        ],",
													"        excludedAttributes: ['cardNumber','transactionStatus','expiryDate','authIndicator','responseCode','authorisationCode','stan','retrievalReference'],",
													"        requiredRelationships: ['originalAuth','merchant'],",
													"        customRelationshipDescriptions: [",
													"            {name: 'originalAuth', description: 'Original authorization to be captured. Does not impact the amount to be captured, provided in the completion request.'}",
													"        ]",
													"    };",
													"}",
													"/*[[end postmanerator :: struct-uses]]*/",
													"",
													"tests[\"Status Code 201\"] = responseCode.code === 201;",
													"",
													"var data = JSON.parse(responseBody);",
													"pm.environment.set(\"authorisationId\", data.data.id);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// test merchant from sandbox",
													"pm.environment.set(\"merchantId\", \"clientNumber=10050000\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"data\": {\r\n    \"type\": \"authorisations\",\r\n    \"attributes\": {\r\n        \"messageTypeId\" : \"0220\",\r\n        \"transactionDate\" : \"2019-04-25T22:15:20\",\r\n        \"transactionType\" : \"00\",\r\n        \"reasonCode\": \"00\",\r\n        \"amount\" : {\r\n        \t\"currency\": \"USD\",\r\n        \t\"value\": 20.99\r\n        },\r\n        \"externalReference\" : \"US133550024\",\r\n        \"pos\" : {\r\n        \t\"posCondition\" : \"59\"\r\n        }\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      },\r\n      \"originalAuth\": {\r\n        \"data\": {\r\n          \"type\": \"authorisations\",\r\n          \"id\": \"{{authorisationId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/authorisations",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"authorisations"
											]
										},
										"description": "A completion advice authorization is sent to fulfil a pre-authorization request and debit the cardholder.  Should a pre-authorization be left without a completetion, the blocked funds are released automatically after a period of time by an automatic reversal.  The pre-authorization to be completed must be provided as the *originalAuth* relationship."
									},
									"response": [
										{
											"name": "2. Completion",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{token}}"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Content-Type",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Crnk-Compact",
														"value": "true",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"data\": {\r\n    \"type\": \"authorisations\",\r\n    \"attributes\": {\r\n        \"messageTypeId\" : \"0220\",\r\n        \"transactionDate\" : \"2019-04-25T22:15:20\",\r\n        \"transactionType\" : \"00\",\r\n        \"amount\" : {\r\n        \t\"currency\": \"USD\",\r\n        \t\"value\": 20.99\r\n        },\r\n        \"externalReference\" : \"US133550024\",\r\n        \"pos\" : {\r\n        \t\"posCondition\" : \"59\"\r\n        }\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      },\r\n      \"originalAuth\": {\r\n        \"data\": {\r\n          \"type\": \"authorisations\",\r\n          \"id\": \"{{authorisationId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
												},
												"url": {
													"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/authorisations",
													"host": [
														"{{hostName}}{{contextRoot}}{{serviceName}}"
													],
													"path": [
														"authorisations"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Fri, 09 Aug 2019 20:27:12 GMT"
												},
												{
													"key": "Server",
													"value": "JBoss-EAP/7"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000; includeSubDomains"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "X-Powered-By",
													"value": "Undertow/1"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Content-Type",
													"value": "application/vnd.api+json;charset=utf-8"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "Content-Length",
													"value": "517"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5, max=100"
												},
												{
													"key": "Connection",
													"value": "Keep-Alive"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"data\": {\r\n        \"id\": \"transactionID=5d6e7513-1f00978829-376c53&transmissionDate=2019-09-03T16:13:39\",\r\n        \"type\": \"authorisations\",\r\n        \"attributes\": {\r\n            \"amount\": {\r\n                \"currency\": \"USD\",\r\n                \"value\": 20.99\r\n            },\r\n            \"transactionStatus\": \"999\",\r\n            \"errorMessage\": null,\r\n            \"authIndicator\": null,\r\n            \"transactionDate\": \"2019-04-25T22:15:20\",\r\n            \"authorisationCode\": null,\r\n            \"responseCode\": \"000\",\r\n            \"expiryDate\": \"1912\",\r\n            \"transactionType\": \"00\",\r\n            \"externalReference\": null,\r\n            \"retrievalReference\": \"924616000376\",\r\n            \"eCom\": {\r\n                \"securityLevelIndicator\": null,\r\n                \"cvc2\": null,\r\n                \"xid\": null,\r\n                \"3dSecure\": null\r\n            },\r\n            \"pos\": {\r\n                \"posCondition\": \"59\",\r\n                \"terminalId\": \"0APIAUTH\"\r\n            },\r\n            \"processCode\": \"000000\",\r\n            \"messageTypeId\": \"0230\",\r\n            \"stan\": \"000376\",\r\n            \"reasonCode\": null,\r\n            \"cardNumber\": \"485007******7807\",\r\n            \"avs\": {\r\n                \"postCode\": null,\r\n                \"streetAddress\": null,\r\n                \"response\": null\r\n            }\r\n        },\r\n        \"relationships\": {\r\n            \"merchant\": {\r\n                \"data\": {\r\n                    \"id\": \"clientNumber=00000100\",\r\n                    \"type\": \"merchants\"\r\n                }\r\n            },\r\n            \"originalAuth\": {\r\n                \"data\": {\r\n                    \"id\": \"transactionID=5d6e7500-1f00978829-376c51&transmissionDate=2019-09-03T16:13:20\",\r\n                    \"type\": \"authorisations\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
										}
									]
								}
							],
							"description": "Pre-Authorization requests can be sent in order to hold a specific amount of funds from the cardholder.  In BankWORKS, two types of pre-authorizations are supported.  These are documented in the pre-authorization request below.\n\nIn order for the blocked funds to be debited from the cardholder, a completion request must be sent linking to the original pre-authorization.  The below requests cover the pre-authorization / completion flow.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Get Merchant Auths",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"authsmerchantId\", \"clientNumber=10050000\");",
											"pm.environment.set(\"tranStartDate\", \"2020-04-01T00:00:00\");",
											"pm.environment.set(\"tranEndDate\", \"2020-04-06T00:00:00\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*[[start postmanerator :: struct-uses]]*/",
											"function populateRequestStructUses() {",
											"    APIStructure = {",
											"        structure: 'authorisations'",
											"    };",
											"}",
											"/*[[end postmanerator :: struct-uses]]*/",
											"",
											"tests[\"Status Code 200\"] = responseCode.code === 200;"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants/{{authsmerchantId}}/authorisations?filter[transactionDate][GE]={{tranStartDate}}&filter[transactionDate][LT]={{tranEndDate}}&sort=transactionDate&fields=transactionDate,retrievalReference,messageTypeId,cardNumber,amount",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"merchants",
										"{{authsmerchantId}}",
										"authorisations"
									],
									"query": [
										{
											"key": "filter[transactionDate][GE]",
											"value": "{{tranStartDate}}"
										},
										{
											"key": "filter[transactionDate][LT]",
											"value": "{{tranEndDate}}"
										},
										{
											"key": "sort",
											"value": "transactionDate"
										},
										{
											"key": "fields",
											"value": "transactionDate,retrievalReference,messageTypeId,cardNumber,amount"
										}
									]
								},
								"description": "A sample request to get a particular merchant's authorizations.  In this example, further filtering, sorting and field was applied. The request returns auths for a particular date range.  The response is also being sorted by the date and a subset of the available attributes have been selected.  It is possible to filter and format the response as desired."
							},
							"response": [
								{
									"name": "Get Merchant Auths",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants/{{authsmerchantId}}/authorisations?filter[transactionDate][GE]=2020-04-01T00:00:00&filter[transactionDate][LT]=2020-04-10T00:00:00&sort=transactionDate&fields=transactionDate,retrievalReference,messageTypeId,cardNumber,amount",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants",
												"{{authsmerchantId}}",
												"authorisations"
											],
											"query": [
												{
													"key": "filter[transactionDate][GE]",
													"value": "2020-04-01T00:00:00"
												},
												{
													"key": "filter[transactionDate][LT]",
													"value": "2020-04-10T00:00:00"
												},
												{
													"key": "sort",
													"value": "transactionDate"
												},
												{
													"key": "fields",
													"value": "transactionDate,retrievalReference,messageTypeId,cardNumber,amount"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 05 May 2020 17:21:49 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "1029"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"transactionID=3f1e3548-9ffc-4ff7-9&transmissionDate=2020-04-09T16:39:56\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=3f1e3548-9ffc-4ff7-9&transmissionDate=2020-04-09T16:39:56\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000013\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:39:53\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=f3a86da9-24dc-4909-a&transmissionDate=2020-04-09T16:39:57\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=f3a86da9-24dc-4909-a&transmissionDate=2020-04-09T16:39:57\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000014\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:39:55\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=c16618ef-71df-4a1d-a&transmissionDate=2020-04-09T16:39:58\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=c16618ef-71df-4a1d-a&transmissionDate=2020-04-09T16:39:58\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000015\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:39:56\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=d09433e3-dae7-4fb9-a&transmissionDate=2020-04-09T16:39:59\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=d09433e3-dae7-4fb9-a&transmissionDate=2020-04-09T16:39:59\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000016\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:39:57\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=193c6bdf-c1ae-4194-a&transmissionDate=2020-04-09T16:41:39\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=193c6bdf-c1ae-4194-a&transmissionDate=2020-04-09T16:41:39\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000017\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:41:36\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=6d998c9a-3bbd-42e1-8&transmissionDate=2020-04-09T16:41:39\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=6d998c9a-3bbd-42e1-8&transmissionDate=2020-04-09T16:41:39\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000018\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:41:38\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=bc78e54c-aac7-4f18-8&transmissionDate=2020-04-09T16:41:40\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=bc78e54c-aac7-4f18-8&transmissionDate=2020-04-09T16:41:40\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000019\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:41:39\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=22e5368e-24e1-4672-8&transmissionDate=2020-04-09T16:41:41\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=22e5368e-24e1-4672-8&transmissionDate=2020-04-09T16:41:41\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000020\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:41:39\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=e21053dd-6698-45a6-8&transmissionDate=2020-04-09T16:49:32\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=e21053dd-6698-45a6-8&transmissionDate=2020-04-09T16:49:32\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000021\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:49:30\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=3a7f4a4c-ea6a-4edd-9&transmissionDate=2020-04-09T16:49:33\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=3a7f4a4c-ea6a-4edd-9&transmissionDate=2020-04-09T16:49:33\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000022\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:49:32\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=846ca712-6ed5-4e78-8&transmissionDate=2020-04-09T16:49:34\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=846ca712-6ed5-4e78-8&transmissionDate=2020-04-09T16:49:34\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000023\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:49:33\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=88d458b0-223d-411a-a&transmissionDate=2020-04-09T16:49:35\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=88d458b0-223d-411a-a&transmissionDate=2020-04-09T16:49:35\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000024\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:49:33\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=30b7bf36-4530-4e56-8&transmissionDate=2020-04-09T17:04:41\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=30b7bf36-4530-4e56-8&transmissionDate=2020-04-09T17:04:41\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000025\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:04:38\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=95138fb4-3618-4eb3-b&transmissionDate=2020-04-09T17:04:41\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=95138fb4-3618-4eb3-b&transmissionDate=2020-04-09T17:04:41\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000026\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:04:40\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=9de2f9cb-317f-4311-b&transmissionDate=2020-04-09T17:04:42\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=9de2f9cb-317f-4311-b&transmissionDate=2020-04-09T17:04:42\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000027\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:04:41\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=96debc0f-00bd-4da4-a&transmissionDate=2020-04-09T17:04:43\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=96debc0f-00bd-4da4-a&transmissionDate=2020-04-09T17:04:43\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000028\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:04:41\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=8cbbd05d-975c-4080-b&transmissionDate=2020-04-09T17:06\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=8cbbd05d-975c-4080-b&transmissionDate=2020-04-09T17:06\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000029\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:05:58\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=2e77463c-3c8f-4214-a&transmissionDate=2020-04-09T17:06:01\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=2e77463c-3c8f-4214-a&transmissionDate=2020-04-09T17:06:01\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000030\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:06:00\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=93ecf7e3-6032-4e0c-8&transmissionDate=2020-04-09T17:06:02\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=93ecf7e3-6032-4e0c-8&transmissionDate=2020-04-09T17:06:02\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000031\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:06:00\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=4bfd5a23-3370-4581-8&transmissionDate=2020-04-09T17:06:02\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=4bfd5a23-3370-4581-8&transmissionDate=2020-04-09T17:06:02\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000032\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:06:01\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        }\n    ],\n    \"links\": {\n        \"first\": \"https://wsmdemo.rs2.com/wsm/jsonapi/merchants/clientNumber=00001111/authorisations?page[limit]=20&filter[transactionDate][GE]=2020-04-01T00%3A00%3A00&sort=transactionDate&fields=transactionDate%2CretrievalReference%2CmessageTypeId%2CcardNumber%2Camount&filter[transactionDate][LT]=2020-04-10T00%3A00%3A00\",\n        \"last\": \"https://wsmdemo.rs2.com/wsm/jsonapi/merchants/clientNumber=00001111/authorisations?page[limit]=20&page[offset]=60&filter[transactionDate][GE]=2020-04-01T00%3A00%3A00&sort=transactionDate&fields=transactionDate%2CretrievalReference%2CmessageTypeId%2CcardNumber%2Camount&filter[transactionDate][LT]=2020-04-10T00%3A00%3A00\",\n        \"next\": \"https://wsmdemo.rs2.com/wsm/jsonapi/merchants/clientNumber=00001111/authorisations?page[limit]=20&page[offset]=20&filter[transactionDate][GE]=2020-04-01T00%3A00%3A00&sort=transactionDate&fields=transactionDate%2CretrievalReference%2CmessageTypeId%2CcardNumber%2Camount&filter[transactionDate][LT]=2020-04-10T00%3A00%3A00\"\n    },\n    \"meta\": {\n        \"totalResourceCount\": 69\n    }\n}"
								}
							]
						},
						{
							"name": "Get Merchant Auths Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"authsmerchantId\", \"clientNumber=10050000\");",
											"pm.environment.set(\"tranStartDate\", \"2020-04-01T00:00:00\");",
											"pm.environment.set(\"tranEndDate\", \"2020-04-06T00:00:00\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*[[start postmanerator :: struct-uses]]*/",
											"function populateRequestStructUses() {",
											"    APIStructure = {",
											"        structure: 'authorisations'",
											"    };",
											"}",
											"/*[[end postmanerator :: struct-uses]]*/",
											"",
											"tests[\"Status Code 200\"] = responseCode.code === 200;"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants/{{authsmerchantId}}/authorisations?filter[transactionDate][GE]={{tranStartDate}}&filter[transactionDate][LT]={{tranEndDate}}&sort=transactionDate&fields=transactionDate,retrievalReference,messageTypeId,cardNumber,amount",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"merchants",
										"{{authsmerchantId}}",
										"authorisations"
									],
									"query": [
										{
											"key": "filter[transactionDate][GE]",
											"value": "{{tranStartDate}}"
										},
										{
											"key": "filter[transactionDate][LT]",
											"value": "{{tranEndDate}}"
										},
										{
											"key": "sort",
											"value": "transactionDate"
										},
										{
											"key": "fields",
											"value": "transactionDate,retrievalReference,messageTypeId,cardNumber,amount"
										}
									]
								},
								"description": "A sample request to get a particular merchant's authorizations.  In this example, further filtering, sorting and field was applied. The request returns auths for a particular date range.  The response is also being sorted by the date and a subset of the available attributes have been selected.  It is possible to filter and format the response as desired."
							},
							"response": [
								{
									"name": "Get Merchant Auths",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants/{{authsmerchantId}}/authorisations?filter[transactionDate][GE]=2020-04-01T00:00:00&filter[transactionDate][LT]=2020-04-10T00:00:00&sort=transactionDate&fields=transactionDate,retrievalReference,messageTypeId,cardNumber,amount",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants",
												"{{authsmerchantId}}",
												"authorisations"
											],
											"query": [
												{
													"key": "filter[transactionDate][GE]",
													"value": "2020-04-01T00:00:00"
												},
												{
													"key": "filter[transactionDate][LT]",
													"value": "2020-04-10T00:00:00"
												},
												{
													"key": "sort",
													"value": "transactionDate"
												},
												{
													"key": "fields",
													"value": "transactionDate,retrievalReference,messageTypeId,cardNumber,amount"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 05 May 2020 17:21:49 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "1029"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"transactionID=3f1e3548-9ffc-4ff7-9&transmissionDate=2020-04-09T16:39:56\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=3f1e3548-9ffc-4ff7-9&transmissionDate=2020-04-09T16:39:56\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000013\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:39:53\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=f3a86da9-24dc-4909-a&transmissionDate=2020-04-09T16:39:57\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=f3a86da9-24dc-4909-a&transmissionDate=2020-04-09T16:39:57\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000014\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:39:55\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=c16618ef-71df-4a1d-a&transmissionDate=2020-04-09T16:39:58\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=c16618ef-71df-4a1d-a&transmissionDate=2020-04-09T16:39:58\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000015\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:39:56\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=d09433e3-dae7-4fb9-a&transmissionDate=2020-04-09T16:39:59\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=d09433e3-dae7-4fb9-a&transmissionDate=2020-04-09T16:39:59\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000016\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:39:57\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=193c6bdf-c1ae-4194-a&transmissionDate=2020-04-09T16:41:39\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=193c6bdf-c1ae-4194-a&transmissionDate=2020-04-09T16:41:39\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000017\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:41:36\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=6d998c9a-3bbd-42e1-8&transmissionDate=2020-04-09T16:41:39\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=6d998c9a-3bbd-42e1-8&transmissionDate=2020-04-09T16:41:39\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000018\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:41:38\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=bc78e54c-aac7-4f18-8&transmissionDate=2020-04-09T16:41:40\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=bc78e54c-aac7-4f18-8&transmissionDate=2020-04-09T16:41:40\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000019\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:41:39\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=22e5368e-24e1-4672-8&transmissionDate=2020-04-09T16:41:41\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=22e5368e-24e1-4672-8&transmissionDate=2020-04-09T16:41:41\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000020\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:41:39\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=e21053dd-6698-45a6-8&transmissionDate=2020-04-09T16:49:32\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=e21053dd-6698-45a6-8&transmissionDate=2020-04-09T16:49:32\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000021\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:49:30\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=3a7f4a4c-ea6a-4edd-9&transmissionDate=2020-04-09T16:49:33\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=3a7f4a4c-ea6a-4edd-9&transmissionDate=2020-04-09T16:49:33\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000022\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:49:32\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=846ca712-6ed5-4e78-8&transmissionDate=2020-04-09T16:49:34\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=846ca712-6ed5-4e78-8&transmissionDate=2020-04-09T16:49:34\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000023\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:49:33\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=88d458b0-223d-411a-a&transmissionDate=2020-04-09T16:49:35\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=88d458b0-223d-411a-a&transmissionDate=2020-04-09T16:49:35\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010016000024\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T09:49:33\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=30b7bf36-4530-4e56-8&transmissionDate=2020-04-09T17:04:41\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=30b7bf36-4530-4e56-8&transmissionDate=2020-04-09T17:04:41\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000025\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:04:38\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=95138fb4-3618-4eb3-b&transmissionDate=2020-04-09T17:04:41\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=95138fb4-3618-4eb3-b&transmissionDate=2020-04-09T17:04:41\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000026\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:04:40\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=9de2f9cb-317f-4311-b&transmissionDate=2020-04-09T17:04:42\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=9de2f9cb-317f-4311-b&transmissionDate=2020-04-09T17:04:42\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000027\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:04:41\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=96debc0f-00bd-4da4-a&transmissionDate=2020-04-09T17:04:43\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=96debc0f-00bd-4da4-a&transmissionDate=2020-04-09T17:04:43\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000028\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:04:41\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=8cbbd05d-975c-4080-b&transmissionDate=2020-04-09T17:06\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=8cbbd05d-975c-4080-b&transmissionDate=2020-04-09T17:06\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000029\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:05:58\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=2e77463c-3c8f-4214-a&transmissionDate=2020-04-09T17:06:01\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=2e77463c-3c8f-4214-a&transmissionDate=2020-04-09T17:06:01\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000030\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:06:00\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=93ecf7e3-6032-4e0c-8&transmissionDate=2020-04-09T17:06:02\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=93ecf7e3-6032-4e0c-8&transmissionDate=2020-04-09T17:06:02\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000031\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:06:00\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        },\n        {\n            \"id\": \"transactionID=4bfd5a23-3370-4581-8&transmissionDate=2020-04-09T17:06:02\",\n            \"type\": \"authorisations\",\n            \"links\": {\n                \"self\": \"https://wsmdemo.rs2.com/wsm/jsonapi/authorisations/transactionID=4bfd5a23-3370-4581-8&transmissionDate=2020-04-09T17:06:02\"\n            },\n            \"attributes\": {\n                \"retrievalReference\": \"010017000032\",\n                \"amount\": {\n                    \"currency\": \"USD\",\n                    \"value\": 1\n                },\n                \"messageTypeId\": \"0200\",\n                \"transactionDate\": \"2020-04-09T10:06:01\",\n                \"cardNumber\": \"411111******1111\"\n            }\n        }\n    ],\n    \"links\": {\n        \"first\": \"https://wsmdemo.rs2.com/wsm/jsonapi/merchants/clientNumber=00001111/authorisations?page[limit]=20&filter[transactionDate][GE]=2020-04-01T00%3A00%3A00&sort=transactionDate&fields=transactionDate%2CretrievalReference%2CmessageTypeId%2CcardNumber%2Camount&filter[transactionDate][LT]=2020-04-10T00%3A00%3A00\",\n        \"last\": \"https://wsmdemo.rs2.com/wsm/jsonapi/merchants/clientNumber=00001111/authorisations?page[limit]=20&page[offset]=60&filter[transactionDate][GE]=2020-04-01T00%3A00%3A00&sort=transactionDate&fields=transactionDate%2CretrievalReference%2CmessageTypeId%2CcardNumber%2Camount&filter[transactionDate][LT]=2020-04-10T00%3A00%3A00\",\n        \"next\": \"https://wsmdemo.rs2.com/wsm/jsonapi/merchants/clientNumber=00001111/authorisations?page[limit]=20&page[offset]=20&filter[transactionDate][GE]=2020-04-01T00%3A00%3A00&sort=transactionDate&fields=transactionDate%2CretrievalReference%2CmessageTypeId%2CcardNumber%2Camount&filter[transactionDate][LT]=2020-04-10T00%3A00%3A00\"\n    },\n    \"meta\": {\n        \"totalResourceCount\": 69\n    }\n}"
								}
							]
						},
						{
							"name": "Reversal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*[[start postmanerator :: struct-uses]]*/",
											"function populateRequestStructUses() {",
											"    APIStructure = {",
											"        structure: 'authorisations',",
											"        requiredAttributes: ['messageTypeId','reasonCode'],",
											"        customAttributeDescriptions: [ // optional",
											"            {name: 'messageTypeId', description: '\\'0420\\' must be provided to indicate a reversal advice.'}",
											"        ],",
											"        excludedAttributes: ['cardNumber','transactionStatus','expiryDate','transactionDate','amount','transactionType','authIndicator','responseCode','authorisationCode','stan','retrievalReference','externalReference','eCom','pos','avs'],",
											"        requiredRelationships: ['originalAuth','merchant'],",
											"    };",
											"}",
											"/*[[end postmanerator :: struct-uses]]*/",
											"",
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var data = JSON.parse(responseBody);",
											"pm.environment.set(\"authorisationId\", data.data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// test merchant from sandbox",
											"pm.environment.set(\"merchantId\", \"clientNumber=10050000\")"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"value": "true",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"authorisations\",\r\n    \"attributes\": {\r\n    \t\"messageTypeId\": \"0420\",\r\n        \"reasonCode\" : \"12\"\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      },\r\n      \"originalAuth\": {\r\n        \"data\": {\r\n          \"type\": \"authorisations\",\r\n          \"id\": \"{{authorisationId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/authorisations",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"authorisations"
									]
								},
								"description": "A reversal authorization can be sent to cancel (void) a pre-auth, purchase or completion authorization that has not been sent for clearing.  Full reversals can be sent. \n\nThis request creates a new authorization to cancel out the original authorization by providing it in the originalAuth relationship field.  Full amount reversals are supported.  The reason for reversal must be provided.  Refer to [/authorisations](#struct-authorisations) resource documentation for a list of possible values."
							},
							"response": [
								{
									"name": "Reversal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"data\": {\r\n    \"type\": \"authorisations\",\r\n    \"attributes\": {\r\n    \t\"messageTypeId\": \"0420\",\r\n        \"reasonCode\" : \"12\"\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      },\r\n      \"originalAuth\": {\r\n        \"data\": {\r\n          \"type\": \"authorisations\",\r\n          \"id\": \"{{authorisationId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/authorisations",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"authorisations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 09 Aug 2019 20:27:30 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "518"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\r\n    \"data\": {\r\n        \"id\": \"transactionID=5d6e7539-1f00978829-376c57&transmissionDate=2019-09-03T16:14:17\",\r\n        \"type\": \"authorisations\",\r\n        \"attributes\": {\r\n            \"amount\": {\r\n                \"currency\": \"USD\",\r\n                \"value\": 20.99\r\n            },\r\n            \"transactionStatus\": \"999\",\r\n            \"errorMessage\": null,\r\n            \"authIndicator\": null,\r\n            \"transactionDate\": \"2019-04-25T22:15:20\",\r\n            \"authorisationCode\": null,\r\n            \"responseCode\": \"095\",\r\n            \"expiryDate\": \"1912\",\r\n            \"transactionType\": \"00\",\r\n            \"externalReference\": null,\r\n            \"retrievalReference\": \"924616000376\",\r\n            \"eCom\": {\r\n                \"securityLevelIndicator\": null,\r\n                \"cvc2\": null,\r\n                \"xid\": null,\r\n                \"3dSecure\": null\r\n            },\r\n            \"pos\": {\r\n                \"posCondition\": \"59\",\r\n                \"terminalId\": \"0APIAUTH\"\r\n            },\r\n            \"processCode\": \"000000\",\r\n            \"messageTypeId\": \"0430\",\r\n            \"stan\": \"000377\",\r\n            \"reasonCode\": null,\r\n            \"cardNumber\": \"485007******7807\",\r\n            \"avs\": {\r\n                \"postCode\": null,\r\n                \"streetAddress\": null,\r\n                \"response\": null\r\n            }\r\n        },\r\n        \"relationships\": {\r\n            \"merchant\": {\r\n                \"data\": {\r\n                    \"id\": \"clientNumber=00000100\",\r\n                    \"type\": \"merchants\"\r\n                }\r\n            },\r\n            \"originalAuth\": {\r\n                \"data\": {\r\n                    \"id\": \"transactionID=5d6e7500-1f00978829-376c51&transmissionDate=2019-09-03T16:13:20\",\r\n                    \"type\": \"authorisations\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
								}
							]
						},
						{
							"name": "Refund",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*[[start postmanerator :: struct-uses]]*/",
											"function populateRequestStructUses() {",
											"    APIStructure = {",
											"        structure: 'authorisations',",
											"        requiredAttributes: ['cardNumber','expiryDate','messageTypeId','transactionDate','amount','transactionType','eCom','pos'],",
											"        customAttributeDescriptions: [ // optional",
											"            {name: 'messageTypeId', description: '\\'0200\\' must be provided to indicate a financial authorization.'},",
											"            {name: 'transactionType', description: '\\'20\\' must be provided to indicate a refund transaction.'}",
											"        ],",
											"        excludedAttributes: ['transactionStatus','responseCode','reasonCode','authorisationCode','stan','retrievalReference','authIndicator','responseCode','authorisationCode','stan','retrievalReference'],",
											"        requiredRelationships: ['merchant'],",
											"        customRelationshipDescriptions: [ {name: 'originalAuth', description: 'Optional authorization linked to this refund.'} ]",
											"    };",
											"}",
											"/*[[end postmanerator :: struct-uses]]*/",
											"",
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var data = JSON.parse(responseBody);",
											"pm.environment.set(\"authorisationId\", data.data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// test merchant from sandbox",
											"pm.environment.set(\"merchantId\", \"clientNumber=10050000\")"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"authorisations\",\r\n    \"attributes\": {\r\n        \"cardNumber\" : \"4001232312234051\",\r\n        \"expiryDate\" : \"1912\",\r\n        \"messageTypeId\" : \"0200\",\r\n        \"transactionDate\" : \"2019-04-25T22:15:20\",\r\n        \"transactionType\" : \"20\",\r\n        \"amount\" : {\r\n        \t\"currency\": \"USD\",\r\n        \t\"value\": 20.99\r\n        },\r\n        \"externalReference\" : \"US226550024\",\r\n        \"pos\" : {\r\n        \t\"posCondition\" : \"59\"\r\n        },\r\n        \"avs\" : {\r\n        \t\"postCode\" : \"10118\",\r\n        \t\"streetAddress\" : \"West 34th Street\"\r\n        }\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}authorisations",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}authorisations"
									]
								},
								"description": "A refund is an 0200 message similar to a normal purchase authorization.  This example contains a sample set of parameters than can be passed when creating a refund.  Note that a refund is not the same as a reversal and is a separate transaction which may be (but not required to) related to the original authorization using the authorization code."
							},
							"response": [
								{
									"name": "Refund",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"data\": {\r\n    \"type\": \"authorisations\",\r\n    \"attributes\": {\r\n        \"cardNumber\" : \"4001232312234051\",\r\n        \"expiryDate\" : \"1912\",\r\n        \"messageTypeId\" : \"0200\",\r\n        \"transactionDate\" : \"2019-04-25T22:15:20\",\r\n        \"transactionType\" : \"20\",\r\n        \"amount\" : {\r\n        \t\"currency\": \"USD\",\r\n        \t\"value\": 20.99\r\n        },\r\n        \"externalReference\" : \"US226550024\",\r\n        \"pos\" : {\r\n        \t\"posCondition\" : \"59\"\r\n        },\r\n        \"avs\" : {\r\n        \t\"postCode\" : \"10118\",\r\n        \t\"streetAddress\" : \"West 34th Street\"\r\n        }\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/authorisations",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"authorisations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 09 Aug 2019 20:27:47 GMT"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Length",
											"value": "520"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=100"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										}
									],
									"cookie": [],
									"body": "{\r\n    \"data\": {\r\n        \"id\": \"transactionID=5d6e756c-1f00978829-376c5a&transmissionDate=2019-09-03T16:15:08\",\r\n        \"type\": \"authorisations\",\r\n        \"attributes\": {\r\n            \"amount\": {\r\n                \"currency\": \"USD\",\r\n                \"value\": 20.99\r\n            },\r\n            \"transactionStatus\": \"999\",\r\n            \"errorMessage\": null,\r\n            \"authIndicator\": null,\r\n            \"transactionDate\": \"2019-04-25T22:15:20\",\r\n            \"authorisationCode\": null,\r\n            \"responseCode\": \"000\",\r\n            \"expiryDate\": \"1912\",\r\n            \"transactionType\": \"20\",\r\n            \"externalReference\": null,\r\n            \"retrievalReference\": \"924616000378\",\r\n            \"eCom\": {\r\n                \"securityLevelIndicator\": null,\r\n                \"cvc2\": null,\r\n                \"xid\": null,\r\n                \"3dSecure\": null\r\n            },\r\n            \"pos\": {\r\n                \"posCondition\": \"59\",\r\n                \"terminalId\": \"0APIAUTH\"\r\n            },\r\n            \"processCode\": \"200000\",\r\n            \"messageTypeId\": \"0210\",\r\n            \"stan\": \"000378\",\r\n            \"reasonCode\": \"West 34th Street 10118\",\r\n            \"cardNumber\": \"400123******4051\",\r\n            \"avs\": {\r\n                \"postCode\": null,\r\n                \"streetAddress\": null,\r\n                \"response\": null\r\n            }\r\n        },\r\n        \"relationships\": {\r\n            \"merchant\": {\r\n                \"data\": {\r\n                    \"id\": \"clientNumber=00000100\",\r\n                    \"type\": \"merchants\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
								}
							]
						}
					],
					"description": "This section contains a list of online authorization use cases that can be handled using the API.  ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "BankWORKS Bulk Client Boarding",
					"item": [
						{
							"name": "MISC | Patch Bulk Merchants",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 201;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"    if (pm.environment.get(\"broker\") === null || pm.environment.get(\"broker\") === false || pm.environment.get(\"broker\") === undefined) {",
											"        pm.environment.set(\"client\", \"merchants\");",
											"        pm.environment.set(\"processingRegion\", \"\\\"processingRegion\\\": \\\"000\\\",\");",
											"        pm.environment.set(\"serviceTelephone\", \"\\\"serviceTelephone\\\":\\\"9898989898\\\",\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"client\", \"brokers\");",
											"        pm.environment.set(\"processingRegion\", \"\");",
											"        pm.environment.set(\"serviceTelephone\", \"\");",
											"    }",
											"    ",
											"    if (pm.environment.get(\"institutionNumber\") !== \"00000200\") {",
											"        pm.environment.set(\"ourReference\", pm.environment.get(\"clientNumber\"));",
											"    }",
											"    ",
											"    if (pm.environment.get(\"legalForm\") === null || pm.environment.get(\"legalForm\") === false || pm.environment.get(\"legalForm\") === undefined) {",
											"        pm.environment.set(\"legalForm\", \"001\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"legalForm\", pm.environment.get(\"legalForm\"));",
											"    }",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/json-patch+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[ {\n    \"op\": \"POST\",\n    \"path\": \"merchants\",\n    \"value\" : {\n        \"id\": 0,\n        \"type\": \"{{client}}\",\n        \"attributes\": {\n            \"clientNumber\": \"{{clientNumber}}\",\n            \"ourReference\": \"{{ourReference}}\",\n            \"clientType\" : \"{{clientType}}\",\n            \"firstName\": \"Max\",\n            \"lastName\": \"IsAwesome\",\n            \"registrationNumber\": \"123456\",\n            \"businessClass\": \"{{MCC}}\",\n            \"domesticMcc\": \"{{DMCC}}\",\n            \"shortName\": \"Max Test API\",\n            \"language\": \"001\",\n            \"legalForm\": \"{{legalForm}}\",\n            \"vatRegistrationNumber\": \"BG123 122 1231\",\n            \"tradeName\": \"Drugs\",\n            \"companyName\": \"MaxAPI\",\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"{{country}}\",\n        \t{{processingRegion}}\n            \"mainContactDetails\": {\n                {{serviceTelephone}}\n                \"contactName\": \"Max\"\n            },\n            \"middleName\": \"Middle Bill\"\n        }\n    }\n},\n{\n    \"op\": \"POST\",\n    \"path\": \"merchants\",\n    \"value\" : {\n        \"id\": 1,\n        \"type\": \"{{client}}\",\n        \"attributes\": {\n            \"clientNumber\": \"{{clientNumber2}}\",\n            \"ourReference\": \"{{ourReference}}\",\n            \"clientType\" : \"{{clientType}}\",\n            \"firstName\": \"Max\",\n            \"lastName\": \"IsAwesome\",\n            \"registrationNumber\": \"123456\",\n            \"businessClass\": \"{{MCC}}\",\n            \"domesticMcc\": \"{{DMCC}}\",\n            \"shortName\": \"Max Test API\",\n            \"language\": \"001\",\n            \"legalForm\": \"{{legalForm}}\",\n            \"vatRegistrationNumber\": \"BG123 122 1231\",\n            \"tradeName\": \"Drugs\",\n            \"companyName\": \"MaxAPI\",\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"{{country}}\",\n        \t{{processingRegion}}\n            \"mainContactDetails\": {\n                {{serviceTelephone}}\n                \"contactName\": \"Max\"\n            },\n            \"middleName\": \"Middle Bill\"\n        }\n    }\n}\n]"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									]
								},
								"description": "This call is the first step for onboarding and is **MANDATORY** to be created regardless of client level in the hierarchy. This API represents the main details of the client. For member level details (transacting merchant or lowest level in the hierarchy) this will include the unique merchant ID which stored in ourReference attribute of this request. \n\nA successful response will capture the ID of this merchants API resource such as the clientNumber and will be required on the succeeding API POST/PATCH calls for the following resources:\n\nPOST calls to:\n- /addresses\n- /merchantsAddendum\n- /merchantsAddendumUsa\n- /contracts\n- /settlementPackages\nPATCH to:\n- /merchants status for Application Processing\n\n**Important note:**\n\nFor merchant hierarchy onboarding, a top-down level approach should be followed such as Group level should be onboarded first followed by Sub-group level(s) and lastly the Member (transacting) level merchants. Please note that parent levels should be onboarded successfully (in ACTIVE status) before one can onboard the child level.\n\nEvery merchant pre-boarded to bankWORKS using WSM API will be marked with a specific status value of 023 (In Process), indicating that the merchant is not yet active in the system. After creation of the merchant followed by the related and required API resources for onboarding, the status of the merchant can be set to either 001 (Active) or 003 (Suspended) by sending a PATCH request to merchants API. Suspended status will only apply for member level merchants if needed.\n\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together. In this request, merchantId is assigned in order to be used to create related information of merchant in the succeeding calls."
							},
							"response": [
								{
									"name": "BOA-SB test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB shortName\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753951\",\n\t        \"ourReference\" : \"11223344\",\n\t        \"tradeName\" : \"BOA-SB Trade Name\",\n\t        \"companyName\" : \"BOA-SB Company Name\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"title\" : \"001\",\n\t        \t\"contactName\" : \"BOA-SB Contact Name\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:30:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "719"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Company Name\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000227\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": \"11223344\",\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Trade Name\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753951\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"001\",\n                \"contactName\": \"BOA-SB Contact Name\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB shortName\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "Top level - Group",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB Grp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB Grp test\",\n\t        \"companyName\" : \"BOA-SB Grp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB Grp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 10:58:49 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "707"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Grp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000228\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Grp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": null,\n                \"contactName\": \"BOA-SB Grp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB Grp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "Middle level - Subgroup merchant",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB SubGrp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB SubGrp test\",\n\t        \"companyName\" : \"BOA-SB SubGrp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB SubGrp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:36:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "720"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB SubGrp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000229\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB SubGrp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"000\",\n                \"contactName\": \"BOA-SB SubGrp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB SubGrp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Patch Bulk Addresses",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"    var x = pm.environment.get(\"addrCounter\");",
											"    pm.environment.set(\"category\", pm.environment.get(\"addressCategory\")[x]);",
											"    ",
											"    if (pm.environment.get(\"country\") == \"USA\") {",
											"        pm.environment.set(\"countryState\", \"\\\"state\\\": \\\"{{state}}\\\",\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"countryState\", \"\\\"state\\\": \\\"\\\",\");",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/json-patch+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"POST\",\n        \"path\": \"addresses\",\n        \"value\": {\n            \"id\": 0,\n            \"type\": \"addresses\",\n            \"attributes\": {\n                {{countryState}}\n            \"addressCategory\": \"001\",\n                \"addressLine1\": \"Address\",\n                \"addressLine2\": \"Main Street\",\n                \"addressLine3\": \"Main Place\",\n                \"addressLine4\": \"Main Block\",\n                \"addressLine5\": \"Block 5, Apartment 1\",\n                \"city\": \"City Name\",\n                \"postCode\": \"6010\",\n                \"country\": \"{{country}}\",\n                \"telephone1\": \"123456\",\n                \"telephone2\": \"234567\",\n                \"faxWork\": \"345678\",\n                \"deliveryMethod\": \"{{deliveryMethod}}\",\n                \"emailAddress\": \"email@rs2.com\",\n                \"contactName\": \"Max\"\n            },\n            \"relationships\": {\n                \"merchant\": {\n                    \"data\": {\n                        \"type\": \"merchants\",\n                        \"id\": \"clientNumber={{clientNumber}}\"\n                    }\n                }\n            }\n        }\n    },\n    {\n        \"op\": \"POST\",\n        \"path\": \"addresses\",\n        \"value\": {\n            \"id\": 1,\n            \"type\": \"addresses\",\n            \"attributes\": {\n                {{countryState}}\n            \"addressCategory\": \"022\",\n                \"addressLine1\": \"Address\",\n                \"addressLine2\": \"Main Street\",\n                \"addressLine3\": \"Main Place\",\n                \"addressLine4\": \"Main Block\",\n                \"addressLine5\": \"Block 5, Apartment 1\",\n                \"city\": \"City Name\",\n                \"postCode\": \"6010\",\n                \"country\": \"{{country}}\",\n                \"telephone1\": \"123456\",\n                \"telephone2\": \"234567\",\n                \"faxWork\": \"345678\",\n                \"deliveryMethod\": \"{{deliveryMethod}}\",\n                \"emailAddress\": \"email@rs2.com\",\n                \"contactName\": \"Max\"\n            },\n            \"relationships\": {\n                \"merchant\": {\n                    \"data\": {\n                        \"type\": \"merchants\",\n                        \"id\": \"clientNumber={{clientNumber}}\"\n                    }\n                }\n            }\n        }\n    },\n    {\n        \"op\": \"POST\",\n        \"path\": \"addresses\",\n        \"value\": {\n            \"id\": 2,\n            \"type\": \"addresses\",\n            \"attributes\": {\n                {{countryState}}\n            \"addressCategory\": \"001\",\n                \"addressLine1\": \"Address\",\n                \"addressLine2\": \"Main Street\",\n                \"addressLine3\": \"Main Place\",\n                \"addressLine4\": \"Main Block\",\n                \"addressLine5\": \"Block 5, Apartment 1\",\n                \"city\": \"City Name\",\n                \"postCode\": \"6010\",\n                \"country\": \"{{country}}\",\n                \"telephone1\": \"123456\",\n                \"telephone2\": \"234567\",\n                \"faxWork\": \"345678\",\n                \"deliveryMethod\": \"{{deliveryMethod}}\",\n                \"emailAddress\": \"email@rs2.com\",\n                \"contactName\": \"Max\"\n            },\n            \"relationships\": {\n                \"merchant\": {\n                    \"data\": {\n                        \"type\": \"merchants\",\n                        \"id\": \"clientNumber={{clientNumber2}}\"\n                    }\n                }\n            }\n        }\n    },\n    {\n        \"op\": \"POST\",\n        \"path\": \"addresses\",\n        \"value\": {\n            \"id\": 3,\n            \"type\": \"addresses\",\n            \"attributes\": {\n                {{countryState}}\n            \"addressCategory\": \"022\",\n                \"addressLine1\": \"Address\",\n                \"addressLine2\": \"Main Street\",\n                \"addressLine3\": \"Main Place\",\n                \"addressLine4\": \"Main Block\",\n                \"addressLine5\": \"Block 5, Apartment 1\",\n                \"city\": \"City Name\",\n                \"postCode\": \"6010\",\n                \"country\": \"{{country}}\",\n                \"telephone1\": \"123456\",\n                \"telephone2\": \"234567\",\n                \"faxWork\": \"345678\",\n                \"deliveryMethod\": \"{{deliveryMethod}}\",\n                \"emailAddress\": \"email@rs2.com\",\n                \"contactName\": \"Max\"\n            },\n            \"relationships\": {\n                \"merchant\": {\n                    \"data\": {\n                        \"type\": \"merchants\",\n                        \"id\": \"clientNumber={{clientNumber2}}\"\n                    }\n                }\n            }\n        }\n    }\n]"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									]
								},
								"description": "This call is **MANDATORY**.\n\nThis call will create merchant address/es depending on what address categories are required upon onboarding. Below are the minimum requirements and each category is equivalent to 1 API request:\n- Standard Address (**addressCategory 001**) is used mostly in reporting or any user interface where standard/default address is needed. \n- Clearing Address (**addressCategory 022**) is needed for outward clearing file to be sent to card schemes. This address should represent the physical location of the merchant and will most likely be the same as the Standard address. This can be enhanced in the future such that one API call for addresses will create both Standard and Clearing.\n- **merchants** resource will need to be linked to addresses"
							},
							"response": [
								{
									"name": "Group level - standard",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"data\": {\r\n    \"type\": \"addresses\",\r\n    \"attributes\": {\r\n        \"addressCategory\" : \"001\",\r\n        \"addressLine1\" : \"BOA-SB Grp test AddrLine1\",\r\n        \"city\" : \"BOA-SB Grp test\",\r\n        \"postCode\" : \"CTL1234\",\r\n        \"state\" : \"046\",\r\n        \"country\" : \"USA\",\r\n        \"telephone1\" : \"123456\",\r\n        \"telephone2\" : \"234567\",\r\n        \"faxWork\" : \"345678\",\r\n        \"deliveryMethod\" : \"000\"\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/addresses",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"addresses"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 10:59:49 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "645"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228&addressCategory=001&effectiveDate=2019-03-25\",\n        \"type\": \"addresses\",\n        \"attributes\": {\n            \"country\": \"USA\",\n            \"city\": \"BOA-SB Grp test\",\n            \"deliveryMethod\": \"000\",\n            \"contactName\": null,\n            \"telephone2\": \"234567\",\n            \"telephone1\": \"123456\",\n            \"faxWork\": \"345678\",\n            \"expiryDate\": \"9999-12-31\",\n            \"addressCategory\": \"001\",\n            \"poBox\": null,\n            \"emailAddress\": null,\n            \"addressLine1\": \"BOA-SB Grp test AddrLine1\",\n            \"addressLine2\": null,\n            \"postCode\": \"CTL1234\",\n            \"addressLine3\": null,\n            \"state\": \"046\",\n            \"addressLine4\": null,\n            \"addressLine5\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"addressLanguage\": null\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000228\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								},
								{
									"name": "SB standard address - standalone",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"data\": {\r\n    \"type\": \"addresses\",\r\n    \"attributes\": {\r\n        \"addressCategory\" : \"001\",\r\n        \"addressLine1\" : \"BOA-SB AddrLine1\",\r\n        \"city\" : \"BOA-SB City\",\r\n        \"postCode\" : \"CTL1234\",\r\n        \"state\" : \"046\",\r\n        \"country\" : \"USA\",\r\n        \"telephone1\" : \"123456\",\r\n        \"telephone2\" : \"234567\",\r\n        \"faxWork\" : \"345678\",\r\n        \"deliveryMethod\" : \"000\"\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/addresses",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"addresses"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:31:03 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "632"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227&addressCategory=001&effectiveDate=2019-03-25\",\n        \"type\": \"addresses\",\n        \"attributes\": {\n            \"country\": \"USA\",\n            \"city\": \"BOA-SB City\",\n            \"deliveryMethod\": \"000\",\n            \"contactName\": null,\n            \"telephone2\": \"234567\",\n            \"telephone1\": \"123456\",\n            \"faxWork\": \"345678\",\n            \"expiryDate\": \"9999-12-31\",\n            \"addressCategory\": \"001\",\n            \"poBox\": null,\n            \"emailAddress\": null,\n            \"addressLine1\": \"BOA-SB AddrLine1\",\n            \"addressLine2\": null,\n            \"postCode\": \"CTL1234\",\n            \"addressLine3\": null,\n            \"state\": \"046\",\n            \"addressLine4\": null,\n            \"addressLine5\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"addressLanguage\": null\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000227\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								},
								{
									"name": "Group level - clearing addr",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"data\": {\r\n    \"type\": \"addresses\",\r\n    \"attributes\": {\r\n        \"addressCategory\" : \"022\",\r\n        \"addressLine1\" : \"BOA-SB Grp test AddrLine1\",\r\n        \"city\" : \"BOA-SB Grp test\",\r\n        \"postCode\" : \"CTL1234\",\r\n        \"state\" : \"046\",\r\n        \"country\" : \"USA\",\r\n        \"telephone1\" : \"123456\",\r\n        \"telephone2\" : \"234567\",\r\n        \"faxWork\" : \"345678\",\r\n        \"deliveryMethod\" : \"000\"\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/addresses",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"addresses"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:00:54 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "645"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228&addressCategory=022&effectiveDate=2019-03-25\",\n        \"type\": \"addresses\",\n        \"attributes\": {\n            \"country\": \"USA\",\n            \"city\": \"BOA-SB Grp test\",\n            \"deliveryMethod\": \"000\",\n            \"contactName\": null,\n            \"telephone2\": \"234567\",\n            \"telephone1\": \"123456\",\n            \"faxWork\": \"345678\",\n            \"expiryDate\": \"9999-12-31\",\n            \"addressCategory\": \"022\",\n            \"poBox\": null,\n            \"emailAddress\": null,\n            \"addressLine1\": \"BOA-SB Grp test AddrLine1\",\n            \"addressLine2\": null,\n            \"postCode\": \"CTL1234\",\n            \"addressLine3\": null,\n            \"state\": \"046\",\n            \"addressLine4\": null,\n            \"addressLine5\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"addressLanguage\": null\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000228\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								},
								{
									"name": "Member level - standard",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"data\": {\r\n    \"type\": \"addresses\",\r\n    \"attributes\": {\r\n        \"addressCategory\" : \"001\",\r\n        \"addressLine1\" : \"BOA-SB Member test AddrLine1\",\r\n        \"city\" : \"BOA-SB Member test\",\r\n        \"postCode\" : \"CTL1234\",\r\n        \"state\" : \"046\",\r\n        \"country\" : \"USA\",\r\n        \"telephone1\" : \"123456\",\r\n        \"telephone2\" : \"234567\",\r\n        \"faxWork\" : \"345678\",\r\n        \"deliveryMethod\" : \"000\"\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/addresses",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"addresses"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:59:06 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "651"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000230&addressCategory=001&effectiveDate=2019-03-25\",\n        \"type\": \"addresses\",\n        \"attributes\": {\n            \"country\": \"USA\",\n            \"city\": \"BOA-SB Member test\",\n            \"deliveryMethod\": \"000\",\n            \"contactName\": null,\n            \"telephone2\": \"234567\",\n            \"telephone1\": \"123456\",\n            \"faxWork\": \"345678\",\n            \"expiryDate\": \"9999-12-31\",\n            \"addressCategory\": \"001\",\n            \"poBox\": null,\n            \"emailAddress\": null,\n            \"addressLine1\": \"BOA-SB Member test AddrLine1\",\n            \"addressLine2\": null,\n            \"postCode\": \"CTL1234\",\n            \"addressLine3\": null,\n            \"state\": \"046\",\n            \"addressLine4\": null,\n            \"addressLine5\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"addressLanguage\": null\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000230\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Get Contract Definitions",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"    if (pm.environment.has(\"services\") === false || pm.environment.get(\"services\") === null) {",
											"        pm.environment.set(\"serviceDefinitionsParams\", \"accountDefinitions\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"serviceDefinitionsParams\", \"serviceDefinitions\");",
											"    }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 200;",
											"    var data = JSON.parse(responseBody);",
											"    pm.environment.set(\"contractId\", data.data[0].id);",
											"    ",
											"// Checks if the services variable is defined. If defined, it populates the myServices Array of Service IDs",
											"    if (pm.environment.has(\"services\") === true && pm.environment.get(\"services\") !== null) {",
											"        var data = JSON.parse(responseBody);",
											"        pm.environment.set(\"serviceDefinitions\", data.data.forEach(contractDefinition => {",
											"            const result = contractDefinition.relationships.serviceDefinitions.data.reduce((serviceDefIds, serviceDefinition) => {",
											"                serviceDefIds.push(serviceDefinition.id);",
											"                pm.environment.set(\"myServices\", serviceDefIds);",
											"                return serviceDefIds;",
											"            }, []);",
											"        }));",
											"        pm.environment.set(\"position\", 0);",
											"        pm.environment.set(\"devicesCounter\", 0);",
											"        pm.environment.unset(\"serviceDefinitions\");",
											"    }",
											"//Checks if the accounts variable is defined. If defined, it populates the myAccounts Array of Service IDs",
											"    if (pm.environment.has(\"acctCurrencyArray\")) {",
											"        pm.environment.set(\"accountDefinitions\", data.data.forEach(contractDefinition => {",
											"            const result = contractDefinition.relationships.accountDefinitions.data.reduce((accountDefIds, accountDefinitions) => {",
											"                accountDefIds.push(accountDefinitions.id);",
											"                pm.environment.set(\"myAccounts\", accountDefIds);",
											"                return accountDefIds;",
											"            }, []);",
											"        }));",
											"        pm.environment.unset(\"accountDefinitions\");",
											"        pm.environment.set(\"acctCounter\", 0);",
											"    }",
											"    ",
											"    if (pm.environment.get(\"clientLevel\" != \"001\")) {",
											"        pm.environment.unset(\"position\");",
											"        pm.environment.unset(\"devicesCounter\");",
											"        pm.environment.unset(\"myServices\");",
											"        pm.environment.unset(\"services\");",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"value": "true",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contractDefinitions?include=accountDefinitions&include={{serviceDefinitionsParams}}&filter[accountDefinitions][accountTypeId]={{accountTypes}}&filter[accountDefinitions][accountCurrency]={{acctCurrencyArray}}&filter[serviceDefinitions][serviceId]={{services}}&fields[serviceDefinitions]=id&sort[accountDefinitions]=id&sort[serviceDefinitions]=id&filter[id]={{contractDefinitionId}}&filter[serviceDefinitions][cardBrand]={{cardBrands}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contractDefinitions"
									],
									"query": [
										{
											"key": "include",
											"value": "accountDefinitions"
										},
										{
											"key": "include",
											"value": "{{serviceDefinitionsParams}}"
										},
										{
											"key": "filter[accountDefinitions][accountTypeId]",
											"value": "{{accountTypes}}"
										},
										{
											"key": "filter[accountDefinitions][accountCurrency]",
											"value": "{{acctCurrencyArray}}"
										},
										{
											"key": "filter[serviceDefinitions][serviceId]",
											"value": "{{services}}"
										},
										{
											"key": "fields[serviceDefinitions]",
											"value": "id"
										},
										{
											"key": "sort[accountDefinitions]",
											"value": "id"
										},
										{
											"key": "sort[serviceDefinitions]",
											"value": "id"
										},
										{
											"key": "filter[id]",
											"value": "{{contractDefinitionId}}"
										},
										{
											"key": "filter[serviceDefinitions][cardBrand]",
											"value": "{{cardBrands}}"
										}
									]
								},
								"description": "Mandatory to determine details such as the Account IDs and Service IDs."
							},
							"response": []
						},
						{
							"name": "MISC | Post Merchant Contract",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Declaring the relationship based on client level",
											"// Is Standalone Member or Group",
											"    if (pm.environment.get(\"hierarchyLevel\") === 0) {",
											"        pm.environment.set(\"contractRelationship\",  \"contractDefinition\");",
											"        pm.environment.set(\"type\",                  \"contractDefinitions\");",
											"        pm.environment.set(\"levelContractId\",       \"{{contractId}}\");",
											"    }",
											"// Is Sub-Group in Hierarchy - Supports 8 Sub-Group Levels (excluding Group and Member levels)",
											"    else if (pm.environment.get(\"hierarchyLevel\") >= 1) {",
											"        pm.environment.set(\"contractRelationship\",  \"parentContracts\");",
											"        pm.environment.set(\"type\",                  \"contracts\");",
											"// Creating Sub-Group Hierarchies",
											"        if (pm.environment.get(\"hierarchyLevel\") == 1) {",
											"            pm.environment.set(\"levelContractId\",   \"{{groupContractId}}\");",
											"        }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 2) {",
											"            pm.environment.set(\"levelContractId\",   \"{{sub1ContractId}}\");",
											"        }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 3) {",
											"            pm.environment.set(\"levelContractId\",   \"{{sub2ContractId}}\");",
											"        }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 4) {",
											"            pm.environment.set(\"levelContractId\",   \"{{sub3ContractId}}\");",
											"        }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 5) {",
											"            pm.environment.set(\"levelContractId\",   \"{{sub4ContractId}}\");",
											"        }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 6) {",
											"            pm.environment.set(\"levelContractId\",   \"{{sub5ContractId}}\");",
											"        }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 7) {",
											"            pm.environment.set(\"levelContractId\",   \"{{sub6ContractId}}\");",
											"        }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 8) {",
											"            pm.environment.set(\"levelContractId\",   \"{{sub7ContractId}}\");",
											"        }",
											"    }",
											"// Is Member in Hierarchy (2 Level)",
											"    else if (pm.environment.get(\"hierarchyLevel\") == -2) {",
											"        pm.environment.set(\"levelContractId\",       \"{{groupContractId}}\");",
											"        pm.environment.set(\"contractRelationship\",  \"parentContracts\");",
											"        pm.environment.set(\"type\",                  \"contracts\");",
											"    }",
											"// Is Member in Hierarchy (3+ Level)",
											"    else if (pm.environment.get(\"hierarchyLevel\") == -1) {",
											"        pm.environment.set(\"levelContractId\",       \"{{upperContractID}}\");",
											"        pm.environment.set(\"contractRelationship\",  \"parentContracts\");",
											"        pm.environment.set(\"type\",                  \"contracts\");",
											"    }",
											"// If BOA - Set Entity ID",
											"    if (pm.environment.get(\"institutionNumber\") == \"00000200\") {",
											"        pm.environment.set(\"entity\", \"\\\"entityId\\\" : \\\"{{entityId}}\\\",\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"entity\", \"\");",
											"    }",
											"// If BNZ - Do not set Transaction Charges Tariff",
											"    if (pm.environment.get(\"institutionNumber\") !== \"00000108\" && pm.environment.get(\"institutionNumber\") !== \"00000106\") {",
											"        pm.environment.set(\"merchantTranTariff\", \"\\\"transactionChargesTariff\\\" : \\\"{{transactionChargesTariff}}\\\",\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"merchantTranTariff\", \"\");",
											"    }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Setting Contract Variables based on Hierarchy",
											"    tests[\"Status Code 201\"] = responseCode.code === 201;",
											"    var resp = JSON.parse(responseBody);",
											"    pm.environment.set(\"currentContractId\",resp.data.id);",
											"    if (pm.environment.get(\"hierarchyLevel\") === 0) {",
											"// Group",
											"        if (pm.environment.get(\"clientLevel\") == \"002\") {",
											"            pm.environment.set(\"groupContractId\",   resp.data.id);",
											"            pm.environment.set(\"upperContractID\",   resp.data.id);",
											"        }",
											"// Standalone Member",
											"        else if (pm.environment.get(\"clientLevel\") == \"001\") {",
											"            pm.environment.set(\"contractId\",     resp.data.id);",
											"        }",
											"    }",
											"// Sub-Group",
											"    else if     (pm.environment.get(\"hierarchyLevel\") >= 1) { pm.environment.set(\"upperContractID\",resp.data.id);",
											"        if      (pm.environment.get(\"hierarchyLevel\") == 1) { pm.environment.set(\"sub1ContractId\",resp.data.id); }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 2) { pm.environment.set(\"sub2ContractId\",resp.data.id); }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 3) { pm.environment.set(\"sub3ContractId\",resp.data.id); }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 4) { pm.environment.set(\"sub4ContractId\",resp.data.id); }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 5) { pm.environment.set(\"sub5ContractId\",resp.data.id); }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 6) { pm.environment.set(\"sub6ContractId\",resp.data.id); }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 7) { pm.environment.set(\"sub7ContractId\",resp.data.id); }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 8) { pm.environment.set(\"sub8ContractId\",resp.data.id); }",
											"    }",
											"// Member in Hierarchy",
											"    else {",
											"        pm.environment.set(\"contractId\",     resp.data.id);",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"contracts\",\n        \"attributes\": {\n        \t{{entity}}\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"{{clientScheme}}\",\n            \"clientLevel\": \"{{clientLevel}}\",\n            \"settlementMethod\": \"{{settlementMethod}}\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"{{postingMethod}}\",\n            {{merchantTranTariff}}\n            \"tierGroup\" : \"{{tierGroup}}\"\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"type\": \"merchants\",\n                    \"id\": \"{{merchantId}}\"\n                }\n            },\n            \"{{contractRelationship}}\": {\n                \"data\": {\n                    \"type\": \"{{type}}\",\n                    \"id\": \"{{levelContractId}}\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									]
								},
								"description": "This will create a contract resource for a new client and is **MANDATORY** to be created regardless of client level. Creation of new contracts is not possible following client onboarding. Can be used to create future effective changes to a current contract record. \n\n**IMPORTANT NOTE:**\n\n*ATTRIBUTES:*\n\n- a top-down level approach creation below should be followed. The attribute **clientLevel** in this resource will need to be specified for each client level contract creation. Below are the available client levels available in BankWorks:\n\t- Group level: **002**\n\t- Subgroup level: **003**\n\t- Member level: **001**\n- **clientTariff** value can be retrieved from the list of **accountFeeDefinitions** or **serviceFeeDefinitions** prior this call\n- **transactionChargesTariff** value can be retrieved from **productChargeDefinitions** API prior this call\n\n*RELATIONSHIPS:*\n\n- **merchant** resource created should be associated in the relationships\n- **contractDefinition** is required in the relationship association as well for contract creation of **Group level** or **Standalone** merchants.\n- for creation of **Subgroup and Member level** contracts, **parentContracts** relationship should be associated instead of *contractDefinition* from the example request. Contract ID of the parent will need to be passed in this relationship.\n\t```\n\t\"parentContracts\" : {\n\t\t\"data\" : {\n\t\t\t\"type\" : \"contracts\",\n\t\t\t\"id\" : \"{{parentContractId}}\"\n\t\t}\n\t}\n\t```"
							},
							"response": [
								{
									"name": "Subgroup client contract",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"000003\",\n            \"clientLevel\": \"003\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"{{transactionChargesTariff}}\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n    \t\t  \"parentContracts\" : {\n\t\t\t      \"data\" : {\n\t\t\t          \"type\" : \"contracts\",\n\t\t\t          \"id\" : \"{{parentContractId}}\"\n\t\t\t      }\n\t\t\t  }\n\t    }\n    }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:41:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "724"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=003\",\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"tierGroup\": null,\n            \"clientLevel\": \"003\",\n            \"clientTariff\": \"000001\",\n            \"settlementMethod\": \"030\",\n            \"groupNumber\": \"00000016\",\n            \"chargeTierLevel\": null,\n            \"bankReference\": null,\n            \"clientScheme\": \"000003\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"contractReference\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"status\": null,\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"000001\"\n        },\n        \"relationships\": {\n            \"parentContracts\": {\n                \"data\": [\n                    {\n                        \"id\": \"clientNumber=00000228&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=002\",\n                        \"type\": \"contracts\"\n                    }\n                ]\n            },\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000229\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								},
								{
									"name": "BOA-SB contract test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"000003\",\n            \"clientLevel\": \"001\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"{{transactionChargesTariff}}\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n    \t\t\"contractDefinition\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"contractDefinitions\",\n\t    \t\t\t\"id\" : \"{{contractDefinitionId}}\"\n\t    \t\t}\n\t    \t}\n\t    }\n    }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:42:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "673"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227&groupNumber=00000014&effectiveDate=2019-03-25&clientLevel=001\",\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"tierGroup\": null,\n            \"clientLevel\": \"001\",\n            \"clientTariff\": \"000001\",\n            \"settlementMethod\": \"030\",\n            \"groupNumber\": \"00000014\",\n            \"chargeTierLevel\": null,\n            \"bankReference\": null,\n            \"clientScheme\": \"000003\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"contractReference\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"status\": null,\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"000001\"\n        },\n        \"relationships\": {\n            \"contractDefinition\": {\n                \"data\": {\n                    \"id\": \"serviceContractId=051\",\n                    \"type\": \"contractDefinitions\"\n                }\n            },\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000227\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								},
								{
									"name": "Group level client contract",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"000003\",\n            \"clientLevel\": \"002\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"{{transactionChargesTariff}}\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n    \t\t\"contractDefinition\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"contractDefinitions\",\n\t    \t\t\t\"id\" : \"{{contractDefinitionId}}\"\n\t    \t\t}\n\t    \t}\n\t    }\n    }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:06:29 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "673"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=002\",\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"tierGroup\": null,\n            \"clientLevel\": \"002\",\n            \"clientTariff\": \"000001\",\n            \"settlementMethod\": \"030\",\n            \"groupNumber\": \"00000016\",\n            \"chargeTierLevel\": null,\n            \"bankReference\": null,\n            \"clientScheme\": \"000003\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"contractReference\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"status\": null,\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"000001\"\n        },\n        \"relationships\": {\n            \"contractDefinition\": {\n                \"data\": {\n                    \"id\": \"serviceContractId=051\",\n                    \"type\": \"contractDefinitions\"\n                }\n            },\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000228\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Patch Bulk Settlement Package",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 201;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"    var account = pm.environment.get(\"myAccounts\");",
											"    var x = Number(pm.environment.get(\"acctCounter\"));",
											"    pm.environment.set(\"currency\", JSON.stringify(pm.environment.get(\"myAccounts\")[pm.environment.get(\"acctCounter\")]).split(\"&\")[1].split(\"=\")[1]);",
											"    if (pm.environment.has(\"fundingClientNumber\") === true && pm.environment.get(\"fundingClientNumber\") !== null) {",
											"    \tpm.environment.set(\"funding\", \"\\\"fundingClient\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"fundingClients\\\", \\r \\\"id\\\": \\\"clientNumber={{fundingClientNumber}}\\\"\\r}\\r},\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"funding\", \"\");",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/json-patch+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									},
									{
										"key": "Crnk-Compact",
										"value": "true",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"POST\",\n        \"path\": \"settlementPackages\",\n        \"value\": {\n            \"id\": 0,\n            \"type\": \"settlementPackages\",\n            \"attributes\": {\n                \"settlementCategory\": \"001\",\n                \"bankClearingNumber\": \"{{bankClearingNumber}}\",\n                \"bankTelNumber\": \"1236547890\",\n                \"paymentReference\": \"PR_665522KT\",\n                \"paymentMethod\": \"002\",\n                \"accountCurrency\": \"{{currency}}\",\n                \"contingencyLiabilityAccount\": \"\",\n                \"correspondingBankAccount\": \"84783403\",\n                \"correspondingBankNumber\": \"00000000030080508568\",\n                \"receiverCountryCode\": \"{{country}}\",\n                \"noteText\": \"Max Testing\",\n                \"payableDetails\": {\n                    \"counterBankAccount\": \"30345677\",\n                    \"confirmationMethod\": \"003\",\n                    \"bankContactName\": \"BANK_CONTACT_NAME\",\n                    \"counterBankCity\": \"Count Bank City\"\n                }\n            },\n            \"relationships\": {\n                {{funding}}\n            \"merchant\": {\n                    \"data\": {\n                        \"type\": \"merchants\",\n                        \"id\": \"clientNumber={{clientNumber}}\"\n                    }\n                }\n            }\n        }\n    },\n    {\n        \"op\": \"POST\",\n        \"path\": \"settlementPackages\",\n        \"value\": {\n            \"id\": 1,\n            \"type\": \"settlementPackages\",\n            \"attributes\": {\n                \"settlementCategory\": \"002\",\n                \"bankClearingNumber\": \"{{bankClearingNumber}}\",\n                \"bankTelNumber\": \"1236547890\",\n                \"paymentReference\": \"PR_665522KT\",\n                \"paymentMethod\": \"002\",\n                \"accountCurrency\": \"{{currency}}\",\n                \"contingencyLiabilityAccount\": \"\",\n                \"correspondingBankAccount\": \"84783403\",\n                \"correspondingBankNumber\": \"00000000030080508568\",\n                \"receiverCountryCode\": \"{{country}}\",\n                \"noteText\": \"Max Testing\",\n                \"payableDetails\": {\n                    \"counterBankAccount\": \"30345677\",\n                    \"confirmationMethod\": \"003\",\n                    \"bankContactName\": \"BANK_CONTACT_NAME\",\n                    \"counterBankCity\": \"Count Bank City\"\n                }\n            },\n            \"relationships\": {\n                {{funding}}\n            \"merchant\": {\n                    \"data\": {\n                        \"type\": \"merchants\",\n                        \"id\": \"clientNumber={{clientNumber}}\"\n                    }\n                }\n            }\n        }\n    },\n    {\n        \"op\": \"POST\",\n        \"path\": \"settlementPackages\",\n        \"value\": {\n            \"id\": 2,\n            \"type\": \"settlementPackages\",\n            \"attributes\": {\n                \"settlementCategory\": \"001\",\n                \"bankClearingNumber\": \"{{bankClearingNumber}}\",\n                \"bankTelNumber\": \"1236547890\",\n                \"paymentReference\": \"PR_665522KT\",\n                \"paymentMethod\": \"002\",\n                \"accountCurrency\": \"{{currency}}\",\n                \"contingencyLiabilityAccount\": \"\",\n                \"correspondingBankAccount\": \"84783403\",\n                \"correspondingBankNumber\": \"00000000030080508568\",\n                \"receiverCountryCode\": \"{{country}}\",\n                \"noteText\": \"Max Testing\",\n                \"payableDetails\": {\n                    \"counterBankAccount\": \"30345677\",\n                    \"confirmationMethod\": \"003\",\n                    \"bankContactName\": \"BANK_CONTACT_NAME\",\n                    \"counterBankCity\": \"Count Bank City\"\n                }\n            },\n            \"relationships\": {\n                {{funding}}\n            \"merchant\": {\n                    \"data\": {\n                        \"type\": \"merchants\",\n                        \"id\": \"clientNumber={{clientNumber2}}\"\n                    }\n                }\n            }\n        }\n    },\n    {\n        \"op\": \"POST\",\n        \"path\": \"settlementPackages\",\n        \"value\": {\n            \"id\": 3,\n            \"type\": \"settlementPackages\",\n            \"attributes\": {\n                \"settlementCategory\": \"002\",\n                \"bankClearingNumber\": \"{{bankClearingNumber}}\",\n                \"bankTelNumber\": \"1236547890\",\n                \"paymentReference\": \"PR_665522KT\",\n                \"paymentMethod\": \"002\",\n                \"accountCurrency\": \"{{currency}}\",\n                \"contingencyLiabilityAccount\": \"\",\n                \"correspondingBankAccount\": \"84783403\",\n                \"correspondingBankNumber\": \"00000000030080508568\",\n                \"receiverCountryCode\": \"{{country}}\",\n                \"noteText\": \"Max Testing\",\n                \"payableDetails\": {\n                    \"counterBankAccount\": \"30345677\",\n                    \"confirmationMethod\": \"003\",\n                    \"bankContactName\": \"BANK_CONTACT_NAME\",\n                    \"counterBankCity\": \"Count Bank City\"\n                }\n            },\n            \"relationships\": {\n                {{funding}}\n            \"merchant\": {\n                    \"data\": {\n                        \"type\": \"merchants\",\n                        \"id\": \"clientNumber={{clientNumber2}}\"\n                    }\n                }\n            }\n        }\n    }\n]"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									]
								},
								"description": "This will define the settlement information including RBS bank account number of the merchant and is **MANDATORY** only if a **billing level** account is to be created.\n\nMultiple settlement information/package can be added (up to 99). This number will be set automatically and stored in settlementNumber as part of the resource ID.\n\nFor settlementPackages with related **fundingClient**, it is to be associated in the relationship from the request apart from **merchant** relationship/linkage:\n\t\n```\n\t\"fundingClient\": {\n        \"data\": {\n          \"type\": \"fundingClients\",\n          \"id\": \"{{fundingClientId}}\"\n        }\n      }\n```"
							},
							"response": [
								{
									"name": "Subgroup settlement info - payable",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"data\": {\r\n    \"type\": \"settlementPackages\",\r\n    \"attributes\": {\r\n    \t\"settlementCategory\" : \"001\",\r\n    \t\"bankClearingNumber\" : \"345234567\",\r\n        \"accountCurrency\" : \"USD\",\r\n        \"contingencyLiabilityAccount\" : \"\",\r\n        \"correspondingBankAccount\" : \"84783403\",\r\n        \"correspondingBankNumber\" : \"\",\r\n        \"receiverCountryCode\" : \"USA\",\r\n        \"noteText\" : \"BOA-SubGrp test\",\r\n        \"payableDetails\" : {\r\n        \t\"counterBankAccount\" : \"123456789\",\r\n        \t\"confirmationMethod\" : \"003\"\r\n        }\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/settlementPackages",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"settlementPackages"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:49:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "776"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229&settlementNumber=01\",\n        \"type\": \"settlementPackages\",\n        \"attributes\": {\n            \"payableDetails\": {\n                \"counterBankAccount\": \"123456789\",\n                \"counterBankNumber\": null,\n                \"confirmationMethod\": \"003\",\n                \"counterClientNumber\": null,\n                \"bankTelNumber\": null,\n                \"bankContactName\": null,\n                \"counterBankName\": null,\n                \"counterBankAccountName\": null,\n                \"counterBankCity\": null,\n                \"ibanReference\": null,\n                \"paymentReference\": null,\n                \"fundingNarrative\": null\n            },\n            \"noteText\": \"BOA-SubGrp test\",\n            \"bankClearingNumber\": \"345234567\",\n            \"receiverCountryCode\": \"USA\",\n            \"contingencyLiabilityAccount\": \"\",\n            \"settlementCategory\": \"001\",\n            \"accountCurrency\": \"USD\",\n            \"correspondingBankNumber\": \"\",\n            \"correspondingBankAccount\": \"84783403\",\n            \"receivableDetails\": null\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000229\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								},
								{
									"name": "BOA-SB settl test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"data\": {\r\n    \"type\": \"settlementPackages\",\r\n    \"attributes\": {\r\n    \t\"settlementCategory\" : \"002\",\r\n    \t\"bankClearingNumber\" : \"345234567\",\r\n        \"accountCurrency\" : \"USD\",\r\n        \"contingencyLiabilityAccount\" : \"\",\r\n        \"correspondingBankAccount\" : \"84783403\",\r\n        \"correspondingBankNumber\" : \"\",\r\n        \"receiverCountryCode\" : \"USA\",\r\n        \"payableDetails\" : {\r\n        \t\"counterBankAccount\" : \"123456789\"\r\n        }\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/settlementPackages",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"settlementPackages"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:46:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "762"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227&settlementNumber=01\",\n        \"type\": \"settlementPackages\",\n        \"attributes\": {\n            \"payableDetails\": {\n                \"counterBankAccount\": \"123456789\",\n                \"counterBankNumber\": null,\n                \"confirmationMethod\": null,\n                \"counterClientNumber\": null,\n                \"bankTelNumber\": null,\n                \"bankContactName\": null,\n                \"counterBankName\": null,\n                \"counterBankAccountName\": null,\n                \"counterBankCity\": null,\n                \"ibanReference\": null,\n                \"paymentReference\": null,\n                \"fundingNarrative\": null\n            },\n            \"noteText\": null,\n            \"bankClearingNumber\": \"345234567\",\n            \"receiverCountryCode\": \"USA\",\n            \"contingencyLiabilityAccount\": \"\",\n            \"settlementCategory\": \"002\",\n            \"accountCurrency\": \"USD\",\n            \"correspondingBankNumber\": \"\",\n            \"correspondingBankAccount\": \"84783403\",\n            \"receivableDetails\": null\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000227\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Patch Bulk Accounts",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Utilising the account ID based on the next AccountDefinition ID in the myAccounts array",
											"    var account = pm.environment.get(\"myAccounts\");",
											"    var x = Number(pm.environment.get(\"acctCounter\"));",
											"    pm.environment.set(\"accountId\", JSON.parse(JSON.stringify(account[x])));",
											"    pm.environment.set(\"accountTypeId\", pm.environment.get(\"accountId\").split(\"&\")[0].split(\"=\")[1]);",
											"",
											"// Billing Level determines if there should be a Settlement Information record link",
											"    if (pm.environment.get(\"billingFee\") === \"001\" && pm.environment.get(\"accountTypeId\") === \"007\") {",
											"        if (pm.environment.get(\"billingLevel\") == \"001\") {",
											"            pm.environment.set(\"settlementPackageLink\", \"\\\"settlementPackage\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"settlementPackages\\\", \\r \\\"id\\\": \\\"{{settlementPackageId}}\\\"\\r}\\r},\");",
											"        }",
											"        else {",
											"            pm.environment.set(\"settlementPackageLink\", \"\");",
											"        }",
											"    }",
											"    else if (pm.environment.get(\"billingRollingReserve\") === \"001\" && pm.environment.get(\"accountTypeId\") === \"059\") {",
											"        if (pm.environment.get(\"billingLevel\") == \"001\") {",
											"            pm.environment.set(\"settlementPackageLink\", \"\\\"settlementPackage\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"settlementPackages\\\", \\r \\\"id\\\": \\\"{{settlementPackageId}}\\\"\\r}\\r},\");",
											"        }",
											"        else {",
											"            pm.environment.set(\"settlementPackageLink\", \"\");",
											"        }",
											"    }",
											"    else if (pm.environment.get(\"billingDispute\") === \"001\" && pm.environment.get(\"accountTypeId\") === \"009\") {",
											"        if (pm.environment.get(\"billingLevel\") == \"001\") {",
											"            pm.environment.set(\"settlementPackageLink\", \"\\\"settlementPackage\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"settlementPackages\\\", \\r \\\"id\\\": \\\"{{settlementPackageId}}\\\"\\r}\\r},\");",
											"        }",
											"        else {",
											"            pm.environment.set(\"settlementPackageLink\", \"\");",
											"        }",
											"    }",
											"    else if (pm.environment.get(\"billingPAR\") === \"001\" && pm.environment.get(\"accountTypeId\") === \"012\") {",
											"        if (pm.environment.get(\"billingLevel\") == \"001\") {",
											"            pm.environment.set(\"settlementPackageLink\", \"\\\"settlementPackage\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"settlementPackages\\\", \\r \\\"id\\\": \\\"{{settlementPackageId}}\\\"\\r}\\r},\");",
											"        }",
											"        else {",
											"            pm.environment.set(\"settlementPackageLink\", \"\");",
											"        }",
											"    }",
											"    else if (pm.environment.get(\"billingFee\") === null || pm.environment.get(\"billingFee\") === false) {",
											"        if (pm.environment.get(\"billingLevel\") == \"001\") {",
											"            pm.environment.set(\"settlementPackageLink\", \"\\\"settlementPackage\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"settlementPackages\\\", \\r \\\"id\\\": \\\"{{settlementPackageId}}\\\"\\r}\\r},\");",
											"        }",
											"        else {",
											"            pm.environment.set(\"settlementPackageLink\", \"\");",
											"        }",
											"    }",
											"    else {",
											"            pm.environment.set(\"settlementPackageLink\", \"\");",
											"    }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Creating Accounts",
											"    tests[\"Status Code 201\"] = responseCode.code === 201;",
											"    var data = JSON.parse(responseBody);",
											"    ",
											"//If there are more accounts to add, loop back to Create Settlement Package",
											"    if ((Number(pm.environment.get(\"acctCounter\")+1)) < (Number(pm.environment.get(\"myAccounts\").length))) {",
											"        pm.environment.set(\"acctCounter\", Number(pm.environment.get(\"acctCounter\")+1));",
											"        postman.setNextRequest(\"Post Settlement Package\");",
											"    }",
											"//If services is not defined, skip to Process Applicaiton",
											"    else if (pm.environment.has(\"services\") === false || pm.environment.get(\"services\") === null) {",
											"        postman.setNextRequest(\"Process Application\");",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/json-patch+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									},
									{
										"key": "Crnk-Compact",
										"value": "true",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[ {\n    \"op\": \"POST\",\n    \"path\": \"accounts\",\n    \"value\": {\n        \"id\": 0,\n        \"type\": \"accounts\",\n        \"attributes\": {\n            \"clientAccountName\": \"Merchant PAR Account\"\n        },\n        \"relationships\": {\n            \"accountDefinition\": {\n                \"data\": {\n                    \"type\": \"accountDefinitions\",\n                    \"id\": \"accountTypeId=012&accountCurrency=EUR&serviceContractId=112\"\n                }\n            },\n            \"contracts\": {\n                \"data\": [\n                    {\n                        \"type\": \"contracts\",\n                        \"id\": \"clientNumber=10101008&groupNumber=00013822&effectiveDate=2020-10-31&clientLevel=002\"\n                    }\n                ]\n            }\n        }\n    }\n},\n{\n    \"op\": \"POST\",\n    \"path\": \"accounts\",\n    \"value\": {\n        \"id\": 1,\n        \"type\": \"accounts\",\n        \"attributes\": {\n            \"clientAccountName\": \"Merchant FEE Account\"\n        },\n        \"relationships\": {\n            \"accountDefinition\": {\n                \"data\": {\n                    \"type\": \"accountDefinitions\",\n                    \"id\": \"accountTypeId=007&accountCurrency=EUR&serviceContractId=112\"\n                }\n            },\n            \"contracts\": {\n                \"data\": {\n                    \"type\": \"contracts\",\n                    \"id\": \"clientNumber=10101008&groupNumber=00013822&effectiveDate=2020-10-31&clientLevel=002\"\n                }\n            }\n        }\n    }\n} ]"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Patch Mandate Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 201;",
											"    var resp = JSON.parse(responseBody);",
											"    pm.environment.set(\"mandateInformationId\", resp.data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/json-patch+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"POST\",\n        \"path\": \"mandateInformation\",\n        \"value\": {\n            \"id\": 0,\n            \"type\": \"mandateInformation\",\n            \"attributes\": {\n                \"uniqueMandateReference\": \"MANDJMH002\",\n                \"instrumentCode\": \"001\",\n                \"firstOccurrence\": \"001\",\n                \"signatureDate\": \"2019-12-31\"\n            },\n            \"relationships\": {\n                \"settlementPackages\": {\n                    \"data\": {\n                        \"type\": \"settlementPackages\",\n                        \"id\": \"clientNumber=10102008&settlementNumber=01\"\n                    }\n                }\n            }\n        }\n    },\n    {\n        \"op\": \"POST\",\n        \"path\": \"mandateInformation\",\n        \"value\": {\n            \"id\": 1,\n            \"type\": \"mandateInformation\",\n            \"attributes\": {\n                \"uniqueMandateReference\": \"MANDJMH002\",\n                \"instrumentCode\": \"001\",\n                \"firstOccurrence\": \"001\",\n                \"signatureDate\": \"2019-12-31\"\n            },\n            \"relationships\": {\n                \"settlementPackages\": {\n                    \"data\": {\n                        \"type\": \"settlementPackages\",\n                        \"id\": \"clientNumber=10102008&settlementNumber=02\"\n                    }\n                }\n            }\n        }\n    }\n]"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									]
								}
							},
							"response": [
								{
									"name": "Member level addendum USA",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\": {\n\t\t\"type\": \"merchantsAddendumUsa\",\n\t\t\"attributes\": {\n\t\t\t\"taxId\": \"123456\",\n\t\t\t\"independentSalesOrganisation\": \"GM SalesOrg\",\n\t\t\t\"url\": \"http://www.website.com\"\n\t\t},\n\t\t\"relationships\" : {\n\t\t\t\"merchant\" : {\n\t\t\t\t\"data\" : {\n\t\t\t\t\t\"type\" : \"merchants\",\n\t\t\t\t\t\"id\" : \"{{merchantId}}\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchantsAddendumUsa",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchantsAddendumUsa"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2019 16:37:29 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "288"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000008\",\n        \"type\": \"merchantsAddendumUsa\",\n        \"attributes\": {\n            \"taxId\": \"123456\",\n            \"independentSalesOrganisation\": \"GM SalesOrg\",\n            \"url\": \"http://www.website.com\"\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000008\",\n                    \"type\": \"merchants\"\n                }\n            }\n        },\n        \"meta\": {\n            \"ttl\": 2592000\n        }\n    }\n}"
								},
								{
									"name": "USA Merchant Addendum - sample",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchantsAddendumUsa",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchantsAddendumUsa"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Wed, 02 Oct 2019 09:53:24 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "288"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000002\",\n        \"type\": \"merchantsAddendumUsa\",\n        \"attributes\": {\n            \"taxId\": \"123456\",\n            \"independentSalesOrganisation\": \"GM SalesOrg\",\n            \"url\": \"http://www.website.com\"\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000002\",\n                    \"type\": \"merchants\"\n                }\n            }\n        },\n        \"meta\": {\n            \"ttl\": 2592000\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Post Bulk Services",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status Code 201\"] = responseCode.code === 201;"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Accept",
										"value": "application/json-patch+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[ {\n    \"op\": \"POST\",\n    \"path\": \"services\",\n    \"value\": {\n        \"id\": 0,\n        \"type\": \"services\",\n        \"attributes\": {\n            \"clientTariff\" : \"012487\"\n        },\n        \"relationships\": {\n            \"serviceDefinitions\": {\n                \"data\": [\n                    {\n                    \"type\": \"serviceDefinitions\",\n                    \"id\": \"serviceId=510&serviceContractId=112&cardBrand=999&cardOrganization=000&serviceType=999&effectiveDate=2019-10-14\"\n                    }\n                ]\n            },\n            \"contracts\": {\n                \"data\": [\n                {\n                    \"type\": \"contracts\",\n                    \"id\": \"{{contractId}}\"\n                }\n                ]\n            }\n        }\n    }\n  },\n  {\n    \"op\": \"POST\",\n    \"path\": \"services\",\n    \"value\": {\n        \"id\": 1,\n        \"type\": \"services\",\n        \"attributes\": {\n            \"clientTariff\" : \"012487\"\n        },\n        \"relationships\": {\n            \"serviceDefinitions\": {\n                \"data\": [\n                    {\n                    \"type\": \"serviceDefinitions\",\n                    \"id\": \"serviceId=506&serviceContractId=112&cardBrand=999&cardOrganization=000&serviceType=999&effectiveDate=2019-01-01\"\n                    }\n                ]\n            },\n            \"contracts\": {\n                \"data\": [\n                {\n                    \"type\": \"contracts\",\n                    \"id\": \"{{contractId}}\"\n                }\n                ]\n            }\n        }\n    }\n  }\n]"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Process Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Application Processed\"] = responseCode.code === 200;",
											"    ",
											"    //If services is not defined, skip to Process Applicaiton",
											"    if (pm.environment.get(\"institutionNumber\") === \"00000106\" || pm.environment.get(\"institutionNumber\") === \"00000200\") {",
											"        postman.setNextRequest(\"Get Device Services\");",
											"    }",
											"    if (pm.environment.get(\"institutionNumber\") === \"00000106\") {",
											"        postman.setNextRequest(\"CRB | Next Request\");",
											"    }",
											"    else if (pm.environment.get(\"institutionNumber\") === \"00000200\") {",
											"        postman.setNextRequest(\"BOA | Next Request\");",
											"    }",
											"    else if (pm.environment.get(\"institutionNumber\") === \"00000004\" || pm.environment.get(\"institutionNumber\") === \"00000010\" || pm.environment.get(\"institutionNumber\") === \"00000012\") {",
											"        postman.setNextRequest(\"PSEOS | Next Request\");",
											"    }",
											"    else if (pm.environment.get(\"institutionNumber\") === \"00000108\") {",
											"        postman.setNextRequest(\"BNZ | Next Request\");",
											"    }",
											"    else {",
											"        postman.setNextRequest();",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"{{merchantId}}\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"status\": \"001\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}merchants/{{merchantId}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}merchants"
									],
									"path": [
										"{{merchantId}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Billing Levels",
					"item": [
						{
							"name": "Alternative Get Billing Level",
							"item": [
								{
									"name": "MISC | Get Merchants --> Contract --> Group Number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"    tests[\"Status Code 201\"] = responseCode.code === 200;",
													"    var resp = JSON.parse(responseBody);",
													"    pm.environment.set(\"groupNumber\",resp.included[0].attributes.groupNumber);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}merchants?filter[clientNumber]=50009769&fields=clientNumber&include=contracts&fields[contracts]=groupNumber",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}merchants"
											],
											"query": [
												{
													"key": "filter[ourReference]",
													"value": "0000000500",
													"disabled": true
												},
												{
													"key": "filter[clientNumber]",
													"value": "50009769"
												},
												{
													"key": "fields",
													"value": "clientNumber"
												},
												{
													"key": "include",
													"value": "contracts"
												},
												{
													"key": "fields[contracts]",
													"value": "groupNumber"
												}
											]
										},
										"description": "This call is the first step for onboarding and is **MANDATORY** to be created regardless of client level in the hierarchy. This API represents the main details of the client. For member level details (transacting merchant or lowest level in the hierarchy) this will include the unique merchant ID which stored in ourReference attribute of this request. \n\nA successful response will capture the ID of this merchants API resource such as the clientNumber and will be required on the succeeding API POST/PATCH calls for the following resources:\n\nPOST calls to:\n- /addresses\n- /merchantsAddendum\n- /merchantsAddendumUsa\n- /contracts\n- /settlementPackages\nPATCH to:\n- /merchants status for Application Processing\n\n**Important note:**\n\nFor merchant hierarchy onboarding, a top-down level approach should be followed such as Group level should be onboarded first followed by Sub-group level(s) and lastly the Member (transacting) level merchants. Please note that parent levels should be onboarded successfully (in ACTIVE status) before one can onboard the child level.\n\nEvery merchant pre-boarded to bankWORKS using WSM API will be marked with a specific status value of 023 (In Process), indicating that the merchant is not yet active in the system. After creation of the merchant followed by the related and required API resources for onboarding, the status of the merchant can be set to either 001 (Active) or 003 (Suspended) by sending a PATCH request to merchants API. Suspended status will only apply for member level merchants if needed.\n\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together. In this request, merchantId is assigned in order to be used to create related information of merchant in the succeeding calls."
									},
									"response": [
										{
											"name": "BOA-SB test",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{token}}"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Content-Type",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Crnk-Compact",
														"type": "text",
														"value": "true"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB shortName\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753951\",\n\t        \"ourReference\" : \"11223344\",\n\t        \"tradeName\" : \"BOA-SB Trade Name\",\n\t        \"companyName\" : \"BOA-SB Company Name\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"title\" : \"001\",\n\t        \t\"contactName\" : \"BOA-SB Contact Name\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
												},
												"url": {
													"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
													"host": [
														"{{hostName}}{{contextRoot}}{{serviceName}}"
													],
													"path": [
														"merchants"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "X-Powered-By",
													"value": "Undertow/1"
												},
												{
													"key": "Server",
													"value": "JBoss-EAP/7"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Date",
													"value": "Fri, 08 Nov 2019 09:30:00 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Content-Type",
													"value": "application/vnd.api+json;charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "719"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Company Name\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000227\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": \"11223344\",\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Trade Name\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753951\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"001\",\n                \"contactName\": \"BOA-SB Contact Name\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB shortName\",\n            \"status\": \"023\"\n        }\n    }\n}"
										},
										{
											"name": "Middle level - Subgroup merchant",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{token}}"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Content-Type",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Crnk-Compact",
														"type": "text",
														"value": "true"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB SubGrp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB SubGrp test\",\n\t        \"companyName\" : \"BOA-SB SubGrp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB SubGrp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
												},
												"url": {
													"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
													"host": [
														"{{hostName}}{{contextRoot}}{{serviceName}}"
													],
													"path": [
														"merchants"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "X-Powered-By",
													"value": "Undertow/1"
												},
												{
													"key": "Server",
													"value": "JBoss-EAP/7"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Date",
													"value": "Fri, 08 Nov 2019 11:36:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Content-Type",
													"value": "application/vnd.api+json;charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "720"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB SubGrp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000229\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB SubGrp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"000\",\n                \"contactName\": \"BOA-SB SubGrp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB SubGrp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
										},
										{
											"name": "Top level - Group",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{token}}"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Content-Type",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Crnk-Compact",
														"type": "text",
														"value": "true"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB Grp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB Grp test\",\n\t        \"companyName\" : \"BOA-SB Grp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB Grp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
												},
												"url": {
													"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
													"host": [
														"{{hostName}}{{contextRoot}}{{serviceName}}"
													],
													"path": [
														"merchants"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "X-Powered-By",
													"value": "Undertow/1"
												},
												{
													"key": "Server",
													"value": "JBoss-EAP/7"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Date",
													"value": "Fri, 08 Nov 2019 10:58:49 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Content-Type",
													"value": "application/vnd.api+json;charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "707"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Grp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000228\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Grp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": null,\n                \"contactName\": \"BOA-SB Grp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB Grp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "MISC | Get Group Number --> Accounts at Billing",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"    tests[\"Status Code 201\"] = responseCode.code === 200;  ",
													"    var resp = JSON.parse(responseBody);",
													"    let array = [];    ",
													"    _.each(resp.included, (iteration) => { array.push(iteration.id.split(\"=\")[1]) });",
													"    pm.environment.set(\"accountDefinitions\", array);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts?filter[groupNumber]={{groupNumber}}&fields[contracts]=id&include=accounts&filter[accounts][billingLevel]=001&fields[accounts]=accountNumber",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
											],
											"query": [
												{
													"key": "filter[groupNumber]",
													"value": "{{groupNumber}}"
												},
												{
													"key": "fields[contracts]",
													"value": "id"
												},
												{
													"key": "include",
													"value": "accounts"
												},
												{
													"key": "filter[accounts][billingLevel]",
													"value": "001"
												},
												{
													"key": "fields[accounts]",
													"value": "accountNumber"
												}
											]
										},
										"description": "This call is the first step for onboarding and is **MANDATORY** to be created regardless of client level in the hierarchy. This API represents the main details of the client. For member level details (transacting merchant or lowest level in the hierarchy) this will include the unique merchant ID which stored in ourReference attribute of this request. \n\nA successful response will capture the ID of this merchants API resource such as the clientNumber and will be required on the succeeding API POST/PATCH calls for the following resources:\n\nPOST calls to:\n- /addresses\n- /merchantsAddendum\n- /merchantsAddendumUsa\n- /contracts\n- /settlementPackages\nPATCH to:\n- /merchants status for Application Processing\n\n**Important note:**\n\nFor merchant hierarchy onboarding, a top-down level approach should be followed such as Group level should be onboarded first followed by Sub-group level(s) and lastly the Member (transacting) level merchants. Please note that parent levels should be onboarded successfully (in ACTIVE status) before one can onboard the child level.\n\nEvery merchant pre-boarded to bankWORKS using WSM API will be marked with a specific status value of 023 (In Process), indicating that the merchant is not yet active in the system. After creation of the merchant followed by the related and required API resources for onboarding, the status of the merchant can be set to either 001 (Active) or 003 (Suspended) by sending a PATCH request to merchants API. Suspended status will only apply for member level merchants if needed.\n\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together. In this request, merchantId is assigned in order to be used to create related information of merchant in the succeeding calls."
									},
									"response": [
										{
											"name": "Middle level - Subgroup merchant",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{token}}"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Content-Type",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Crnk-Compact",
														"type": "text",
														"value": "true"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB SubGrp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB SubGrp test\",\n\t        \"companyName\" : \"BOA-SB SubGrp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB SubGrp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
												},
												"url": {
													"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
													"host": [
														"{{hostName}}{{contextRoot}}{{serviceName}}"
													],
													"path": [
														"merchants"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "X-Powered-By",
													"value": "Undertow/1"
												},
												{
													"key": "Server",
													"value": "JBoss-EAP/7"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Date",
													"value": "Fri, 08 Nov 2019 11:36:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Content-Type",
													"value": "application/vnd.api+json;charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "720"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB SubGrp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000229\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB SubGrp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"000\",\n                \"contactName\": \"BOA-SB SubGrp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB SubGrp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
										},
										{
											"name": "Top level - Group",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{token}}"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Content-Type",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Crnk-Compact",
														"type": "text",
														"value": "true"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB Grp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB Grp test\",\n\t        \"companyName\" : \"BOA-SB Grp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB Grp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
												},
												"url": {
													"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
													"host": [
														"{{hostName}}{{contextRoot}}{{serviceName}}"
													],
													"path": [
														"merchants"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "X-Powered-By",
													"value": "Undertow/1"
												},
												{
													"key": "Server",
													"value": "JBoss-EAP/7"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Date",
													"value": "Fri, 08 Nov 2019 10:58:49 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Content-Type",
													"value": "application/vnd.api+json;charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "707"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Grp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000228\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Grp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": null,\n                \"contactName\": \"BOA-SB Grp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB Grp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
										},
										{
											"name": "BOA-SB test",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{token}}"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Content-Type",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Crnk-Compact",
														"type": "text",
														"value": "true"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB shortName\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753951\",\n\t        \"ourReference\" : \"11223344\",\n\t        \"tradeName\" : \"BOA-SB Trade Name\",\n\t        \"companyName\" : \"BOA-SB Company Name\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"title\" : \"001\",\n\t        \t\"contactName\" : \"BOA-SB Contact Name\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
												},
												"url": {
													"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
													"host": [
														"{{hostName}}{{contextRoot}}{{serviceName}}"
													],
													"path": [
														"merchants"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "X-Powered-By",
													"value": "Undertow/1"
												},
												{
													"key": "Server",
													"value": "JBoss-EAP/7"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Date",
													"value": "Fri, 08 Nov 2019 09:30:00 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Content-Type",
													"value": "application/vnd.api+json;charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "719"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Company Name\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000227\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": \"11223344\",\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Trade Name\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753951\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"001\",\n                \"contactName\": \"BOA-SB Contact Name\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB shortName\",\n            \"status\": \"023\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "MISC | Get Accounts --> Account Definitions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"    tests[\"Status Code 201\"] = responseCode.code === 200;  ",
													"    var data = JSON.parse(responseBody);",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}accounts?filter[accountNumber]={{accountDefinitions}}&include=accountDefinition",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}accounts"
											],
											"query": [
												{
													"key": "filter[accountNumber]",
													"value": "{{accountDefinitions}}"
												},
												{
													"key": "include",
													"value": "accountDefinition"
												}
											]
										},
										"description": "This call is the first step for onboarding and is **MANDATORY** to be created regardless of client level in the hierarchy. This API represents the main details of the client. For member level details (transacting merchant or lowest level in the hierarchy) this will include the unique merchant ID which stored in ourReference attribute of this request. \n\nA successful response will capture the ID of this merchants API resource such as the clientNumber and will be required on the succeeding API POST/PATCH calls for the following resources:\n\nPOST calls to:\n- /addresses\n- /merchantsAddendum\n- /merchantsAddendumUsa\n- /contracts\n- /settlementPackages\nPATCH to:\n- /merchants status for Application Processing\n\n**Important note:**\n\nFor merchant hierarchy onboarding, a top-down level approach should be followed such as Group level should be onboarded first followed by Sub-group level(s) and lastly the Member (transacting) level merchants. Please note that parent levels should be onboarded successfully (in ACTIVE status) before one can onboard the child level.\n\nEvery merchant pre-boarded to bankWORKS using WSM API will be marked with a specific status value of 023 (In Process), indicating that the merchant is not yet active in the system. After creation of the merchant followed by the related and required API resources for onboarding, the status of the merchant can be set to either 001 (Active) or 003 (Suspended) by sending a PATCH request to merchants API. Suspended status will only apply for member level merchants if needed.\n\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together. In this request, merchantId is assigned in order to be used to create related information of merchant in the succeeding calls."
									},
									"response": [
										{
											"name": "Top level - Group",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{token}}"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Content-Type",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Crnk-Compact",
														"type": "text",
														"value": "true"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB Grp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB Grp test\",\n\t        \"companyName\" : \"BOA-SB Grp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB Grp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
												},
												"url": {
													"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
													"host": [
														"{{hostName}}{{contextRoot}}{{serviceName}}"
													],
													"path": [
														"merchants"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "X-Powered-By",
													"value": "Undertow/1"
												},
												{
													"key": "Server",
													"value": "JBoss-EAP/7"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Date",
													"value": "Fri, 08 Nov 2019 10:58:49 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Content-Type",
													"value": "application/vnd.api+json;charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "707"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Grp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000228\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Grp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": null,\n                \"contactName\": \"BOA-SB Grp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB Grp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
										},
										{
											"name": "Middle level - Subgroup merchant",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{token}}"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Content-Type",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Crnk-Compact",
														"type": "text",
														"value": "true"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB SubGrp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB SubGrp test\",\n\t        \"companyName\" : \"BOA-SB SubGrp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB SubGrp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
												},
												"url": {
													"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
													"host": [
														"{{hostName}}{{contextRoot}}{{serviceName}}"
													],
													"path": [
														"merchants"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "X-Powered-By",
													"value": "Undertow/1"
												},
												{
													"key": "Server",
													"value": "JBoss-EAP/7"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Date",
													"value": "Fri, 08 Nov 2019 11:36:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Content-Type",
													"value": "application/vnd.api+json;charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "720"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB SubGrp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000229\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB SubGrp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"000\",\n                \"contactName\": \"BOA-SB SubGrp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB SubGrp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
										},
										{
											"name": "BOA-SB test",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "{{token}}"
													},
													{
														"key": "Accept",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Content-Type",
														"value": "application/vnd.api+json"
													},
													{
														"key": "Crnk-Compact",
														"type": "text",
														"value": "true"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB shortName\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753951\",\n\t        \"ourReference\" : \"11223344\",\n\t        \"tradeName\" : \"BOA-SB Trade Name\",\n\t        \"companyName\" : \"BOA-SB Company Name\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"title\" : \"001\",\n\t        \t\"contactName\" : \"BOA-SB Contact Name\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
												},
												"url": {
													"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
													"host": [
														"{{hostName}}{{contextRoot}}{{serviceName}}"
													],
													"path": [
														"merchants"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "X-Powered-By",
													"value": "Undertow/1"
												},
												{
													"key": "Server",
													"value": "JBoss-EAP/7"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Date",
													"value": "Fri, 08 Nov 2019 09:30:00 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Content-Type",
													"value": "application/vnd.api+json;charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "719"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Company Name\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000227\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": \"11223344\",\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Trade Name\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753951\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"001\",\n                \"contactName\": \"BOA-SB Contact Name\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB shortName\",\n            \"status\": \"023\"\n        }\n    }\n}"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "MISC | Get Account ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/accounts/{{accountId}}/billingAccounts",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"accounts",
										"{{accountId}}",
										"billingAccounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get Billing Level",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}accounts/{{accountId}}/billingAccounts",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}accounts"
									],
									"path": [
										"{{accountId}}",
										"billingAccounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get Billing Level - /merchants",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}accounts/{{accountId}}/billingAccounts",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}accounts"
									],
									"path": [
										"{{accountId}}",
										"billingAccounts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "BULK API",
					"item": [
						{
							"name": "MISC | Patch Bulk Merchants",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 201;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"    if (pm.environment.get(\"broker\") === null || pm.environment.get(\"broker\") === false || pm.environment.get(\"broker\") === undefined) {",
											"        pm.environment.set(\"client\", \"merchants\");",
											"        pm.environment.set(\"processingRegion\", \"\\\"processingRegion\\\": \\\"000\\\",\");",
											"        pm.environment.set(\"serviceTelephone\", \"\\\"serviceTelephone\\\":\\\"9898989898\\\",\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"client\", \"brokers\");",
											"        pm.environment.set(\"processingRegion\", \"\");",
											"        pm.environment.set(\"serviceTelephone\", \"\");",
											"    }",
											"    ",
											"    if (pm.environment.get(\"institutionNumber\") !== \"00000200\") {",
											"        pm.environment.set(\"ourReference\", pm.environment.get(\"clientNumber\"));",
											"    }",
											"    ",
											"    if (pm.environment.get(\"legalForm\") === null || pm.environment.get(\"legalForm\") === false || pm.environment.get(\"legalForm\") === undefined) {",
											"        pm.environment.set(\"legalForm\", \"001\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"legalForm\", pm.environment.get(\"legalForm\"));",
											"    }",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/json-patch+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[ {\n    \"op\": \"POST\",\n    \"path\": \"merchants\",\n    \"value\" : {\n        \"id\": 0,\n        \"type\": \"{{client}}\",\n        \"attributes\": {\n            \"clientNumber\": \"{{clientNumber}}\",\n            \"ourReference\": \"{{ourReference}}\",\n            \"clientType\" : \"{{clientType}}\",\n            \"firstName\": \"Max\",\n            \"lastName\": \"IsAwesome\",\n            \"registrationNumber\": \"123456\",\n            \"businessClass\": \"{{MCC}}\",\n            \"domesticMcc\": \"{{DMCC}}\",\n            \"shortName\": \"Max Test API\",\n            \"language\": \"001\",\n            \"legalForm\": \"{{legalForm}}\",\n            \"vatRegistrationNumber\": \"BG123 122 1231\",\n            \"tradeName\": \"Drugs\",\n            \"companyName\": \"MaxAPI\",\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"{{country}}\",\n        \t{{processingRegion}}\n            \"mainContactDetails\": {\n                {{serviceTelephone}}\n                \"contactName\": \"Max\"\n            },\n            \"middleName\": \"Middle Bill\"\n        }\n    }\n},\n{\n    \"op\": \"POST\",\n    \"path\": \"merchants\",\n    \"value\" : {\n        \"id\": 1,\n        \"type\": \"{{client}}\",\n        \"attributes\": {\n            \"clientNumber\": \"{{clientNumber2}}\",\n            \"ourReference\": \"{{ourReference}}\",\n            \"clientType\" : \"{{clientType}}\",\n            \"firstName\": \"Max\",\n            \"lastName\": \"IsAwesome\",\n            \"registrationNumber\": \"123456\",\n            \"businessClass\": \"{{MCC}}\",\n            \"domesticMcc\": \"{{DMCC}}\",\n            \"shortName\": \"Max Test API\",\n            \"language\": \"001\",\n            \"legalForm\": \"{{legalForm}}\",\n            \"vatRegistrationNumber\": \"BG123 122 1231\",\n            \"tradeName\": \"Drugs\",\n            \"companyName\": \"MaxAPI\",\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"{{country}}\",\n        \t{{processingRegion}}\n            \"mainContactDetails\": {\n                {{serviceTelephone}}\n                \"contactName\": \"Max\"\n            },\n            \"middleName\": \"Middle Bill\"\n        }\n    }\n}\n]"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									]
								},
								"description": "This call is the first step for onboarding and is **MANDATORY** to be created regardless of client level in the hierarchy. This API represents the main details of the client. For member level details (transacting merchant or lowest level in the hierarchy) this will include the unique merchant ID which stored in ourReference attribute of this request. \n\nA successful response will capture the ID of this merchants API resource such as the clientNumber and will be required on the succeeding API POST/PATCH calls for the following resources:\n\nPOST calls to:\n- /addresses\n- /merchantsAddendum\n- /merchantsAddendumUsa\n- /contracts\n- /settlementPackages\nPATCH to:\n- /merchants status for Application Processing\n\n**Important note:**\n\nFor merchant hierarchy onboarding, a top-down level approach should be followed such as Group level should be onboarded first followed by Sub-group level(s) and lastly the Member (transacting) level merchants. Please note that parent levels should be onboarded successfully (in ACTIVE status) before one can onboard the child level.\n\nEvery merchant pre-boarded to bankWORKS using WSM API will be marked with a specific status value of 023 (In Process), indicating that the merchant is not yet active in the system. After creation of the merchant followed by the related and required API resources for onboarding, the status of the merchant can be set to either 001 (Active) or 003 (Suspended) by sending a PATCH request to merchants API. Suspended status will only apply for member level merchants if needed.\n\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together. In this request, merchantId is assigned in order to be used to create related information of merchant in the succeeding calls."
							},
							"response": [
								{
									"name": "Top level - Group",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB Grp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB Grp test\",\n\t        \"companyName\" : \"BOA-SB Grp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB Grp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 10:58:49 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "707"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Grp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000228\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Grp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": null,\n                \"contactName\": \"BOA-SB Grp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB Grp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "BOA-SB test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB shortName\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753951\",\n\t        \"ourReference\" : \"11223344\",\n\t        \"tradeName\" : \"BOA-SB Trade Name\",\n\t        \"companyName\" : \"BOA-SB Company Name\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"title\" : \"001\",\n\t        \t\"contactName\" : \"BOA-SB Contact Name\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:30:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "719"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Company Name\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000227\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": \"11223344\",\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Trade Name\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753951\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"001\",\n                \"contactName\": \"BOA-SB Contact Name\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB shortName\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "Middle level - Subgroup merchant",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB SubGrp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB SubGrp test\",\n\t        \"companyName\" : \"BOA-SB SubGrp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB SubGrp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:36:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "720"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB SubGrp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000229\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB SubGrp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"000\",\n                \"contactName\": \"BOA-SB SubGrp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB SubGrp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Patch Bulk Accounts",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Utilising the account ID based on the next AccountDefinition ID in the myAccounts array",
											"    var account = pm.environment.get(\"myAccounts\");",
											"    var x = Number(pm.environment.get(\"acctCounter\"));",
											"    pm.environment.set(\"accountId\", JSON.parse(JSON.stringify(account[x])));",
											"    pm.environment.set(\"accountTypeId\", pm.environment.get(\"accountId\").split(\"&\")[0].split(\"=\")[1]);",
											"",
											"// Billing Level determines if there should be a Settlement Information record link",
											"    if (pm.environment.get(\"billingFee\") === \"001\" && pm.environment.get(\"accountTypeId\") === \"007\") {",
											"        if (pm.environment.get(\"billingLevel\") == \"001\") {",
											"            pm.environment.set(\"settlementPackageLink\", \"\\\"settlementPackage\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"settlementPackages\\\", \\r \\\"id\\\": \\\"{{settlementPackageId}}\\\"\\r}\\r},\");",
											"        }",
											"        else {",
											"            pm.environment.set(\"settlementPackageLink\", \"\");",
											"        }",
											"    }",
											"    else if (pm.environment.get(\"billingRollingReserve\") === \"001\" && pm.environment.get(\"accountTypeId\") === \"059\") {",
											"        if (pm.environment.get(\"billingLevel\") == \"001\") {",
											"            pm.environment.set(\"settlementPackageLink\", \"\\\"settlementPackage\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"settlementPackages\\\", \\r \\\"id\\\": \\\"{{settlementPackageId}}\\\"\\r}\\r},\");",
											"        }",
											"        else {",
											"            pm.environment.set(\"settlementPackageLink\", \"\");",
											"        }",
											"    }",
											"    else if (pm.environment.get(\"billingDispute\") === \"001\" && pm.environment.get(\"accountTypeId\") === \"009\") {",
											"        if (pm.environment.get(\"billingLevel\") == \"001\") {",
											"            pm.environment.set(\"settlementPackageLink\", \"\\\"settlementPackage\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"settlementPackages\\\", \\r \\\"id\\\": \\\"{{settlementPackageId}}\\\"\\r}\\r},\");",
											"        }",
											"        else {",
											"            pm.environment.set(\"settlementPackageLink\", \"\");",
											"        }",
											"    }",
											"    else if (pm.environment.get(\"billingPAR\") === \"001\" && pm.environment.get(\"accountTypeId\") === \"012\") {",
											"        if (pm.environment.get(\"billingLevel\") == \"001\") {",
											"            pm.environment.set(\"settlementPackageLink\", \"\\\"settlementPackage\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"settlementPackages\\\", \\r \\\"id\\\": \\\"{{settlementPackageId}}\\\"\\r}\\r},\");",
											"        }",
											"        else {",
											"            pm.environment.set(\"settlementPackageLink\", \"\");",
											"        }",
											"    }",
											"    else if (pm.environment.get(\"billingFee\") === null || pm.environment.get(\"billingFee\") === false) {",
											"        if (pm.environment.get(\"billingLevel\") == \"001\") {",
											"            pm.environment.set(\"settlementPackageLink\", \"\\\"settlementPackage\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"settlementPackages\\\", \\r \\\"id\\\": \\\"{{settlementPackageId}}\\\"\\r}\\r},\");",
											"        }",
											"        else {",
											"            pm.environment.set(\"settlementPackageLink\", \"\");",
											"        }",
											"    }",
											"    else {",
											"            pm.environment.set(\"settlementPackageLink\", \"\");",
											"    }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Creating Accounts",
											"    tests[\"Status Code 201\"] = responseCode.code === 201;",
											"    var data = JSON.parse(responseBody);",
											"    ",
											"//If there are more accounts to add, loop back to Create Settlement Package",
											"    if ((Number(pm.environment.get(\"acctCounter\")+1)) < (Number(pm.environment.get(\"myAccounts\").length))) {",
											"        pm.environment.set(\"acctCounter\", Number(pm.environment.get(\"acctCounter\")+1));",
											"        postman.setNextRequest(\"Post Settlement Package\");",
											"    }",
											"//If services is not defined, skip to Process Applicaiton",
											"    else if (pm.environment.has(\"services\") === false || pm.environment.get(\"services\") === null) {",
											"        postman.setNextRequest(\"Process Application\");",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/json-patch+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									},
									{
										"key": "Crnk-Compact",
										"value": "true",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[ {\n    \"op\": \"POST\",\n    \"path\": \"accounts\",\n    \"value\": {\n        \"id\": 0,\n        \"type\": \"accounts\",\n        \"attributes\": {\n            \"clientAccountName\": \"Merchant PAR Account\"\n        },\n        \"relationships\": {\n            \"accountDefinition\": {\n                \"data\": {\n                    \"type\": \"accountDefinitions\",\n                    \"id\": \"accountTypeId=012&accountCurrency=EUR&serviceContractId=112\"\n                }\n            },\n            \"contracts\": {\n                \"data\": [\n                    {\n                        \"type\": \"contracts\",\n                        \"id\": \"clientNumber=10101008&groupNumber=00013822&effectiveDate=2020-10-31&clientLevel=002\"\n                    }\n                ]\n            }\n        }\n    }\n},\n{\n    \"op\": \"POST\",\n    \"path\": \"accounts\",\n    \"value\": {\n        \"id\": 1,\n        \"type\": \"accounts\",\n        \"attributes\": {\n            \"clientAccountName\": \"Merchant FEE Account\"\n        },\n        \"relationships\": {\n            \"accountDefinition\": {\n                \"data\": {\n                    \"type\": \"accountDefinitions\",\n                    \"id\": \"accountTypeId=007&accountCurrency=EUR&serviceContractId=112\"\n                }\n            },\n            \"contracts\": {\n                \"data\": {\n                    \"type\": \"contracts\",\n                    \"id\": \"clientNumber=10101008&groupNumber=00013822&effectiveDate=2020-10-31&clientLevel=002\"\n                }\n            }\n        }\n    }\n} ]"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Patch Bulk Settlement Package",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 201;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"    var account = pm.environment.get(\"myAccounts\");",
											"    var x = Number(pm.environment.get(\"acctCounter\"));",
											"    pm.environment.set(\"currency\", JSON.stringify(pm.environment.get(\"myAccounts\")[pm.environment.get(\"acctCounter\")]).split(\"&\")[1].split(\"=\")[1]);",
											"    if (pm.environment.has(\"fundingClientNumber\") === true && pm.environment.get(\"fundingClientNumber\") !== null) {",
											"    \tpm.environment.set(\"funding\", \"\\\"fundingClient\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"fundingClients\\\", \\r \\\"id\\\": \\\"clientNumber={{fundingClientNumber}}\\\"\\r}\\r},\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"funding\", \"\");",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/json-patch+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									},
									{
										"key": "Crnk-Compact",
										"value": "true",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"POST\",\n        \"path\": \"settlementPackages\",\n        \"value\": {\n            \"id\": 0,\n            \"type\": \"settlementPackages\",\n            \"attributes\": {\n                \"settlementCategory\": \"001\",\n                \"bankClearingNumber\": \"{{bankClearingNumber}}\",\n                \"bankTelNumber\": \"1236547890\",\n                \"paymentReference\": \"PR_665522KT\",\n                \"paymentMethod\": \"002\",\n                \"accountCurrency\": \"{{currency}}\",\n                \"contingencyLiabilityAccount\": \"\",\n                \"correspondingBankAccount\": \"84783403\",\n                \"correspondingBankNumber\": \"00000000030080508568\",\n                \"receiverCountryCode\": \"{{country}}\",\n                \"noteText\": \"Max Testing\",\n                \"payableDetails\": {\n                    \"counterBankAccount\": \"30345677\",\n                    \"confirmationMethod\": \"003\",\n                    \"bankContactName\": \"BANK_CONTACT_NAME\",\n                    \"counterBankCity\": \"Count Bank City\"\n                }\n            },\n            \"relationships\": {\n                {{funding}}\n            \"merchant\": {\n                    \"data\": {\n                        \"type\": \"merchants\",\n                        \"id\": \"clientNumber={{clientNumber}}\"\n                    }\n                }\n            }\n        }\n    },\n    {\n        \"op\": \"POST\",\n        \"path\": \"settlementPackages\",\n        \"value\": {\n            \"id\": 1,\n            \"type\": \"settlementPackages\",\n            \"attributes\": {\n                \"settlementCategory\": \"002\",\n                \"bankClearingNumber\": \"{{bankClearingNumber}}\",\n                \"bankTelNumber\": \"1236547890\",\n                \"paymentReference\": \"PR_665522KT\",\n                \"paymentMethod\": \"002\",\n                \"accountCurrency\": \"{{currency}}\",\n                \"contingencyLiabilityAccount\": \"\",\n                \"correspondingBankAccount\": \"84783403\",\n                \"correspondingBankNumber\": \"00000000030080508568\",\n                \"receiverCountryCode\": \"{{country}}\",\n                \"noteText\": \"Max Testing\",\n                \"payableDetails\": {\n                    \"counterBankAccount\": \"30345677\",\n                    \"confirmationMethod\": \"003\",\n                    \"bankContactName\": \"BANK_CONTACT_NAME\",\n                    \"counterBankCity\": \"Count Bank City\"\n                }\n            },\n            \"relationships\": {\n                {{funding}}\n            \"merchant\": {\n                    \"data\": {\n                        \"type\": \"merchants\",\n                        \"id\": \"clientNumber={{clientNumber}}\"\n                    }\n                }\n            }\n        }\n    },\n    {\n        \"op\": \"POST\",\n        \"path\": \"settlementPackages\",\n        \"value\": {\n            \"id\": 2,\n            \"type\": \"settlementPackages\",\n            \"attributes\": {\n                \"settlementCategory\": \"001\",\n                \"bankClearingNumber\": \"{{bankClearingNumber}}\",\n                \"bankTelNumber\": \"1236547890\",\n                \"paymentReference\": \"PR_665522KT\",\n                \"paymentMethod\": \"002\",\n                \"accountCurrency\": \"{{currency}}\",\n                \"contingencyLiabilityAccount\": \"\",\n                \"correspondingBankAccount\": \"84783403\",\n                \"correspondingBankNumber\": \"00000000030080508568\",\n                \"receiverCountryCode\": \"{{country}}\",\n                \"noteText\": \"Max Testing\",\n                \"payableDetails\": {\n                    \"counterBankAccount\": \"30345677\",\n                    \"confirmationMethod\": \"003\",\n                    \"bankContactName\": \"BANK_CONTACT_NAME\",\n                    \"counterBankCity\": \"Count Bank City\"\n                }\n            },\n            \"relationships\": {\n                {{funding}}\n            \"merchant\": {\n                    \"data\": {\n                        \"type\": \"merchants\",\n                        \"id\": \"clientNumber={{clientNumber2}}\"\n                    }\n                }\n            }\n        }\n    },\n    {\n        \"op\": \"POST\",\n        \"path\": \"settlementPackages\",\n        \"value\": {\n            \"id\": 3,\n            \"type\": \"settlementPackages\",\n            \"attributes\": {\n                \"settlementCategory\": \"002\",\n                \"bankClearingNumber\": \"{{bankClearingNumber}}\",\n                \"bankTelNumber\": \"1236547890\",\n                \"paymentReference\": \"PR_665522KT\",\n                \"paymentMethod\": \"002\",\n                \"accountCurrency\": \"{{currency}}\",\n                \"contingencyLiabilityAccount\": \"\",\n                \"correspondingBankAccount\": \"84783403\",\n                \"correspondingBankNumber\": \"00000000030080508568\",\n                \"receiverCountryCode\": \"{{country}}\",\n                \"noteText\": \"Max Testing\",\n                \"payableDetails\": {\n                    \"counterBankAccount\": \"30345677\",\n                    \"confirmationMethod\": \"003\",\n                    \"bankContactName\": \"BANK_CONTACT_NAME\",\n                    \"counterBankCity\": \"Count Bank City\"\n                }\n            },\n            \"relationships\": {\n                {{funding}}\n            \"merchant\": {\n                    \"data\": {\n                        \"type\": \"merchants\",\n                        \"id\": \"clientNumber={{clientNumber2}}\"\n                    }\n                }\n            }\n        }\n    }\n]"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									]
								},
								"description": "This will define the settlement information including RBS bank account number of the merchant and is **MANDATORY** only if a **billing level** account is to be created.\n\nMultiple settlement information/package can be added (up to 99). This number will be set automatically and stored in settlementNumber as part of the resource ID.\n\nFor settlementPackages with related **fundingClient**, it is to be associated in the relationship from the request apart from **merchant** relationship/linkage:\n\t\n```\n\t\"fundingClient\": {\n        \"data\": {\n          \"type\": \"fundingClients\",\n          \"id\": \"{{fundingClientId}}\"\n        }\n      }\n```"
							},
							"response": [
								{
									"name": "BOA-SB settl test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"data\": {\r\n    \"type\": \"settlementPackages\",\r\n    \"attributes\": {\r\n    \t\"settlementCategory\" : \"002\",\r\n    \t\"bankClearingNumber\" : \"345234567\",\r\n        \"accountCurrency\" : \"USD\",\r\n        \"contingencyLiabilityAccount\" : \"\",\r\n        \"correspondingBankAccount\" : \"84783403\",\r\n        \"correspondingBankNumber\" : \"\",\r\n        \"receiverCountryCode\" : \"USA\",\r\n        \"payableDetails\" : {\r\n        \t\"counterBankAccount\" : \"123456789\"\r\n        }\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/settlementPackages",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"settlementPackages"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:46:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "762"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227&settlementNumber=01\",\n        \"type\": \"settlementPackages\",\n        \"attributes\": {\n            \"payableDetails\": {\n                \"counterBankAccount\": \"123456789\",\n                \"counterBankNumber\": null,\n                \"confirmationMethod\": null,\n                \"counterClientNumber\": null,\n                \"bankTelNumber\": null,\n                \"bankContactName\": null,\n                \"counterBankName\": null,\n                \"counterBankAccountName\": null,\n                \"counterBankCity\": null,\n                \"ibanReference\": null,\n                \"paymentReference\": null,\n                \"fundingNarrative\": null\n            },\n            \"noteText\": null,\n            \"bankClearingNumber\": \"345234567\",\n            \"receiverCountryCode\": \"USA\",\n            \"contingencyLiabilityAccount\": \"\",\n            \"settlementCategory\": \"002\",\n            \"accountCurrency\": \"USD\",\n            \"correspondingBankNumber\": \"\",\n            \"correspondingBankAccount\": \"84783403\",\n            \"receivableDetails\": null\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000227\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								},
								{
									"name": "Subgroup settlement info - payable",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"data\": {\r\n    \"type\": \"settlementPackages\",\r\n    \"attributes\": {\r\n    \t\"settlementCategory\" : \"001\",\r\n    \t\"bankClearingNumber\" : \"345234567\",\r\n        \"accountCurrency\" : \"USD\",\r\n        \"contingencyLiabilityAccount\" : \"\",\r\n        \"correspondingBankAccount\" : \"84783403\",\r\n        \"correspondingBankNumber\" : \"\",\r\n        \"receiverCountryCode\" : \"USA\",\r\n        \"noteText\" : \"BOA-SubGrp test\",\r\n        \"payableDetails\" : {\r\n        \t\"counterBankAccount\" : \"123456789\",\r\n        \t\"confirmationMethod\" : \"003\"\r\n        }\r\n    },\r\n    \"relationships\": {\r\n      \"merchant\": {\r\n        \"data\": {\r\n          \"type\": \"merchants\",\r\n          \"id\": \"{{merchantId}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/settlementPackages",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"settlementPackages"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:49:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "776"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229&settlementNumber=01\",\n        \"type\": \"settlementPackages\",\n        \"attributes\": {\n            \"payableDetails\": {\n                \"counterBankAccount\": \"123456789\",\n                \"counterBankNumber\": null,\n                \"confirmationMethod\": \"003\",\n                \"counterClientNumber\": null,\n                \"bankTelNumber\": null,\n                \"bankContactName\": null,\n                \"counterBankName\": null,\n                \"counterBankAccountName\": null,\n                \"counterBankCity\": null,\n                \"ibanReference\": null,\n                \"paymentReference\": null,\n                \"fundingNarrative\": null\n            },\n            \"noteText\": \"BOA-SubGrp test\",\n            \"bankClearingNumber\": \"345234567\",\n            \"receiverCountryCode\": \"USA\",\n            \"contingencyLiabilityAccount\": \"\",\n            \"settlementCategory\": \"001\",\n            \"accountCurrency\": \"USD\",\n            \"correspondingBankNumber\": \"\",\n            \"correspondingBankAccount\": \"84783403\",\n            \"receivableDetails\": null\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000229\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Patch Mandate Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 201;",
											"    var resp = JSON.parse(responseBody);",
											"    pm.environment.set(\"mandateInformationId\", resp.data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/json-patch+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"POST\",\n        \"path\": \"mandateInformation\",\n        \"value\": {\n            \"id\": 1,\n            \"type\": \"mandateInformation\",\n            \"attributes\": {\n                \"uniqueMandateReference\": \"MANDJMH002\",\n                \"instrumentCode\": \"001\",\n                \"firstOccurrence\": \"001\",\n                \"signatureDate\": \"2019-12-31\"\n            },\n            \"relationships\": {\n                \"settlementPackages\": {\n                    \"data\": {\n                        \"type\": \"settlementPackages\",\n                        \"id\": \"clientNumber=10102008&settlementNumber=01\"\n                    }\n                }\n            }\n        }\n    },\n    {\n        \"op\": \"POST\",\n        \"path\": \"mandateInformation\",\n        \"value\": {\n            \"id\": 1,\n            \"type\": \"mandateInformation\",\n            \"attributes\": {\n                \"uniqueMandateReference\": \"MANDJMH002\",\n                \"instrumentCode\": \"001\",\n                \"firstOccurrence\": \"001\",\n                \"signatureDate\": \"2019-12-31\"\n            },\n            \"relationships\": {\n                \"settlementPackages\": {\n                    \"data\": {\n                        \"type\": \"settlementPackages\",\n                        \"id\": \"clientNumber=10102008&settlementNumber=02\"\n                    }\n                }\n            }\n        }\n    }\n]"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									]
								}
							},
							"response": [
								{
									"name": "Member level addendum USA",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\": {\n\t\t\"type\": \"merchantsAddendumUsa\",\n\t\t\"attributes\": {\n\t\t\t\"taxId\": \"123456\",\n\t\t\t\"independentSalesOrganisation\": \"GM SalesOrg\",\n\t\t\t\"url\": \"http://www.website.com\"\n\t\t},\n\t\t\"relationships\" : {\n\t\t\t\"merchant\" : {\n\t\t\t\t\"data\" : {\n\t\t\t\t\t\"type\" : \"merchants\",\n\t\t\t\t\t\"id\" : \"{{merchantId}}\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchantsAddendumUsa",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchantsAddendumUsa"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2019 16:37:29 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "288"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000008\",\n        \"type\": \"merchantsAddendumUsa\",\n        \"attributes\": {\n            \"taxId\": \"123456\",\n            \"independentSalesOrganisation\": \"GM SalesOrg\",\n            \"url\": \"http://www.website.com\"\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000008\",\n                    \"type\": \"merchants\"\n                }\n            }\n        },\n        \"meta\": {\n            \"ttl\": 2592000\n        }\n    }\n}"
								},
								{
									"name": "USA Merchant Addendum - sample",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchantsAddendumUsa",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchantsAddendumUsa"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Wed, 02 Oct 2019 09:53:24 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "288"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000002\",\n        \"type\": \"merchantsAddendumUsa\",\n        \"attributes\": {\n            \"taxId\": \"123456\",\n            \"independentSalesOrganisation\": \"GM SalesOrg\",\n            \"url\": \"http://www.website.com\"\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000002\",\n                    \"type\": \"merchants\"\n                }\n            }\n        },\n        \"meta\": {\n            \"ttl\": 2592000\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Patch Bulk Services",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status Code 201\"] = responseCode.code === 201;"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Accept",
										"value": "application/json-patch+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"POST\",\n        \"path\": \"services\",\n        \"value\": {\n            \"id\": 0,\n            \"type\": \"services\",\n            \"attributes\": {\n                \"clientTariff\": \"012487\"\n            },\n            \"relationships\": {\n                \"serviceDefinitions\": {\n                    \"data\": [\n                        {\n                            \"type\": \"serviceDefinitions\",\n                            \"id\": \"serviceId=510&serviceContractId=112&cardBrand=999&cardOrganization=000&serviceType=999&effectiveDate=2019-10-14\"\n                        }\n                    ]\n                },\n                \"contracts\": {\n                    \"data\": [\n                        {\n                            \"type\": \"contracts\",\n                            \"id\": \"{{contractId}}\"\n                        }\n                    ]\n                }\n            }\n        }s\n    },\n    {\n        \"op\": \"POST\",\n        \"path\": \"services\",\n        \"value\": {\n            \"id\": 1,\n            \"type\": \"services\",\n            \"attributes\": {\n                \"clientTariff\": \"012487\"\n            },\n            \"relationships\": {\n                \"serviceDefinitions\": {\n                    \"data\": [\n                        {\n                            \"type\": \"serviceDefinitions\",\n                            \"id\": \"serviceId=506&serviceContractId=112&cardBrand=999&cardOrganization=000&serviceType=999&effectiveDate=2019-01-01\"\n                        }\n                    ]\n                },\n                \"contracts\": {\n                    \"data\": [\n                        {\n                            \"type\": \"contracts\",\n                            \"id\": \"{{contractId}}\"\n                        }\n                    ]\n                }\n            }\n        }\n    }\n]"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Process Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Application Processed\"] = responseCode.code === 200;",
											"    ",
											"    //If services is not defined, skip to Process Applicaiton",
											"    if (pm.environment.get(\"institutionNumber\") === \"00000106\" || pm.environment.get(\"institutionNumber\") === \"00000200\") {",
											"        postman.setNextRequest(\"Get Device Services\");",
											"    }",
											"    if (pm.environment.get(\"institutionNumber\") === \"00000106\") {",
											"        postman.setNextRequest(\"CRB | Next Request\");",
											"    }",
											"    else if (pm.environment.get(\"institutionNumber\") === \"00000200\") {",
											"        postman.setNextRequest(\"BOA | Next Request\");",
											"    }",
											"    else if (pm.environment.get(\"institutionNumber\") === \"00000004\" || pm.environment.get(\"institutionNumber\") === \"00000010\" || pm.environment.get(\"institutionNumber\") === \"00000012\") {",
											"        postman.setNextRequest(\"PSEOS | Next Request\");",
											"    }",
											"    else if (pm.environment.get(\"institutionNumber\") === \"00000108\") {",
											"        postman.setNextRequest(\"BNZ | Next Request\");",
											"    }",
											"    else {",
											"        postman.setNextRequest();",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"{{merchantId}}\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"status\": \"001\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}merchants/{{merchantId}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}merchants"
									],
									"path": [
										"{{merchantId}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Business Setup Configuration",
					"item": [
						{
							"name": "MISC | Contract Definitions",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*[[start postmanerator :: struct-uses]]*/",
											"function populateRequestStructUses() {",
											"    APIStructure = {",
											"        structure: 'contractDefinitions'",
											"    };",
											"}",
											"/*[[end postmanerator :: struct-uses]]*/",
											"",
											"",
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var resp = JSON.parse(responseBody);",
											"pm.environment.set(\"contractDefinitionId\", resp.data[0].id);",
											"pm.environment.set(\"serviceContractId\", resp.data[0].attributes.serviceContractId); //used in getting Account and Service Fee definitions",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contractDefinitions?filter[contractType]=002&filter[serviceContractId]=051",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"contractDefinitions"
									],
									"query": [
										{
											"key": "filter[contractType]",
											"value": "002",
											"description": "Acquirer"
										},
										{
											"key": "filter[serviceContractId]",
											"value": "051",
											"description": "filter contract for Small business as an example"
										}
									]
								},
								"description": "This call will get/retrieve the list of available pre-defined merchant contract definitions. The list of definitions in the response could be used by any third-party vendor or partners for selection of merchant contracts available via their user interface. \n\n**Please note:**\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together. In this case, contract definition ID selected is the 3rd record (resp.data[2].id as the first record would start to 0)."
							},
							"response": [
								{
									"name": "Contract Definitions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contractDefinitions?filter[contractType]=002",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contractDefinitions"
											],
											"query": [
												{
													"key": "filter[contractType]",
													"value": "002",
													"description": "Acquirer"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Tue, 05 Nov 2019 23:24:18 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1104"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"serviceContractId=051\",\n            \"type\": \"contractDefinitions\",\n            \"attributes\": {\n                \"contractType\": \"002\",\n                \"description\": \"Acquirer contract for small business\",\n                \"serviceContractId\": \"051\",\n                \"reviewPeriod\": \"000\"\n            }\n        },\n        {\n            \"id\": \"serviceContractId=052\",\n            \"type\": \"contractDefinitions\",\n            \"attributes\": {\n                \"contractType\": \"002\",\n                \"description\": \"Acquiring contract for medium clients\",\n                \"serviceContractId\": \"052\",\n                \"reviewPeriod\": \"000\"\n            }\n        },\n        {\n            \"id\": \"serviceContractId=053\",\n            \"type\": \"contractDefinitions\",\n            \"attributes\": {\n                \"contractType\": \"002\",\n                \"description\": \"Acquirer contract for commercial business\",\n                \"serviceContractId\": \"053\",\n                \"reviewPeriod\": \"000\"\n            }\n        },\n        {\n            \"id\": \"serviceContractId=054\",\n            \"type\": \"contractDefinitions\",\n            \"attributes\": {\n                \"contractType\": \"002\",\n                \"description\": \"Acquirer contract for enterprise business\",\n                \"serviceContractId\": \"054\",\n                \"reviewPeriod\": \"000\"\n            }\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://localhost:8080/wsm/jsonapi/contractDefinitions?page[limit]=20&filter[contractDefinitions][contractType][EQ]=002\",\n        \"last\": \"http://localhost:8080/wsm/jsonapi/contractDefinitions?page[limit]=20&filter[contractDefinitions][contractType][EQ]=002\"\n    },\n    \"meta\": {\n        \"totalResourceCount\": 4\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Parent Contract Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*[[start postmanerator :: struct-uses]]*/",
											"function populateRequestStructUses() {",
											"    APIStructure = {",
											"        structure: 'merchants'",
											"    };",
											"}",
											"/*[[end postmanerator :: struct-uses]]*/",
											"",
											"tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"var data = JSON.parse(responseBody);",
											"pm.environment.set(\"parentContractId\", data.data[0].id);",
											"pm.environment.set(\"serviceContractId\", data.included[0].attributes.serviceContractId); //used in getting Account and Service Fee definitions"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants/{{parentMerchantId}}/contracts?include=contractDefinition&sort=-effectiveDate&fields=id&filter[clientLevel]=003",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"merchants",
										"{{parentMerchantId}}",
										"contracts"
									],
									"query": [
										{
											"key": "include",
											"value": "contractDefinition"
										},
										{
											"key": "filter[effectiveDate][LE]",
											"value": "2016-04-22",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "-effectiveDate"
										},
										{
											"key": "fields",
											"value": "id"
										},
										{
											"key": "filter[clientLevel]",
											"value": "003",
											"description": "filter the client level of parent"
										},
										{
											"key": "fields[contractDefinitions]",
											"value": "id",
											"disabled": true
										}
									]
								},
								"description": "This call retrieves the contract of the parent merchant. The response will then be passed on to retrieving the accounts and service definitions for that given contract. \n\nExample **parentMerchantId**:\n**clientNumber=00000030**"
							},
							"response": [
								{
									"name": "Parent client contract - 00110365",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants/{{parentMerchantId}}/contracts?include=contractDefinition&filter[contracts][effectiveDate][GE]=2016-04-22&fields[contracts]=id&filter[contracts][clientLevel]=003&fields[contractDefinitions]=id",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants",
												"{{parentMerchantId}}",
												"contracts"
											],
											"query": [
												{
													"key": "include",
													"value": "contractDefinition"
												},
												{
													"key": "filter[contracts][effectiveDate][GE]",
													"value": "2016-04-22"
												},
												{
													"key": "fields[contracts]",
													"value": "id"
												},
												{
													"key": "filter[contracts][clientLevel]",
													"value": "003",
													"description": "filter the client level of parent"
												},
												{
													"key": "fields[contractDefinitions]",
													"value": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 25 Oct 2019 09:02:22 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "900"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"clientNumber=00110365&groupNumber=00000945&effectiveDate=2016-04-22&clientLevel=003\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"contractDefinition\": {\n                    \"data\": {\n                        \"id\": \"serviceContractId=111\",\n                        \"type\": \"contractDefinitions\"\n                    }\n                }\n            }\n        }\n    ],\n    \"included\": [\n        {\n            \"id\": \"serviceContractId=111\",\n            \"type\": \"contractDefinitions\"\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://localhost:8080/wsm/jsonapi/merchants/clientNumber=00110365/contracts?include[contracts]=contractDefinition&page[limit]=20&filter[contracts][effectiveDate][GE]=2016-04-22&fields[contracts]=id&filter[contracts][clientLevel][EQ]=003&fields[contractDefinitions]=id\",\n        \"last\": \"http://localhost:8080/wsm/jsonapi/merchants/clientNumber=00110365/contracts?include[contracts]=contractDefinition&page[limit]=20&filter[contracts][effectiveDate][GE]=2016-04-22&fields[contracts]=id&filter[contracts][clientLevel][EQ]=003&fields[contractDefinitions]=id\"\n    },\n    \"meta\": {\n        \"totalResourceCount\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Account & Service Definitions",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*[[start postmanerator :: struct-uses]]*/",
											"function populateRequestStructUses() {",
											"    APIStructure = {",
											"        structure: 'contractDefinitions'",
											"    };",
											"}",
											"/*[[end postmanerator :: struct-uses]]*/",
											"",
											"",
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var resp = JSON.parse(responseBody);",
											"pm.environment.set(\"serviceDefinitionId\", resp.data.relationships.serviceDefinitions.data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contractDefinitions/{{contractDefinitionId}}?include=serviceDefinitions&filter[serviceDefinitions][serviceId]=301",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contractDefinitions"
									],
									"path": [
										"{{contractDefinitionId}}"
									],
									"query": [
										{
											"key": "include",
											"value": "serviceDefinitions"
										},
										{
											"key": "filter[serviceDefinitions][serviceBeneficiary]",
											"value": "001",
											"description": "select the appropriate service beneficiary - Group (005), Member (001), or Billing level (002) services",
											"disabled": true
										},
										{
											"key": "filter[accountDefinitions][accountTypeId]",
											"value": "012",
											"description": "Payment Account Retail as an example",
											"disabled": true
										},
										{
											"key": "filter[accountDefinitions][accountCurrency]",
											"value": "EUR,USD",
											"description": "filter only EUR and USD as an example",
											"disabled": true
										},
										{
											"key": "filter[serviceDefinitions][serviceId]",
											"value": "301",
											"description": "only include OPTIONAL services e.g. 102 Acquire MAST"
										},
										{
											"key": "fields[accountDefinitions]",
											"value": "id",
											"disabled": true
										},
										{
											"key": "fields[serviceDefinitions]",
											"value": "id",
											"disabled": true
										}
									]
								},
								"description": "This call will retrieve the contract definition including the list of account and service definitions for the selected service contract. The list of definitions in the response could be used by third-party vendors or partners for selection of accounts and services definition available for the given contract. During onboarding, selected account and service definition IDs will feed the creation of merchant Accounts (via /accounts API) and Services (via /services API). \n\nOne can amend the filter/parameters on this API request based on:\n- **serviceBeneficiary** available for the given contract. Example beneficiaries would be\n\t1. group level - serviceBenificiary **005** which can be used for group and subgroup services creation, \n\t2. billing level - serviceBenificiary **002**, \n\t3. member level services - serviceBenificiary **001**\n- which **account types** and **currencies** are required to be added for the client\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together. In this case, first record of accountDefinition and serviceDefinition ID is selected (assigned as data[0].id) to be used to create merchant accounts and services."
							},
							"response": [
								{
									"name": "Account & Service Definitions - member level",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contractDefinitions/{{contractDefinitionId}}?include=accountDefinitions,serviceDefinitions&filter[serviceDefinitions][serviceBeneficiary]=001&filter[accountDefinitions][accountTypeId]=012&filter[serviceDefinitions][serviceId]=102",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contractDefinitions",
												"{{contractDefinitionId}}"
											],
											"query": [
												{
													"key": "include",
													"value": "accountDefinitions,serviceDefinitions"
												},
												{
													"key": "filter[serviceDefinitions][serviceBeneficiary]",
													"value": "001",
													"description": "select the appropriate service beneficiary - Group (005), Member (001), or Billing level (002) services"
												},
												{
													"key": "filter[accountDefinitions][accountTypeId]",
													"value": "012",
													"description": "Payment Account Retail as an example"
												},
												{
													"key": "filter[accountDefinitions][accountCurrency]",
													"value": "EUR,USD",
													"description": "filter only EUR and USD as an example",
													"disabled": true
												},
												{
													"key": "filter[serviceDefinitions][serviceId]",
													"value": "102",
													"description": "only include OPTIONAL services"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Tue, 05 Nov 2019 23:34:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "43871"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"serviceContractId=051\",\n        \"type\": \"contractDefinitions\",\n        \"attributes\": {\n            \"contractType\": \"002\",\n            \"description\": \"Acquirer contract for small business\",\n            \"serviceContractId\": \"051\",\n            \"reviewPeriod\": \"000\"\n        },\n        \"relationships\": {\n            \"accountDefinitions\": {\n                \"data\": [\n                    {\n                        \"id\": \"accountTypeId=012&accountCurrency=USD&serviceContractId=051\",\n                        \"type\": \"accountDefinitions\"\n                    }\n                ]\n            },\n            \"serviceDefinitions\": {\n                \"data\": [\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=002&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=010&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=011&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=011&cardOrganization=020&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=032&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=033&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=034&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=038&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=038&cardOrganization=020&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=040&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=041&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=060&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=061&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=063&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=069&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=070&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=071&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=072&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=074&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=075&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=076&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=079&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=080&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=081&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=082&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=101&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=117&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=120&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=128&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=129&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=134&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=135&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=137&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=138&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=142&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=155&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=161&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    },\n                    {\n                        \"id\": \"serviceId=102&serviceContractId=051&cardBrand=168&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n                        \"type\": \"serviceDefinitions\"\n                    }\n                ]\n            }\n        }\n    },\n    \"included\": [\n        {\n            \"id\": \"accountTypeId=012&accountCurrency=USD&serviceContractId=051\",\n            \"type\": \"accountDefinitions\",\n            \"attributes\": {\n                \"cycleAccountTypeId\": \"000\",\n                \"generateValueBalance\": \"000\",\n                \"postInterestToSource\": \"000\",\n                \"accountCategory\": \"005\",\n                \"shadowAccountFlag\": \"000\",\n                \"accountCurrency\": \"USD\",\n                \"bonusReplenishmentOrder\": \"000\",\n                \"refundReplenishmentOrder\": \"000\",\n                \"billingCycleMode\": \"001\",\n                \"balanceResetMode\": \"002\",\n                \"currentCycleStart\": null,\n                \"generatePaymentHistory\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"prepaymentId\": null,\n                \"globalLimitTypeId\": null,\n                \"currentCycleEnd\": null,\n                \"limitCurrency\": null,\n                \"paymentReplenishmentOrder\": \"000\",\n                \"statementGeneration\": null,\n                \"cycleAccountCurrency\": \"N/A\",\n                \"limitTypeId\": null,\n                \"accountTypeId\": \"012\",\n                \"billingCycle\": \"301\",\n                \"statementType\": \"068\",\n                \"paymentMethod\": \"000\",\n                \"creditInterestReplenishmentOrder\": \"000\",\n                \"interestMethod\": null,\n                \"createOnDemand\": \"000\"\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=002&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"002\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=010&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"010\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=011&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"011\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=011&cardOrganization=020&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"011\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"020\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=032&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"032\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=033&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"033\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=034&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"034\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=038&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"038\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=038&cardOrganization=020&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"038\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"020\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=040&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"040\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=041&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"041\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=060&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"060\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=061&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"061\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=063&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"063\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=069&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"069\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=070&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"070\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=071&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"071\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=072&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"072\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=074&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"074\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=075&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"075\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=076&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"076\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=079&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"079\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=080&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"080\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=081&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"081\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=082&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"082\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=101&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"101\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=117&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"117\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=120&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"120\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=128&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"128\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=129&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"129\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=134&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"134\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=135&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"135\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=137&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"137\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=138&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"138\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=142&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"142\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=155&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"155\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=161&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"161\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        },\n        {\n            \"id\": \"serviceId=102&serviceContractId=051&cardBrand=168&cardOrganization=002&serviceType=999&effectiveDate=2018-03-01\",\n            \"type\": \"serviceDefinitions\",\n            \"attributes\": {\n                \"serviceType\": \"999\",\n                \"noteText\": null,\n                \"emergencyExpiry\": null,\n                \"plasticType\": \"000\",\n                \"cardEncodingScheme\": null,\n                \"sequenceLength\": null,\n                \"track3DataType\": null,\n                \"commonGroupExpiry\": null,\n                \"replacementExpiryMode\": null,\n                \"serviceCategory\": \"002\",\n                \"numberGenerationMethod\": null,\n                \"pvki\": null,\n                \"wrongPinLimit\": null,\n                \"serviceId\": \"102\",\n                \"cardBrand\": \"168\",\n                \"reissueExpiryMode\": null,\n                \"memberId\": null,\n                \"replacementThreshold\": null,\n                \"firstRenewalPeriod\": null,\n                \"sequenceNumber\": null,\n                \"binLength\": null,\n                \"productId\": null,\n                \"cardEffectiveDateMode\": \"001\",\n                \"dailyPinReset\": null,\n                \"serviceBeneficiary\": \"001\",\n                \"cardLength\": null,\n                \"cardOrganization\": \"002\",\n                \"selectionkey\": null,\n                \"subsequentRenewalPeriod\": null,\n                \"serviceCategoryCode\": null,\n                \"areaOfEvent\": null,\n                \"endBinValue\": null,\n                \"applicationId\": null,\n                \"reissueThreshold\": null,\n                \"effectiveDate\": \"2018-03-01\",\n                \"startBinValue\": null\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "MISC | Account Fee Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*[[start postmanerator :: struct-uses]]*/",
											"function populateRequestStructUses() {",
											"    APIStructure = {",
											"        structure: 'accountFeeDefinitions'",
											"    };",
											"}",
											"/*[[end postmanerator :: struct-uses]]*/",
											"",
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var resp = JSON.parse(responseBody);",
											"pm.environment.set(\"clientTariff\", resp.data[0].attributes.clientTariff);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/accountFeeDefinitions?filter[serviceContractId]={{serviceContractId}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"accountFeeDefinitions"
									],
									"query": [
										{
											"key": "filter[serviceContractId]",
											"value": "{{serviceContractId}}"
										}
									]
								},
								"description": "Retrieval of merchant account fee rule setup used for the generation of account fees using the service contract id retrieved from Contract Definitions call in this section."
							},
							"response": [
								{
									"name": "GET Account Fee Definition - sample",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json",
												"type": "text"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/accountFeeDefinitions",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"accountFeeDefinitions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Wed, 11 Sep 2019 14:18:19 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "16108"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"recordIdNumber=0000000990\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"402\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000001\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"522\",\n                \"feeTransactionType\": \"402\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000670\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"547\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000001\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"514\",\n                \"feeTransactionType\": \"547\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000992\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"402\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000001\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"522\",\n                \"feeTransactionType\": \"402\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000672\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"547\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000001\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"514\",\n                \"feeTransactionType\": \"547\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000001006\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"402\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000005\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"522\",\n                \"feeTransactionType\": \"402\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000686\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"547\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000005\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"514\",\n                \"feeTransactionType\": \"547\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000001008\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"402\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000005\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"522\",\n                \"feeTransactionType\": \"402\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000688\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"547\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000005\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"514\",\n                \"feeTransactionType\": \"547\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000001022\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"402\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000009\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"522\",\n                \"feeTransactionType\": \"402\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000702\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"547\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000009\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"514\",\n                \"feeTransactionType\": \"547\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000001024\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"402\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000009\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"522\",\n                \"feeTransactionType\": \"402\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000704\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"547\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000009\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"514\",\n                \"feeTransactionType\": \"547\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000001038\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"402\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000013\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"522\",\n                \"feeTransactionType\": \"402\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000718\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"547\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000013\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"514\",\n                \"feeTransactionType\": \"547\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000001040\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"402\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000013\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"522\",\n                \"feeTransactionType\": \"402\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000720\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"547\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000013\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"514\",\n                \"feeTransactionType\": \"547\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000001054\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"402\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000017\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"522\",\n                \"feeTransactionType\": \"402\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000734\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"547\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000017\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"514\",\n                \"feeTransactionType\": \"547\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000001056\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"402\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000017\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"522\",\n                \"feeTransactionType\": \"402\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000736\",\n            \"type\": \"accountFeeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"547\",\n                \"objectLevel\": \"999\",\n                \"accountCurrency\": \"USD\",\n                \"clientTariff\": \"000017\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"periodReference\": \"014\",\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"514\",\n                \"feeTransactionType\": \"547\",\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"postFeeToSource\": \"000\",\n                \"referenceOperator\": \"001\",\n                \"accountTypeId\": \"012\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 10\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://localhost:8080/wsm/jsonapi/accountFeeDefinitions?page[limit]=20\",\n        \"last\": \"http://localhost:8080/wsm/jsonapi/accountFeeDefinitions?page[limit]=20&page[offset]=180\",\n        \"next\": \"http://localhost:8080/wsm/jsonapi/accountFeeDefinitions?page[limit]=20&page[offset]=20\"\n    },\n    \"meta\": {\n        \"totalResourceCount\": 192\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Service Fee Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*[[start postmanerator :: struct-uses]]*/",
											"function populateRequestStructUses() {",
											"    APIStructure = {",
											"        structure: 'serviceFeeDefinitions'",
											"    };",
											"}",
											"/*[[end postmanerator :: struct-uses]]*/",
											"",
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var resp = JSON.parse(responseBody);",
											"pm.environment.set(\"clientTariff\", resp.data[0].attributes.clientTariff);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/serviceFeeDefinitions?filter[serviceContractId]={{serviceContractId}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"serviceFeeDefinitions"
									],
									"query": [
										{
											"key": "filter[serviceContractId]",
											"value": "{{serviceContractId}}"
										}
									]
								},
								"description": "Retrieve a list of all miscellaneous service fee rules based on a given service contract id which can be retrieved from Contract Definitions call in this section."
							},
							"response": [
								{
									"name": "GET Service Fee Definition - sample",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json",
												"type": "text"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/serviceFeeDefinitions",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"serviceFeeDefinitions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Wed, 11 Sep 2019 14:18:27 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "15528"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"recordIdNumber=0000000350\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000001\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000352\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000001\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000366\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000005\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000368\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000005\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000382\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000009\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000384\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000009\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000398\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000013\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000400\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000013\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000414\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000017\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000416\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000017\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000430\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000021\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000432\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000021\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000446\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000025\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000448\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000025\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000462\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000029\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000464\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000029\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000478\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000033\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000480\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000033\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000494\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000037\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000496\",\n            \"type\": \"serviceFeeDefinitions\",\n            \"attributes\": {\n                \"reportForm\": null,\n                \"feeMode\": \"001\",\n                \"feePercent\": 0,\n                \"triggerRuleId\": \"000\",\n                \"chargeType\": \"001\",\n                \"clientFeeId\": \"508\",\n                \"objectLevel\": \"999\",\n                \"clientTariff\": \"000037\",\n                \"expiryDate\": \"9999-12-31\",\n                \"periodReference\": \"014\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"triggerValueLow\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"tierLevel\": \"000\",\n                \"triggerPeriod\": \"021\",\n                \"triggerSource\": \"007\",\n                \"feeTransactionType\": null,\n                \"triggerOperator\": \"000\",\n                \"serviceContractId\": \"051\",\n                \"isContractFee\": true,\n                \"postFeeToSource\": null,\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"referenceOperator\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 14.95\n                },\n                \"fixedPeriod\": 0,\n                \"triggerValueHigh\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"effectiveDate\": \"2019-03-01\"\n            }\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://localhost:8080/wsm/jsonapi/serviceFeeDefinitions?page[limit]=20\",\n        \"last\": \"http://localhost:8080/wsm/jsonapi/serviceFeeDefinitions?page[limit]=20&page[offset]=220\",\n        \"next\": \"http://localhost:8080/wsm/jsonapi/serviceFeeDefinitions?page[limit]=20&page[offset]=20\"\n    },\n    \"meta\": {\n        \"totalResourceCount\": 240\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Product Charge Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*[[start postmanerator :: struct-uses]]*/",
											"function populateRequestStructUses() {",
											"    APIStructure = {",
											"        structure: 'productChageDefinitions'",
											"    };",
											"}",
											"/*[[end postmanerator :: struct-uses]]*/",
											"",
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var resp = JSON.parse(responseBody);",
											"pm.environment.set(\"transactionChargesTariff\", resp.data[0].attributes.clientTariff);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/productChargeDefinitions?filter[serviceContractId]={{serviceContractId}}&sort=clientTariff",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"productChargeDefinitions"
									],
									"query": [
										{
											"key": "filter[serviceContractId]",
											"value": "{{serviceContractId}}",
											"description": "transaction charges tariff for Small Business as an example"
										},
										{
											"key": "sort",
											"value": "clientTariff"
										}
									]
								},
								"description": "Retrieval of insitution and merchant specific product fee setup used for the generation of product fees and charges. Product charge setup uses an effectiveDate to indicate when the rule comes into effect."
							},
							"response": [
								{
									"name": "GET Product Charge Definition - sample",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json",
												"type": "text"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/productChargeDefinitions?filter[recordIdNumber][LT]=0000000900&sort=recordIdNumber",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"productChargeDefinitions"
											],
											"query": [
												{
													"key": "filter[recordIdNumber][LT]",
													"value": "0000000900"
												},
												{
													"key": "sort",
													"value": "recordIdNumber"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Wed, 11 Sep 2019 14:25:56 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "15826"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"recordIdNumber=0000000506\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000001\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"051\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000507\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000001\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"052\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000508\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000001\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"053\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000509\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000001\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"054\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000522\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000005\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"051\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000523\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000005\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"052\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000524\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000005\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"053\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000525\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000005\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"054\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000538\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000009\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"051\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000539\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000009\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"052\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000540\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000009\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"053\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000541\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000009\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"054\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000554\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000013\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"051\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000555\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000013\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"052\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000556\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000013\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"053\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000557\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000013\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"054\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000570\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000017\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"051\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000571\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000017\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"052\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000572\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000017\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"053\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        },\n        {\n            \"id\": \"recordIdNumber=0000000573\",\n            \"type\": \"productChargeDefinitions\",\n            \"attributes\": {\n                \"feeMode\": \"001\",\n                \"serviceType\": \"999\",\n                \"feePercent\": 2.9,\n                \"chargeType\": \"002\",\n                \"plIndOutward\": \"000\",\n                \"clientTariff\": \"000017\",\n                \"numberOfDays\": 0,\n                \"feeId\": \"000000\",\n                \"chargeTierLevel\": \"000\",\n                \"expiryDate\": \"9999-12-31\",\n                \"feeCategory\": \"003\",\n                \"feeMaximum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"plIndInward\": \"413\",\n                \"sourceTransactionType\": \"000\",\n                \"captureMethod\": \"999\",\n                \"serviceId\": \"999\",\n                \"serviceContractId\": \"054\",\n                \"transactionCurrency\": \"999\",\n                \"mathOperator\": \"001\",\n                \"isContractFee\": true,\n                \"valueDayReference\": \"014\",\n                \"feeMinimum\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0\n                },\n                \"transactionType\": \"999\",\n                \"roundingMode\": \"001\",\n                \"feeBase\": {\n                    \"currency\": \"USD\",\n                    \"value\": 0.1\n                },\n                \"areaOfEvent\": \"999\",\n                \"effectiveDate\": \"2019-03-01\",\n                \"postingMethod\": \"002\"\n            }\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://localhost:8080/wsm/jsonapi/productChargeDefinitions?page[limit]=20&filter[productChargeDefinitions][recordIdNumber][LT]=0000000900&sort[productChargeDefinitions]=recordIdNumber\",\n        \"last\": \"http://localhost:8080/wsm/jsonapi/productChargeDefinitions?page[limit]=20&filter[productChargeDefinitions][recordIdNumber][LT]=0000000900&page[offset]=80&sort[productChargeDefinitions]=recordIdNumber\",\n        \"next\": \"http://localhost:8080/wsm/jsonapi/productChargeDefinitions?page[limit]=20&filter[productChargeDefinitions][recordIdNumber][LT]=0000000900&page[offset]=20&sort[productChargeDefinitions]=recordIdNumber\"\n    },\n    \"meta\": {\n        \"totalResourceCount\": 100\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Link Services - for Device creation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var data = JSON.parse(responseBody);",
											"pm.environment.set(\"serviceId\", data.data[0].id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dateNow= new Date();\r",
											"\r",
											"pm.environment.set(\"postingDate\", dateNow.toISOString().slice(0,10));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"value": "true",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/services?filter[serviceCategory]=022&filter[clientNumber]={{clientNumber}}&filter[groupNumber]={{groupNumber}}&filter[effectiveDate][LE]=2019-09-12&sort=-effectiveDate",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"services"
									],
									"query": [
										{
											"key": "filter[serviceCategory]",
											"value": "022",
											"description": "022=Capture Solutions"
										},
										{
											"key": "filter[clientNumber]",
											"value": "{{clientNumber}}",
											"description": "BankWorks clientNumber assigned for the merchant"
										},
										{
											"key": "filter[groupNumber]",
											"value": "{{groupNumber}}"
										},
										{
											"key": "filter[effectiveDate][LE]",
											"value": "2019-09-12",
											"description": "use posting date / current date"
										},
										{
											"key": "sort",
											"value": "-effectiveDate",
											"description": "to get the first record to be considered as latest effective"
										}
									]
								},
								"description": "Use this call in order to get the service that will be linked for device creation. Effective date from the filter will only be applicable when a service id already has history of records in this resource. This is to retrieve only the latest effective service that will be linked to the device."
							},
							"response": [
								{
									"name": "Linked Service - for Device creation - 00000429 clientNumber",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/services?filter[serviceCategory]=022&filter[clientNumber]={{clientNumber}}&filter[groupNumber]={{groupNumber}}&filter[effectiveDate][GE]=2019-09-12&sort=effectiveDate",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"services"
											],
											"query": [
												{
													"key": "filter[serviceCategory]",
													"value": "022",
													"description": "022=Capture Solutions"
												},
												{
													"key": "filter[clientNumber]",
													"value": "{{clientNumber}}",
													"description": "BankWorks clientNumber assigned for the merchant"
												},
												{
													"key": "filter[groupNumber]",
													"value": "{{groupNumber}}"
												},
												{
													"key": "filter[effectiveDate][GE]",
													"value": "2019-09-12",
													"description": "use posting date / current date"
												},
												{
													"key": "sort",
													"value": "effectiveDate",
													"description": "to get the first record to be considered as latest effective"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Tue, 29 Oct 2019 12:50:50 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "934"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"serviceId=301&groupNumber=00012074&clientNumber=00000429&effectiveDate=2019-09-12\",\n            \"type\": \"services\",\n            \"attributes\": {\n                \"expiryDate\": \"2020-09-30\",\n                \"reviewDate\": \"2020-09-30\",\n                \"clientTariff\": \"000000\",\n                \"clientNumber\": \"00000429\",\n                \"serviceId\": \"301\",\n                \"groupNumber\": \"00012074\",\n                \"effectiveDate\": \"2019-09-12\",\n                \"serviceCategory\": \"022\",\n                \"status\": \"001\"\n            }\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://localhost:8080/wsm/jsonapi/services?page[limit]=20&sort[services]=effectiveDate&filter[services][effectiveDate][GE]=2019-09-12&filter[services][serviceCategory][EQ]=022&filter[services][clientNumber][EQ]=00000429&filter[services][groupNumber][EQ]=00012074\",\n        \"last\": \"http://localhost:8080/wsm/jsonapi/services?page[limit]=20&sort[services]=effectiveDate&filter[services][effectiveDate][GE]=2019-09-12&filter[services][serviceCategory][EQ]=022&filter[services][clientNumber][EQ]=00000429&filter[services][groupNumber][EQ]=00012074\"\n    },\n    \"meta\": {\n        \"totalResourceCount\": 1\n    }\n}"
								}
							]
						}
					],
					"description": "This section will provide sample calls for retrieving business setup configuration within BankWorks useful for creating merchant contract, accounts, services, and even for devices during onboarding or servicing for maintenance.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Change Password",
					"item": [
						{
							"name": "MISC | Change User Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"password\", \"Rs2Adm1n!\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"newPassword\":\"Rs2Adm1n!\"\r\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}api/user-management/userpassword",
									"host": [
										"{{hostName}}{{contextRoot}}api"
									],
									"path": [
										"user-management",
										"userpassword"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Child Contracts",
					"item": [
						{
							"name": "MISC | Get All Merchant Hierarchy via /contracts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts/{{contractId}}/childContracts?filter[clientLevel]=003&include=parentContracts,childContracts",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
									],
									"path": [
										"{{contractId}}",
										"childContracts"
									],
									"query": [
										{
											"key": "filter[clientLevel]",
											"value": "003",
											"description": "Does not filter correctly"
										},
										{
											"key": "filter[groupNumber]",
											"value": "00156872",
											"description": "Works, but no point",
											"disabled": true
										},
										{
											"key": "filter[clientNumber]",
											"value": "62040151",
											"description": "Not Filterable",
											"disabled": true
										},
										{
											"key": "filter[childContracts][clientLevel]",
											"value": "003",
											"disabled": true
										},
										{
											"key": "filter[contracts][clientLevel]",
											"value": "003",
											"disabled": true
										},
										{
											"key": "filter[effectiveDate]",
											"value": "2020-01-29",
											"description": "Works",
											"disabled": true
										},
										{
											"key": "include",
											"value": "parentContracts,childContracts"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get All Merchant Hierarchy via /merchants",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}merchants/{{merchantId}}/contracts?include=parentContracts&include=childContracts&sort=clientLevel",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}merchants"
									],
									"path": [
										"{{merchantId}}",
										"contracts"
									],
									"query": [
										{
											"key": "filter[groupNumber]",
											"value": "00156872",
											"description": "Works, but no point",
											"disabled": true
										},
										{
											"key": "filter[clientNumber]",
											"value": "62040151",
											"description": "Not Filterable",
											"disabled": true
										},
										{
											"key": "filter[childContracts][clientLevel]",
											"value": "003",
											"disabled": true
										},
										{
											"key": "filter[contracts][clientLevel]",
											"value": "003",
											"disabled": true
										},
										{
											"key": "filter[effectiveDate]",
											"value": "2020-01-29",
											"description": "Works",
											"disabled": true
										},
										{
											"key": "include",
											"value": "parentContracts"
										},
										{
											"key": "include",
											"value": "childContracts"
										},
										{
											"key": "sort",
											"value": "clientLevel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get Child Contracts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts/{{contractId}}/childContracts?include=merchant",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
									],
									"path": [
										"{{contractId}}",
										"childContracts"
									],
									"query": [
										{
											"key": "include",
											"value": "merchant"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Child Hierarchy",
					"item": [
						{
							"name": "MISC | Post Merchant Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 201;",
											"    var resp = JSON.parse(responseBody);",
											"    pm.environment.set(\"merchantId\", resp.data.id);",
											"    if (pm.environment.has(\"addressCategory\")) {",
											"        pm.environment.set(\"addrCounter\", 0);",
											"    }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"    if (pm.environment.get(\"broker\") === null || pm.environment.get(\"broker\") === false || pm.environment.get(\"broker\") === undefined) {",
											"        pm.environment.set(\"client\", \"merchants\");",
											"        pm.environment.set(\"processingRegion\", \"\\\"processingRegion\\\": \\\"000\\\",\");",
											"        pm.environment.set(\"serviceTelephone\", \"\\\"serviceTelephone\\\":\\\"9898989898\\\",\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"client\", \"brokers\");",
											"        pm.environment.set(\"processingRegion\", \"\");",
											"        pm.environment.set(\"serviceTelephone\", \"\");",
											"    }",
											"    ",
											"    if (pm.environment.get(\"institutionNumber\") !== \"00000200\") {",
											"        pm.environment.set(\"ourReference\", pm.environment.get(\"clientNumber\"));",
											"    }",
											"    ",
											"    if (pm.environment.get(\"legalForm\") === null || pm.environment.get(\"legalForm\") === false || pm.environment.get(\"legalForm\") === undefined) {",
											"        pm.environment.set(\"legalForm\", \"001\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"legalForm\", pm.environment.get(\"legalForm\"));",
											"    }",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"{{client}}\",\n        \"attributes\": {\n            \"clientNumber\": \"{{clientNumber}}\",\n            \"ourReference\": \"{{ourReference}}\",\n            \"clientType\" : \"{{clientType}}\",\n            \"firstName\": \"Max\",\n            \"lastName\": \"IsAwesome\",\n            \"registrationNumber\": \"123456\",\n            \"businessClass\": \"{{MCC}}\",\n            \"domesticMcc\": \"{{DMCC}}\",\n            \"shortName\": \"Max Test API\",\n            \"language\": \"001\",\n            \"legalForm\": \"{{legalForm}}\",\n            \"vatRegistrationNumber\": \"BG123 122 1231\",\n            \"tradeName\": \"Drugs\",\n            \"companyName\": \"MaxAPI\",\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"{{country}}\",\n        \t{{processingRegion}}\n            \"mainContactDetails\": {\n                {{serviceTelephone}}\n                \"contactName\": \"Max\"\n            },\n            \"middleName\": \"Middle Bill\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}{{client}}/clientNumber=10001000/contracts",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}{{client}}"
									],
									"path": [
										"clientNumber=10001000",
										"contracts"
									]
								},
								"description": "This call is the first step for onboarding and is **MANDATORY** to be created regardless of client level in the hierarchy. This API represents the main details of the client. For member level details (transacting merchant or lowest level in the hierarchy) this will include the unique merchant ID which stored in ourReference attribute of this request. \n\nA successful response will capture the ID of this merchants API resource such as the clientNumber and will be required on the succeeding API POST/PATCH calls for the following resources:\n\nPOST calls to:\n- /addresses\n- /merchantsAddendum\n- /merchantsAddendumUsa\n- /contracts\n- /settlementPackages\nPATCH to:\n- /merchants status for Application Processing\n\n**Important note:**\n\nFor merchant hierarchy onboarding, a top-down level approach should be followed such as Group level should be onboarded first followed by Sub-group level(s) and lastly the Member (transacting) level merchants. Please note that parent levels should be onboarded successfully (in ACTIVE status) before one can onboard the child level.\n\nEvery merchant pre-boarded to bankWORKS using WSM API will be marked with a specific status value of 023 (In Process), indicating that the merchant is not yet active in the system. After creation of the merchant followed by the related and required API resources for onboarding, the status of the merchant can be set to either 001 (Active) or 003 (Suspended) by sending a PATCH request to merchants API. Suspended status will only apply for member level merchants if needed.\n\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together. In this request, merchantId is assigned in order to be used to create related information of merchant in the succeeding calls."
							},
							"response": [
								{
									"name": "BOA-SB test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB shortName\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753951\",\n\t        \"ourReference\" : \"11223344\",\n\t        \"tradeName\" : \"BOA-SB Trade Name\",\n\t        \"companyName\" : \"BOA-SB Company Name\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"title\" : \"001\",\n\t        \t\"contactName\" : \"BOA-SB Contact Name\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:30:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "719"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Company Name\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000227\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": \"11223344\",\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Trade Name\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753951\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"001\",\n                \"contactName\": \"BOA-SB Contact Name\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB shortName\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "Top level - Group",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB Grp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB Grp test\",\n\t        \"companyName\" : \"BOA-SB Grp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB Grp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 10:58:49 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "707"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Grp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000228\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Grp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": null,\n                \"contactName\": \"BOA-SB Grp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB Grp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "Middle level - Subgroup merchant",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB SubGrp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB SubGrp test\",\n\t        \"companyName\" : \"BOA-SB SubGrp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB SubGrp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:36:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "720"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB SubGrp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000229\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB SubGrp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"000\",\n                \"contactName\": \"BOA-SB SubGrp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB SubGrp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Get Child Hierarchy",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts/{{contractId}}/childHierarchy?sort=clientLevel",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
									],
									"path": [
										"{{contractId}}",
										"childHierarchy"
									],
									"query": [
										{
											"key": "sort",
											"value": "clientLevel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get Child Hierarchy 2",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts/{{contractId1}}/childHierarchy?include=accounts&include=accounts.accountDefinition&filter[accounts][accountDefinition.accountTypeId]=012&include=merchant&sort=clientLevel",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
									],
									"path": [
										"{{contractId1}}",
										"childHierarchy"
									],
									"query": [
										{
											"key": "include",
											"value": "accounts"
										},
										{
											"key": "include",
											"value": "accounts.accountDefinition"
										},
										{
											"key": "filter[accounts][accountDefinition.accountTypeId]",
											"value": "012"
										},
										{
											"key": "include",
											"value": "merchant"
										},
										{
											"key": "sort",
											"value": "clientLevel"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Child Hierarchy, Child Contracts and Parent Contracts",
					"item": [
						{
							"name": "MISC | Get All Merchant Hierarchy via /contracts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts/{{contractId}}/childContracts?filter[clientLevel]=003&include=parentContracts,childContracts",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
									],
									"path": [
										"{{contractId}}",
										"childContracts"
									],
									"query": [
										{
											"key": "filter[clientLevel]",
											"value": "003",
											"description": "Does not filter correctly"
										},
										{
											"key": "filter[groupNumber]",
											"value": "00156872",
											"description": "Works, but no point",
											"disabled": true
										},
										{
											"key": "filter[clientNumber]",
											"value": "62040151",
											"description": "Not Filterable",
											"disabled": true
										},
										{
											"key": "filter[childContracts][clientLevel]",
											"value": "003",
											"disabled": true
										},
										{
											"key": "filter[contracts][clientLevel]",
											"value": "003",
											"disabled": true
										},
										{
											"key": "filter[effectiveDate]",
											"value": "2020-01-29",
											"description": "Works",
											"disabled": true
										},
										{
											"key": "include",
											"value": "parentContracts,childContracts"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get All Merchant Hierarchy via /merchants",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}merchants/{{merchantId}}/contracts?include=parentContracts&include=childContracts&sort=clientLevel",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}merchants"
									],
									"path": [
										"{{merchantId}}",
										"contracts"
									],
									"query": [
										{
											"key": "filter[groupNumber]",
											"value": "00156872",
											"description": "Works, but no point",
											"disabled": true
										},
										{
											"key": "filter[clientNumber]",
											"value": "62040151",
											"description": "Not Filterable",
											"disabled": true
										},
										{
											"key": "filter[childContracts][clientLevel]",
											"value": "003",
											"disabled": true
										},
										{
											"key": "filter[contracts][clientLevel]",
											"value": "003",
											"disabled": true
										},
										{
											"key": "filter[effectiveDate]",
											"value": "2020-01-29",
											"description": "Works",
											"disabled": true
										},
										{
											"key": "include",
											"value": "parentContracts"
										},
										{
											"key": "include",
											"value": "childContracts"
										},
										{
											"key": "sort",
											"value": "clientLevel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get Parent Contracts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts/{{contractId}}?include=parentContracts",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
									],
									"path": [
										"{{contractId}}"
									],
									"query": [
										{
											"key": "include",
											"value": "parentContracts"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get Child Contracts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts/{{contractId}}/childContracts?include=merchant",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
									],
									"path": [
										"{{contractId}}",
										"childContracts"
									],
									"query": [
										{
											"key": "include",
											"value": "merchant"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get Child Hierarchy",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts/{{contractId}}/childHierarchy?sort=clientLevel",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
									],
									"path": [
										"{{contractId}}",
										"childHierarchy"
									],
									"query": [
										{
											"key": "sort",
											"value": "clientLevel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get Child Hierarchy 2",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts/{{contractId1}}/childHierarchy?include=accounts&include=accounts.accountDefinition&filter[accounts][accountDefinition.accountTypeId]=012&include=merchant&sort=clientLevel",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
									],
									"path": [
										"{{contractId1}}",
										"childHierarchy"
									],
									"query": [
										{
											"key": "include",
											"value": "accounts"
										},
										{
											"key": "include",
											"value": "accounts.accountDefinition"
										},
										{
											"key": "filter[accounts][accountDefinition.accountTypeId]",
											"value": "012"
										},
										{
											"key": "include",
											"value": "merchant"
										},
										{
											"key": "sort",
											"value": "clientLevel"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Contracts",
					"item": [
						{
							"name": "MISC | Modifying a Current Effective Standalone/Group Contract",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var data = JSON.parse(responseBody);",
											"pm.environment.set(\"contractId\", data.data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"000001\",\n            \"clientScheme\": \"000001\",\n            \"settlementMethod\": \"001\",\n            \"postingMethod\": \"001\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n\t    \t\"contractDefinition\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"contractDefinitions\",\n\t    \t\t\t\"id\" : \"{{contractDefinitionId}}\"\n\t    \t\t}\n\t    \t}\n\t    }\n    }\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"contracts"
									]
								},
								"description": "This request can be used to define a future effective modification of an existing contract. Current effective contracts have to be modified by sending a POST request due to the effectiveDate, as current effective contracts cannot be modified in order not to impact processing. Should there be a future effective contract, a PATCH request could be sent to modify the contract."
							},
							"response": []
						},
						{
							"name": "MISC | Modifying a Current Effective Sub-Group/Member Contract",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var data = JSON.parse(responseBody);",
											"pm.environment.set(\"contractId\", data.data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"000001\",\n            \"clientScheme\": \"000001\",\n            \"settlementMethod\": \"001\",\n            \"postingMethod\": \"001\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n\t    \t\"parentContracts\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"contracts\",\n\t    \t\t\t\"id\" : \"{{parentContractId}}\"\n\t    \t\t}\n\t    \t}\n\t    }\n    }\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"contracts"
									]
								},
								"description": "This request can be used to define a future effective modification of an existing contract. Current effective contracts have to be modified by sending a POST request due to the effectiveDate, as current effective contracts cannot be modified in order not to impact processing. Should there be a future effective contract, a PATCH request could be sent to modify the contract."
							},
							"response": []
						}
					],
					"description": "This section will contain calls for contract maintenance.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "DELETEs",
					"item": [
						{
							"name": "MISC | Delete Accounts",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}accounts/accountNumber=10101001001",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}accounts"
									],
									"path": [
										"accountNumber=10101001001"
									],
									"query": [
										{
											"key": "id",
											"value": "accountNumber=97997227001",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Delete Settlement Packages",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}settlementPackages/clientNumber=10101002&settlementNumber=01",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}settlementPackages"
									],
									"path": [
										"clientNumber=10101002&settlementNumber=01"
									],
									"query": [
										{
											"key": "id",
											"value": "accountNumber=97997227001",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Delete Merchants",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}merchants/clientNumber=10101001",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}merchants"
									],
									"path": [
										"clientNumber=10101001"
									],
									"query": [
										{
											"key": "id",
											"value": "accountNumber=97997227001",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Effective Dates & Statuses",
					"item": [
						{
							"name": "MISC | Patch Merchants",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 201;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"status\": \"001\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}merchants/{{merchantId}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}merchants"
									],
									"path": [
										"{{merchantId}}"
									]
								},
								"description": "This call is the first step for onboarding and is **MANDATORY** to be created regardless of client level in the hierarchy. This API represents the main details of the client. For member level details (transacting merchant or lowest level in the hierarchy) this will include the unique merchant ID which stored in ourReference attribute of this request. \n\nA successful response will capture the ID of this merchants API resource such as the clientNumber and will be required on the succeeding API POST/PATCH calls for the following resources:\n\nPOST calls to:\n- /addresses\n- /merchantsAddendum\n- /merchantsAddendumUsa\n- /contracts\n- /settlementPackages\nPATCH to:\n- /merchants status for Application Processing\n\n**Important note:**\n\nFor merchant hierarchy onboarding, a top-down level approach should be followed such as Group level should be onboarded first followed by Sub-group level(s) and lastly the Member (transacting) level merchants. Please note that parent levels should be onboarded successfully (in ACTIVE status) before one can onboard the child level.\n\nEvery merchant pre-boarded to bankWORKS using WSM API will be marked with a specific status value of 023 (In Process), indicating that the merchant is not yet active in the system. After creation of the merchant followed by the related and required API resources for onboarding, the status of the merchant can be set to either 001 (Active) or 003 (Suspended) by sending a PATCH request to merchants API. Suspended status will only apply for member level merchants if needed.\n\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together. In this request, merchantId is assigned in order to be used to create related information of merchant in the succeeding calls."
							},
							"response": [
								{
									"name": "Middle level - Subgroup merchant",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB SubGrp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB SubGrp test\",\n\t        \"companyName\" : \"BOA-SB SubGrp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB SubGrp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:36:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "720"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB SubGrp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000229\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB SubGrp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"000\",\n                \"contactName\": \"BOA-SB SubGrp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB SubGrp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "Top level - Group",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB Grp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB Grp test\",\n\t        \"companyName\" : \"BOA-SB Grp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB Grp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 10:58:49 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "707"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Grp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000228\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Grp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": null,\n                \"contactName\": \"BOA-SB Grp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB Grp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "BOA-SB test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB shortName\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753951\",\n\t        \"ourReference\" : \"11223344\",\n\t        \"tradeName\" : \"BOA-SB Trade Name\",\n\t        \"companyName\" : \"BOA-SB Company Name\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"title\" : \"001\",\n\t        \t\"contactName\" : \"BOA-SB Contact Name\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:30:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "719"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Company Name\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000227\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": \"11223344\",\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Trade Name\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753951\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"001\",\n                \"contactName\": \"BOA-SB Contact Name\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB shortName\",\n            \"status\": \"023\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Patch Accounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 201;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"accounts\",\n        \"attributes\": {\n            \"status\": \"003\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}accounts/{{accountId}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}accounts"
									],
									"path": [
										"{{accountId}}"
									]
								},
								"description": "This call is the first step for onboarding and is **MANDATORY** to be created regardless of client level in the hierarchy. This API represents the main details of the client. For member level details (transacting merchant or lowest level in the hierarchy) this will include the unique merchant ID which stored in ourReference attribute of this request. \n\nA successful response will capture the ID of this merchants API resource such as the clientNumber and will be required on the succeeding API POST/PATCH calls for the following resources:\n\nPOST calls to:\n- /addresses\n- /merchantsAddendum\n- /merchantsAddendumUsa\n- /contracts\n- /settlementPackages\nPATCH to:\n- /merchants status for Application Processing\n\n**Important note:**\n\nFor merchant hierarchy onboarding, a top-down level approach should be followed such as Group level should be onboarded first followed by Sub-group level(s) and lastly the Member (transacting) level merchants. Please note that parent levels should be onboarded successfully (in ACTIVE status) before one can onboard the child level.\n\nEvery merchant pre-boarded to bankWORKS using WSM API will be marked with a specific status value of 023 (In Process), indicating that the merchant is not yet active in the system. After creation of the merchant followed by the related and required API resources for onboarding, the status of the merchant can be set to either 001 (Active) or 003 (Suspended) by sending a PATCH request to merchants API. Suspended status will only apply for member level merchants if needed.\n\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together. In this request, merchantId is assigned in order to be used to create related information of merchant in the succeeding calls."
							},
							"response": [
								{
									"name": "Top level - Group",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB Grp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB Grp test\",\n\t        \"companyName\" : \"BOA-SB Grp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB Grp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 10:58:49 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "707"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Grp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000228\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Grp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": null,\n                \"contactName\": \"BOA-SB Grp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB Grp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "Middle level - Subgroup merchant",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB SubGrp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB SubGrp test\",\n\t        \"companyName\" : \"BOA-SB SubGrp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB SubGrp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:36:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "720"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB SubGrp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000229\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB SubGrp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"000\",\n                \"contactName\": \"BOA-SB SubGrp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB SubGrp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "BOA-SB test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB shortName\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753951\",\n\t        \"ourReference\" : \"11223344\",\n\t        \"tradeName\" : \"BOA-SB Trade Name\",\n\t        \"companyName\" : \"BOA-SB Company Name\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"title\" : \"001\",\n\t        \t\"contactName\" : \"BOA-SB Contact Name\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:30:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "719"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Company Name\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000227\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": \"11223344\",\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Trade Name\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753951\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"001\",\n                \"contactName\": \"BOA-SB Contact Name\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB shortName\",\n            \"status\": \"023\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Post Future Effective Contracts",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 201;"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"contracts\",\n        \"attributes\": {\n        \t\"status\" : \"002\",\n            \"clientTariff\": \"005001\",\n            \"clientScheme\": \"000000\",\n            \"clientLevel\": \"001\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"150000\",\n            \"effectiveDate\" : \"2020-03-06\"\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"type\": \"merchants\",\n                    \"id\": \"{{merchantId}}\"\n                }\n            },\n            \"contractDefinition\": {\n                \"data\": {\n                    \"type\": \"contractDefinitions\",\n                    \"id\": \"serviceContractId=051\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
									]
								},
								"description": "This will create a contract resource for a new client and is **MANDATORY** to be created regardless of client level. Creation of new contracts is not possible following client onboarding. Can be used to create future effective changes to a current contract record. \n\n**IMPORTANT NOTE:**\n\n*ATTRIBUTES:*\n\n- a top-down level approach creation below should be followed. The attribute **clientLevel** in this resource will need to be specified for each client level contract creation. Below are the available client levels available in BankWorks:\n\t- Group level: **002**\n\t- Subgroup level: **003**\n\t- Member level: **001**\n- **clientTariff** value can be retrieved from the list of **accountFeeDefinitions** or **serviceFeeDefinitions** prior this call\n- **transactionChargesTariff** value can be retrieved from **productChargeDefinitions** API prior this call\n\n*RELATIONSHIPS:*\n\n- **merchant** resource created should be associated in the relationships\n- **contractDefinition** is required in the relationship association as well for contract creation of **Group level** or **Standalone** merchants.\n- for creation of **Subgroup and Member level** contracts, **parentContracts** relationship should be associated instead of *contractDefinition* from the example request. Contract ID of the parent will need to be passed in this relationship.\n\t```\n\t\"parentContracts\" : {\n\t\t\"data\" : {\n\t\t\t\"type\" : \"contracts\",\n\t\t\t\"id\" : \"{{parentContractId}}\"\n\t\t}\n\t}\n\t```"
							},
							"response": [
								{
									"name": "BOA-SB contract test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"000003\",\n            \"clientLevel\": \"001\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"{{transactionChargesTariff}}\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n    \t\t\"contractDefinition\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"contractDefinitions\",\n\t    \t\t\t\"id\" : \"{{contractDefinitionId}}\"\n\t    \t\t}\n\t    \t}\n\t    }\n    }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:42:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "673"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227&groupNumber=00000014&effectiveDate=2019-03-25&clientLevel=001\",\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"tierGroup\": null,\n            \"clientLevel\": \"001\",\n            \"clientTariff\": \"000001\",\n            \"settlementMethod\": \"030\",\n            \"groupNumber\": \"00000014\",\n            \"chargeTierLevel\": null,\n            \"bankReference\": null,\n            \"clientScheme\": \"000003\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"contractReference\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"status\": null,\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"000001\"\n        },\n        \"relationships\": {\n            \"contractDefinition\": {\n                \"data\": {\n                    \"id\": \"serviceContractId=051\",\n                    \"type\": \"contractDefinitions\"\n                }\n            },\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000227\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								},
								{
									"name": "Subgroup client contract",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"000003\",\n            \"clientLevel\": \"003\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"{{transactionChargesTariff}}\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n    \t\t  \"parentContracts\" : {\n\t\t\t      \"data\" : {\n\t\t\t          \"type\" : \"contracts\",\n\t\t\t          \"id\" : \"{{parentContractId}}\"\n\t\t\t      }\n\t\t\t  }\n\t    }\n    }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:41:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "724"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=003\",\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"tierGroup\": null,\n            \"clientLevel\": \"003\",\n            \"clientTariff\": \"000001\",\n            \"settlementMethod\": \"030\",\n            \"groupNumber\": \"00000016\",\n            \"chargeTierLevel\": null,\n            \"bankReference\": null,\n            \"clientScheme\": \"000003\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"contractReference\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"status\": null,\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"000001\"\n        },\n        \"relationships\": {\n            \"parentContracts\": {\n                \"data\": [\n                    {\n                        \"id\": \"clientNumber=00000228&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=002\",\n                        \"type\": \"contracts\"\n                    }\n                ]\n            },\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000229\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								},
								{
									"name": "Group level client contract",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"000003\",\n            \"clientLevel\": \"002\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"{{transactionChargesTariff}}\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n    \t\t\"contractDefinition\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"contractDefinitions\",\n\t    \t\t\t\"id\" : \"{{contractDefinitionId}}\"\n\t    \t\t}\n\t    \t}\n\t    }\n    }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:06:29 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "673"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=002\",\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"tierGroup\": null,\n            \"clientLevel\": \"002\",\n            \"clientTariff\": \"000001\",\n            \"settlementMethod\": \"030\",\n            \"groupNumber\": \"00000016\",\n            \"chargeTierLevel\": null,\n            \"bankReference\": null,\n            \"clientScheme\": \"000003\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"contractReference\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"status\": null,\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"000001\"\n        },\n        \"relationships\": {\n            \"contractDefinition\": {\n                \"data\": {\n                    \"id\": \"serviceContractId=051\",\n                    \"type\": \"contractDefinitions\"\n                }\n            },\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000228\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Patch Future Effective Contracts",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 200;",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\t\n    \"data\": {\n        \"type\": \"contracts\",\n        \"attributes\": {\n        \t\"status\" : \"003\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts/{{contractId}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
									],
									"path": [
										"{{contractId}}"
									]
								},
								"description": "This will create a contract resource for a new client and is **MANDATORY** to be created regardless of client level. Creation of new contracts is not possible following client onboarding. Can be used to create future effective changes to a current contract record. \n\n**IMPORTANT NOTE:**\n\n*ATTRIBUTES:*\n\n- a top-down level approach creation below should be followed. The attribute **clientLevel** in this resource will need to be specified for each client level contract creation. Below are the available client levels available in BankWorks:\n\t- Group level: **002**\n\t- Subgroup level: **003**\n\t- Member level: **001**\n- **clientTariff** value can be retrieved from the list of **accountFeeDefinitions** or **serviceFeeDefinitions** prior this call\n- **transactionChargesTariff** value can be retrieved from **productChargeDefinitions** API prior this call\n\n*RELATIONSHIPS:*\n\n- **merchant** resource created should be associated in the relationships\n- **contractDefinition** is required in the relationship association as well for contract creation of **Group level** or **Standalone** merchants.\n- for creation of **Subgroup and Member level** contracts, **parentContracts** relationship should be associated instead of *contractDefinition* from the example request. Contract ID of the parent will need to be passed in this relationship.\n\t```\n\t\"parentContracts\" : {\n\t\t\"data\" : {\n\t\t\t\"type\" : \"contracts\",\n\t\t\t\"id\" : \"{{parentContractId}}\"\n\t\t}\n\t}\n\t```"
							},
							"response": [
								{
									"name": "Group level client contract",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"000003\",\n            \"clientLevel\": \"002\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"{{transactionChargesTariff}}\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n    \t\t\"contractDefinition\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"contractDefinitions\",\n\t    \t\t\t\"id\" : \"{{contractDefinitionId}}\"\n\t    \t\t}\n\t    \t}\n\t    }\n    }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:06:29 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "673"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=002\",\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"tierGroup\": null,\n            \"clientLevel\": \"002\",\n            \"clientTariff\": \"000001\",\n            \"settlementMethod\": \"030\",\n            \"groupNumber\": \"00000016\",\n            \"chargeTierLevel\": null,\n            \"bankReference\": null,\n            \"clientScheme\": \"000003\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"contractReference\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"status\": null,\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"000001\"\n        },\n        \"relationships\": {\n            \"contractDefinition\": {\n                \"data\": {\n                    \"id\": \"serviceContractId=051\",\n                    \"type\": \"contractDefinitions\"\n                }\n            },\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000228\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								},
								{
									"name": "BOA-SB contract test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"000003\",\n            \"clientLevel\": \"001\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"{{transactionChargesTariff}}\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n    \t\t\"contractDefinition\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"contractDefinitions\",\n\t    \t\t\t\"id\" : \"{{contractDefinitionId}}\"\n\t    \t\t}\n\t    \t}\n\t    }\n    }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:42:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "673"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227&groupNumber=00000014&effectiveDate=2019-03-25&clientLevel=001\",\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"tierGroup\": null,\n            \"clientLevel\": \"001\",\n            \"clientTariff\": \"000001\",\n            \"settlementMethod\": \"030\",\n            \"groupNumber\": \"00000014\",\n            \"chargeTierLevel\": null,\n            \"bankReference\": null,\n            \"clientScheme\": \"000003\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"contractReference\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"status\": null,\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"000001\"\n        },\n        \"relationships\": {\n            \"contractDefinition\": {\n                \"data\": {\n                    \"id\": \"serviceContractId=051\",\n                    \"type\": \"contractDefinitions\"\n                }\n            },\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000227\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								},
								{
									"name": "Subgroup client contract",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"000003\",\n            \"clientLevel\": \"003\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"{{transactionChargesTariff}}\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n    \t\t  \"parentContracts\" : {\n\t\t\t      \"data\" : {\n\t\t\t          \"type\" : \"contracts\",\n\t\t\t          \"id\" : \"{{parentContractId}}\"\n\t\t\t      }\n\t\t\t  }\n\t    }\n    }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:41:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "724"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=003\",\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"tierGroup\": null,\n            \"clientLevel\": \"003\",\n            \"clientTariff\": \"000001\",\n            \"settlementMethod\": \"030\",\n            \"groupNumber\": \"00000016\",\n            \"chargeTierLevel\": null,\n            \"bankReference\": null,\n            \"clientScheme\": \"000003\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"contractReference\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"status\": null,\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"000001\"\n        },\n        \"relationships\": {\n            \"parentContracts\": {\n                \"data\": [\n                    {\n                        \"id\": \"clientNumber=00000228&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=002\",\n                        \"type\": \"contracts\"\n                    }\n                ]\n            },\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000229\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Post Future Effective Services",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 201;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"services\",\r\n    \"attributes\" : {\r\n    \t\"effectiveDate\" : \"2021-03-07\",\r\n    \t\"status\" : \"002\"\r\n    },\r\n    \"relationships\": {\r\n      \"serviceDefinitions\": {\r\n        \"data\": [\r\n\t        {\r\n\t          \"type\": \"serviceDefinitions\",\r\n\t          \"id\": \"{{serviceId}}\"\r\n\t        }\r\n        ]\r\n      },\r\n      \"contracts\": {\r\n        \"data\": [\r\n          {\r\n            \"type\": \"contracts\",\r\n            \"id\": \"{{currentContractId}}\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}services",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}services"
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Patch Future Effective Services",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 200;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"services\",\r\n    \"attributes\" : {\r\n    \t\"status\" : \"002\"\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}services/{{serviceId}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}services"
									],
									"path": [
										"{{serviceId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GETs",
					"item": [
						{
							"name": "MISC | Get Merchants",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}merchants/clientNumber=00100779?include=contracts,accounts,addresses,settlementPackages&include[contracts]=services",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}merchants"
									],
									"path": [
										"clientNumber=00100779"
									],
									"query": [
										{
											"key": "include",
											"value": "contracts,accounts,addresses,settlementPackages"
										},
										{
											"key": "include[contracts]",
											"value": "services"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get Addresses",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}addresses/clientNumber=10101009&addressCategory=001&effectiveDate=2020-08-31",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}addresses"
									],
									"path": [
										"clientNumber=10101009&addressCategory=001&effectiveDate=2020-08-31"
									],
									"query": [
										{
											"key": "id",
											"value": "accountNumber=97997227001",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get Accounts",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}accounts/accountNumber=97997225002",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}accounts"
									],
									"path": [
										"accountNumber=97997225002"
									],
									"query": [
										{
											"key": "id",
											"value": "accountNumber=97997227001",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get Contracts",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}accounts/accountNumber=97997225002",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}accounts"
									],
									"path": [
										"accountNumber=97997225002"
									],
									"query": [
										{
											"key": "id",
											"value": "accountNumber=97997227001",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get Services",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}serviceDefinitions?filter[serviceContractId]=112&filter[cardBrand]=999",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}serviceDefinitions"
									],
									"query": [
										{
											"key": "filter[serviceContractId]",
											"value": "112"
										},
										{
											"key": "filter[cardBrand]",
											"value": "999"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Global Variables & Authorisations",
					"item": [
						{
							"name": "Environment and Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//Clear any variables here",
											"//postman.clearEnvironmentVariable(\"variable_name\");",
											"",
											"//Clear All Variables",
											"//pm.environment.clear();",
											"//pm.globals.clear();"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// To switch environments, ensure you have access to postman-echo.com.\r",
											"// To set login credentials, select an username and password.\r",
											"// CTRL + / to comment and uncomment\r",
											"\r",
											"\r",
											"// BW3 Environments\r",
											"pm.environment.set(\"hostName\", \"amd_temp-rs2sp-web02.rs2.com/\");\r",
											"// pm.environment.set(\"hostName\", \"pd_cr-rs2sp-web02.rs2.com/\");\r",
											"// pm.environment.set(\"hostName\", \"pd_ir-rs2sp-web02.rs2.com/\");\r",
											"// pm.environment.set(\"hostName\", \"unit_cr-rs2sp-web02.rs2.com/\");\r",
											"// pm.environment.set(\"hostName\", \"unit_ir-rs2sp-web02.rs2.com/\");\r",
											"// pm.environment.set(\"hostName\", \"prod-rs2sp-web02.rs2.com/\");\r",
											"// pm.environment.set(\"hostName\", \"rel_even-rs2sp-web02.rs2.com/\");\r",
											"// pm.environment.set(\"hostName\", \"rel_odd-rs2sp-web02.rs2.com/\");\r",
											"// pm.environment.set(\"hostName\", \"psf-mvr_temp.rs2.com/\");\r",
											"// pm.environment.set(\"hostName\", \"test1-test-web1.bw-sp.com/\");\r",
											"pm.environment.set(\"hostName\", \"test2-test-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"test3-test-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"test4-test-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"test5-test-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"test6-test-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"test7-test-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"test8-test-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"test9-test-web1.bw-sp.com/\");\r",
											"\r",
											"// Authorisation\r",
											"pm.environment.set(\"contextRoot\", \"wsm/\");\r",
											"pm.environment.set(\"serviceName\", \"oauth2/token\");\r",
											"\r",
											"// Non-Authorisation\r",
											"// pm.environment.set(\"contextRoot\", \"wsm/\");\r",
											"// pm.environment.set(\"serviceName\", \"jsonapi\");\r",
											"\r",
											"// Users and Passwords - SYS_USER_INFORMATION\r",
											"// Generic - Paysafe\r",
											"// pm.environment.set(\"username\", \"paysafe-eu-api\");\r",
											"// pm.environment.set(\"password\", \"Enigma.1234\");\r",
											"\r",
											"// Paysafe - TEST_2\r",
											"pm.environment.set(\"username\", \"paysafe-eu-api\");\r",
											"pm.environment.set(\"password\", \"PS_Test2!\");\r",
											"\r",
											"\r",
											"// Generic - BOJ\r",
											"// pm.environment.set(\"username\", \"bojrs2\");\r",
											"// pm.environment.set(\"password\", \"BojNewPass!67\");\r",
											"// Generic - MVR\r",
											"// pm.environment.set(\"username\", \"movilred-client\");\r",
											"// pm.environment.set(\"password\", \"Enigma.1234\");\r",
											"// Generic - Paysafe EU\r",
											"// pm.environment.set(\"username\", \"paysafe-eu-api\");\r",
											"// pm.environment.set(\"password\", \"Enigma.12345\");\r",
											"// Generic - Paysafe UK\r",
											"// pm.environment.set(\"username\", \"paysafe-uk-api\");\r",
											"// pm.environment.set(\"password\", \"Enigma.1234\");\r",
											"// Generic - CRB\r",
											"// pm.environment.set(\"username\", \"crb-api\");\r",
											"// pm.environment.set(\"password\", \"Enigma.1234\");\r",
											"// Generic - BNZ\r",
											"// pm.environment.set(\"username\", \"bnz-api\");\r",
											"// pm.environment.set(\"password\", \"Enigma.1234\");\r",
											"// Generic - Tranzilla\r",
											"// pm.environment.set(\"username\", \"tranzila-api\");\r",
											"// pm.environment.set(\"password\", \"Enigma1!\");\r",
											"// More Environments\r",
											"// pm.environment.set(\"username\", \"\");\r",
											"// pm.environment.set(\"password\", \"\");\r",
											"\r",
											"// Merchant Portal\r",
											"\r",
											"// WARP Environments\r",
											"// pm.environment.set(\"hostName\", \"psf-mvr_temp.rs2.com/\");\r",
											"// pm.environment.set(\"hostName\", \"psf-test1-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"psf-test1-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"psf-test2-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"psf-test3-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"psf-test4-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"psf-test5-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"psf-test9-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"crb-test4-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"crb-test5-web1.bw-sp.com/\");\r",
											"// pm.environment.set(\"hostName\", \"b1-demo.warpappsrv.rs2.com/\");\r",
											"\r",
											"// Authorisation\r",
											"// pm.environment.set(\"contextRoot\", \"wsm/\");\r",
											"// pm.environment.set(\"serviceName\", \"oauth2/token\");\r",
											"\r",
											"// Non-Authorisation\r",
											"// pm.environment.set(\"contentRoot\", \"generic-module-loader/\");\r",
											"// pm.environment.set(\"serviceName\", \"\");\r",
											"//Add a new variable for install in the URL after serviceName\r",
											"// pm.environment.set(\"install\", \"data/bundleManager/installBundle\");\r",
											"\r",
											"// De/activating Bundles\r",
											"// pm.environment.set(\"contextRoot\", \"wsm/\");\r",
											"// pm.environment.set(\"serviceName\", \"\");\r",
											"//Add a new variable for bundles in the URL after serviceName\r",
											"// pm.environment.set(\"bundles\", \"jsonapi/bundles/com.rs2.warp.frontend.BUNDLENAME\");\r",
											"\r",
											"// Users and Passwords - CPS_USER_INFORMATION\r",
											"// Generic - Paysafe EU\r",
											"// pm.environment.set(\"username\", \"paysafe-eu-mp\");\r",
											"// pm.environment.set(\"password\", \"xxxxxxxx\");\r",
											"// Generic - Paysafe UK\r",
											"// pm.environment.set(\"username\", \"paysafe-uk-mp\");\r",
											"// pm.environment.set(\"password\", \"xxxxxxxx\");\r",
											"// Generic - CRB\r",
											"// pm.environment.set(\"username\", \"crb-mp\");\r",
											"// pm.environment.set(\"password\", \"xxxxxxxx\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "postman-echo.com/ping",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"ping"
									]
								}
							},
							"response": []
						},
						{
							"name": "Access Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for a successful status code",
											"tests[\"Status Code 200\"] = responseCode.code === 200;",
											"",
											"// Parse response body",
											"var data = JSON.parse(responseBody);",
											"",
											"// Test for the presence of an access token",
											"tests[\"Valid Access Token\"] = data.access_token !== null && data.access_token !== \"\";",
											"",
											"// Test for the presence of an refresh token",
											"tests[\"Valid Refresh Token\"] = data.refresh_token !== null && data.refresh_token !== \"\";",
											"",
											"// Test for a valid token type",
											"tests[\"Valid Token Type\"] = data.token_type === \"bearer\";",
											"",
											"// Test teardown: Set global variables",
											"pm.environment.set(\"token\", \"Bearer \" + data.access_token);",
											"pm.environment.set(\"refresh_token\", data.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change User Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"password\", \"Rs2Adm1n!\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"newPassword\":\"Rs2Adm1n!\"\r\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}api/user-management/userpassword",
									"host": [
										"{{hostName}}{{contextRoot}}api"
									],
									"path": [
										"user-management",
										"userpassword"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Merchant Boarding Single Request",
					"item": [
						{
							"name": "Merchant Boarding (Single Request)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}merchants/clientNumber=00100779?include=contracts,accounts,addresses,settlementPackages&include[contracts]=services",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}merchants"
									],
									"path": [
										"clientNumber=00100779"
									],
									"query": [
										{
											"key": "include",
											"value": "contracts,accounts,addresses,settlementPackages"
										},
										{
											"key": "include[contracts]",
											"value": "services"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Single Merchant Request - Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 201;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"    if (pm.environment.get(\"broker\") === null || pm.environment.get(\"broker\") === false || pm.environment.get(\"broker\") === undefined) {",
											"        pm.environment.set(\"client\", \"merchants\");",
											"        pm.environment.set(\"processingRegion\", \"\\\"processingRegion\\\": \\\"000\\\",\");",
											"        pm.environment.set(\"serviceTelephone\", \"\\\"serviceTelephone\\\":\\\"9898989898\\\",\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"client\", \"brokers\");",
											"        pm.environment.set(\"processingRegion\", \"\");",
											"        pm.environment.set(\"serviceTelephone\", \"\");",
											"    }",
											"    ",
											"    if (pm.environment.get(\"institutionNumber\") !== \"00000200\") {",
											"        pm.environment.set(\"ourReference\", pm.environment.get(\"clientNumber\"));",
											"    }",
											"    ",
											"    if (pm.environment.get(\"legalForm\") === null || pm.environment.get(\"legalForm\") === false || pm.environment.get(\"legalForm\") === undefined) {",
											"        pm.environment.set(\"legalForm\", \"001\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"legalForm\", pm.environment.get(\"legalForm\"));",
											"    }",
											"    ",
											"    var account = pm.environment.get(\"myAccounts\");",
											"    var x = Number(pm.environment.get(\"acctCounter\"));",
											"    pm.environment.set(\"currency\", JSON.stringify(pm.environment.get(\"myAccounts\")[pm.environment.get(\"acctCounter\")]).split(\"&\")[1].split(\"=\")[1]);",
											"    if (pm.environment.has(\"fundingClientNumber\") === true && pm.environment.get(\"fundingClientNumber\") !== null) {",
											"    \tpm.environment.set(\"funding\", \"\\\"fundingClient\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"fundingClients\\\", \\r \\\"id\\\": \\\"clientNumber={{fundingClientNumber}}\\\"\\r}\\r},\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"funding\", \"\");",
											"    }",
											"    if (pm.environment.get(\"institutionNumber\") !== \"00000108\" && pm.environment.get(\"institutionNumber\") !== \"00000106\") {",
											"        pm.environment.set(\"merchantTranTariff\", \"\\\"transactionChargesTariff\\\" : \\\"{{transactionChargesTariff}}\\\",\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"merchantTranTariff\", \"\");",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"merchantApplications\",\n        \"attributes\": {\n            \"merchant\": {\n                \"clientNumber\": \"10103020\",\n                \"ourReference\": \"{{ourReference}}\",\n                \"clientType\": \"{{clientType}}\",\n                \"firstName\": \"Max\",\n                \"lastName\": \"IsAwesome\",\n                \"registrationNumber\": \"123456\",\n                \"businessClass\": \"{{MCC}}\",\n                \"domesticMcc\": \"{{DMCC}}\",\n                \"shortName\": \"Max Test API\",\n                \"language\": \"001\",\n                \"legalForm\": \"{{legalForm}}\",\n                \"vatRegistrationNumber\": \"BG123 122 1231\",\n                \"tradeName\": \"Drugs\",\n                \"companyName\": \"MaxAPI\",\n                \"eCommerceIndicator\": \"002\",\n                \"taxCountry\": \"{{country}}\",\n                {{processingRegion}}\n                \"mainContactDetails\": {\n                    \"contactName\": \"Max\"\n                },\n                \"middleName\": \"Middle Bill\",\n                \"merchantAddendum\": {\n                    \"feeProgramIndicator\": \"001\",\n                    \"seasonalMerchant\": \"001\",\n                    \"mastercardInterchangeProgram\": \"418587\",\n                    \"mastercardInterchangeProgramQualification\": \"005\"\n                },\n                \"addresses\": [\n                    {\n                        \"addressCategory\": \"001\",\n                        \"addressLine1\": \"Address\",\n                        \"addressLine2\": \"Main Street\",\n                        \"addressLine3\": \"Main Place\",\n                        \"addressLine4\": \"Main Block\",\n                        \"addressLine5\": \"Block 5, Apartment 1\",\n                        \"city\": \"City Name\",\n                        \"postCode\": \"6010\",\n                        \"country\": \"{{country}}\",\n                        \"telephone1\": \"123456\",\n                        \"telephone2\": \"234567\",\n                        \"faxWork\": \"345678\",\n                        \"deliveryMethod\": \"{{deliveryMethod}}\",\n                        \"emailAddress\": \"email@rs2.com\",\n                        \"contactName\": \"Max\"\n                    },\n                    {\n                        \"addressCategory\": \"022\",\n                        \"addressLine1\": \"Address\",\n                        \"addressLine2\": \"Main Street\",\n                        \"addressLine3\": \"Main Place\",\n                        \"addressLine4\": \"Main Block\",\n                        \"addressLine5\": \"Block 5, Apartment 1\",\n                        \"city\": \"City Name\",\n                        \"postCode\": \"6010\",\n                        \"country\": \"{{country}}\",\n                        \"telephone1\": \"123456\",\n                        \"telephone2\": \"234567\",\n                        \"faxWork\": \"345678\",\n                        \"deliveryMethod\": \"{{deliveryMethod}}\",\n                        \"emailAddress\": \"email@rs2.com\",\n                        \"contactName\": \"Max\"\n                    }\n                ],\n                \"contracts\": [\n                    {\n                        \"clientTariff\": \"{{clientTariff}}\",\n                        \"clientScheme\": \"{{clientScheme}}\",\n                        \"clientLevel\": \"{{clientLevel}}\",\n                        \"settlementMethod\": \"{{settlementMethod}}\",\n                        \"clientBranch\": \"000\",\n                        \"institutionAccountOfficer\": \"000\",\n                        \"postingMethod\": \"{{postingMethod}}\",\n                        \"transactionChargesTariff\": \"001246\",\n                        \"contractDefinition\": {\n                            \"id\": \"serviceContractId=112\"\n                        }\n                    }\n                ],\n                \"settlementPackages\": [\n                    {\n                        \"settlementCategory\": \"002\",\n                        \"bankClearingNumber\": \"{{bankClearingNumber}}\",\n                        \"bankTelNumber\": \"1236547890\",\n                        \"paymentReference\": \"PR_665522KT\",\n                        \"paymentMethod\": \"002\",\n                        \"accountCurrency\": \"{{currency}}\",\n                        \"contingencyLiabilityAccount\": \"\",\n                        \"correspondingBankAccount\": \"84783403\",\n                        \"correspondingBankNumber\": \"00000000030080508568\",\n                        \"receiverCountryCode\": \"{{country}}\",\n                        \"noteText\": \"Max Testing\",\n                        \"payableDetails\": {\n                            \"counterBankAccount\": \"30345677\",\n                            \"confirmationMethod\": \"003\",\n                            \"bankContactName\": \"BANK_CONTACT_NAME\",\n                            \"counterBankCity\": \"Count Bank City\"\n                        },\n                        \"accounts\": [\n                            {\n                                \"clientAccountName\": \"Test Account\",\n                                \"accountDefinition\": {\n                                    \"id\": \"accountTypeId=012&accountCurrency=EUR&serviceContractId=112\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "http://localhost:26000/{{contextRoot}}{{serviceName}}merchantApplications",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "26000",
									"path": [
										"{{contextRoot}}{{serviceName}}merchantApplications"
									]
								},
								"description": "This call is the first step for onboarding and is **MANDATORY** to be created regardless of client level in the hierarchy. This API represents the main details of the client. For member level details (transacting merchant or lowest level in the hierarchy) this will include the unique merchant ID which stored in ourReference attribute of this request. \n\nA successful response will capture the ID of this merchants API resource such as the clientNumber and will be required on the succeeding API POST/PATCH calls for the following resources:\n\nPOST calls to:\n- /addresses\n- /merchantsAddendum\n- /merchantsAddendumUsa\n- /contracts\n- /settlementPackages\nPATCH to:\n- /merchants status for Application Processing\n\n**Important note:**\n\nFor merchant hierarchy onboarding, a top-down level approach should be followed such as Group level should be onboarded first followed by Sub-group level(s) and lastly the Member (transacting) level merchants. Please note that parent levels should be onboarded successfully (in ACTIVE status) before one can onboard the child level.\n\nEvery merchant pre-boarded to bankWORKS using WSM API will be marked with a specific status value of 023 (In Process), indicating that the merchant is not yet active in the system. After creation of the merchant followed by the related and required API resources for onboarding, the status of the merchant can be set to either 001 (Active) or 003 (Suspended) by sending a PATCH request to merchants API. Suspended status will only apply for member level merchants if needed.\n\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together. In this request, merchantId is assigned in order to be used to create related information of merchant in the succeeding calls."
							},
							"response": [
								{
									"name": "BOA-SB test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB shortName\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753951\",\n\t        \"ourReference\" : \"11223344\",\n\t        \"tradeName\" : \"BOA-SB Trade Name\",\n\t        \"companyName\" : \"BOA-SB Company Name\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"title\" : \"001\",\n\t        \t\"contactName\" : \"BOA-SB Contact Name\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:30:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "719"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Company Name\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000227\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": \"11223344\",\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Trade Name\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753951\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"001\",\n                \"contactName\": \"BOA-SB Contact Name\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB shortName\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "Top level - Group",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB Grp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB Grp test\",\n\t        \"companyName\" : \"BOA-SB Grp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB Grp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 10:58:49 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "707"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Grp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000228\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Grp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": null,\n                \"contactName\": \"BOA-SB Grp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB Grp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "Middle level - Subgroup merchant",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB SubGrp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB SubGrp test\",\n\t        \"companyName\" : \"BOA-SB SubGrp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB SubGrp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:36:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "720"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB SubGrp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000229\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB SubGrp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"000\",\n                \"contactName\": \"BOA-SB SubGrp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB SubGrp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Single Merchant Request - Group Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 201;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"    if (pm.environment.get(\"broker\") === null || pm.environment.get(\"broker\") === false || pm.environment.get(\"broker\") === undefined) {",
											"        pm.environment.set(\"client\", \"merchants\");",
											"        pm.environment.set(\"processingRegion\", \"\\\"processingRegion\\\": \\\"000\\\",\");",
											"        pm.environment.set(\"serviceTelephone\", \"\\\"serviceTelephone\\\":\\\"9898989898\\\",\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"client\", \"brokers\");",
											"        pm.environment.set(\"processingRegion\", \"\");",
											"        pm.environment.set(\"serviceTelephone\", \"\");",
											"    }",
											"    ",
											"    if (pm.environment.get(\"institutionNumber\") !== \"00000200\") {",
											"        pm.environment.set(\"ourReference\", pm.environment.get(\"clientNumber\"));",
											"    }",
											"    ",
											"    if (pm.environment.get(\"legalForm\") === null || pm.environment.get(\"legalForm\") === false || pm.environment.get(\"legalForm\") === undefined) {",
											"        pm.environment.set(\"legalForm\", \"001\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"legalForm\", pm.environment.get(\"legalForm\"));",
											"    }",
											"    ",
											"    var account = pm.environment.get(\"myAccounts\");",
											"    var x = Number(pm.environment.get(\"acctCounter\"));",
											"    pm.environment.set(\"currency\", JSON.stringify(pm.environment.get(\"myAccounts\")[pm.environment.get(\"acctCounter\")]).split(\"&\")[1].split(\"=\")[1]);",
											"    if (pm.environment.has(\"fundingClientNumber\") === true && pm.environment.get(\"fundingClientNumber\") !== null) {",
											"    \tpm.environment.set(\"funding\", \"\\\"fundingClient\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"fundingClients\\\", \\r \\\"id\\\": \\\"clientNumber={{fundingClientNumber}}\\\"\\r}\\r},\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"funding\", \"\");",
											"    }",
											"    if (pm.environment.get(\"institutionNumber\") !== \"00000108\" && pm.environment.get(\"institutionNumber\") !== \"00000106\") {",
											"        pm.environment.set(\"merchantTranTariff\", \"\\\"transactionChargesTariff\\\" : \\\"{{transactionChargesTariff}}\\\",\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"merchantTranTariff\", \"\");",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"merchantApplications\",\n        \"attributes\": {\n            \"merchant\": {\n                \"clientNumber\": \"10103020\",\n                \"ourReference\": \"{{ourReference}}\",\n                \"clientType\": \"{{clientType}}\",\n                \"firstName\": \"Max\",\n                \"lastName\": \"IsAwesome\",\n                \"registrationNumber\": \"123456\",\n                \"businessClass\": \"{{MCC}}\",\n                \"domesticMcc\": \"{{DMCC}}\",\n                \"shortName\": \"Max Test API\",\n                \"language\": \"001\",\n                \"legalForm\": \"{{legalForm}}\",\n                \"vatRegistrationNumber\": \"BG123 122 1231\",\n                \"tradeName\": \"Drugs\",\n                \"companyName\": \"MaxAPI\",\n                \"eCommerceIndicator\": \"002\",\n                \"taxCountry\": \"{{country}}\",\n                {{processingRegion}}\n                \"mainContactDetails\": {\n                    \"contactName\": \"Max\"\n                },\n                \"middleName\": \"Middle Bill\",\n                \"merchantAddendum\": {\n                    \"feeProgramIndicator\": \"001\",\n                    \"seasonalMerchant\": \"001\",\n                    \"mastercardInterchangeProgram\": \"418587\",\n                    \"mastercardInterchangeProgramQualification\": \"005\"\n                },\n                \"addresses\": [\n                    {\n                        \"addressCategory\": \"001\",\n                        \"addressLine1\": \"Address\",\n                        \"addressLine2\": \"Main Street\",\n                        \"addressLine3\": \"Main Place\",\n                        \"addressLine4\": \"Main Block\",\n                        \"addressLine5\": \"Block 5, Apartment 1\",\n                        \"city\": \"City Name\",\n                        \"postCode\": \"6010\",\n                        \"country\": \"{{country}}\",\n                        \"telephone1\": \"123456\",\n                        \"telephone2\": \"234567\",\n                        \"faxWork\": \"345678\",\n                        \"deliveryMethod\": \"{{deliveryMethod}}\",\n                        \"emailAddress\": \"email@rs2.com\",\n                        \"contactName\": \"Max\"\n                    },\n                    {\n                        \"addressCategory\": \"022\",\n                        \"addressLine1\": \"Address\",\n                        \"addressLine2\": \"Main Street\",\n                        \"addressLine3\": \"Main Place\",\n                        \"addressLine4\": \"Main Block\",\n                        \"addressLine5\": \"Block 5, Apartment 1\",\n                        \"city\": \"City Name\",\n                        \"postCode\": \"6010\",\n                        \"country\": \"{{country}}\",\n                        \"telephone1\": \"123456\",\n                        \"telephone2\": \"234567\",\n                        \"faxWork\": \"345678\",\n                        \"deliveryMethod\": \"{{deliveryMethod}}\",\n                        \"emailAddress\": \"email@rs2.com\",\n                        \"contactName\": \"Max\"\n                    }\n                ],\n                \"contracts\": [\n                    {\n                        \"clientTariff\": \"{{clientTariff}}\",\n                        \"clientScheme\": \"{{clientScheme}}\",\n                        \"clientLevel\": \"{{clientLevel}}\",\n                        \"settlementMethod\": \"{{settlementMethod}}\",\n                        \"clientBranch\": \"000\",\n                        \"institutionAccountOfficer\": \"000\",\n                        \"postingMethod\": \"{{postingMethod}}\",\n                        \"transactionChargesTariff\": \"001246\",\n                        \"contractDefinition\": {\n                            \"id\": \"serviceContractId=112\"\n                        }\n                    }\n                ],\n                \"settlementPackages\": [\n                    {\n                        \"settlementCategory\": \"002\",\n                        \"bankClearingNumber\": \"{{bankClearingNumber}}\",\n                        \"bankTelNumber\": \"1236547890\",\n                        \"paymentReference\": \"PR_665522KT\",\n                        \"paymentMethod\": \"002\",\n                        \"accountCurrency\": \"{{currency}}\",\n                        \"contingencyLiabilityAccount\": \"\",\n                        \"correspondingBankAccount\": \"84783403\",\n                        \"correspondingBankNumber\": \"00000000030080508568\",\n                        \"receiverCountryCode\": \"{{country}}\",\n                        \"noteText\": \"Max Testing\",\n                        \"payableDetails\": {\n                            \"counterBankAccount\": \"30345677\",\n                            \"confirmationMethod\": \"003\",\n                            \"bankContactName\": \"BANK_CONTACT_NAME\",\n                            \"counterBankCity\": \"Count Bank City\"\n                        },\n                        \"accounts\": [\n                            {\n                                \"clientAccountName\": \"Test Account\",\n                                \"accountDefinition\": {\n                                    \"id\": \"accountTypeId=012&accountCurrency=EUR&serviceContractId=112\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "http://localhost:26000/{{contextRoot}}{{serviceName}}merchantApplications",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "26000",
									"path": [
										"{{contextRoot}}{{serviceName}}merchantApplications"
									]
								},
								"description": "This call is the first step for onboarding and is **MANDATORY** to be created regardless of client level in the hierarchy. This API represents the main details of the client. For member level details (transacting merchant or lowest level in the hierarchy) this will include the unique merchant ID which stored in ourReference attribute of this request. \n\nA successful response will capture the ID of this merchants API resource such as the clientNumber and will be required on the succeeding API POST/PATCH calls for the following resources:\n\nPOST calls to:\n- /addresses\n- /merchantsAddendum\n- /merchantsAddendumUsa\n- /contracts\n- /settlementPackages\nPATCH to:\n- /merchants status for Application Processing\n\n**Important note:**\n\nFor merchant hierarchy onboarding, a top-down level approach should be followed such as Group level should be onboarded first followed by Sub-group level(s) and lastly the Member (transacting) level merchants. Please note that parent levels should be onboarded successfully (in ACTIVE status) before one can onboard the child level.\n\nEvery merchant pre-boarded to bankWORKS using WSM API will be marked with a specific status value of 023 (In Process), indicating that the merchant is not yet active in the system. After creation of the merchant followed by the related and required API resources for onboarding, the status of the merchant can be set to either 001 (Active) or 003 (Suspended) by sending a PATCH request to merchants API. Suspended status will only apply for member level merchants if needed.\n\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together. In this request, merchantId is assigned in order to be used to create related information of merchant in the succeeding calls."
							},
							"response": [
								{
									"name": "BOA-SB test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB shortName\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753951\",\n\t        \"ourReference\" : \"11223344\",\n\t        \"tradeName\" : \"BOA-SB Trade Name\",\n\t        \"companyName\" : \"BOA-SB Company Name\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"title\" : \"001\",\n\t        \t\"contactName\" : \"BOA-SB Contact Name\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:30:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "719"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Company Name\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000227\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": \"11223344\",\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Trade Name\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753951\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"001\",\n                \"contactName\": \"BOA-SB Contact Name\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB shortName\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "Top level - Group",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB Grp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB Grp test\",\n\t        \"companyName\" : \"BOA-SB Grp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB Grp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 10:58:49 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "707"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Grp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000228\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Grp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": null,\n                \"contactName\": \"BOA-SB Grp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB Grp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "Middle level - Subgroup merchant",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB SubGrp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB SubGrp test\",\n\t        \"companyName\" : \"BOA-SB SubGrp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB SubGrp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:36:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "720"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB SubGrp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000229\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB SubGrp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"000\",\n                \"contactName\": \"BOA-SB SubGrp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB SubGrp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Single Merchant Request - Sub-Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 201;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"    if (pm.environment.get(\"broker\") === null || pm.environment.get(\"broker\") === false || pm.environment.get(\"broker\") === undefined) {",
											"        pm.environment.set(\"client\", \"merchants\");",
											"        pm.environment.set(\"processingRegion\", \"\\\"processingRegion\\\": \\\"000\\\",\");",
											"        pm.environment.set(\"serviceTelephone\", \"\\\"serviceTelephone\\\":\\\"9898989898\\\",\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"client\", \"brokers\");",
											"        pm.environment.set(\"processingRegion\", \"\");",
											"        pm.environment.set(\"serviceTelephone\", \"\");",
											"    }",
											"    ",
											"    if (pm.environment.get(\"institutionNumber\") !== \"00000200\") {",
											"        pm.environment.set(\"ourReference\", pm.environment.get(\"clientNumber\"));",
											"    }",
											"    ",
											"    if (pm.environment.get(\"legalForm\") === null || pm.environment.get(\"legalForm\") === false || pm.environment.get(\"legalForm\") === undefined) {",
											"        pm.environment.set(\"legalForm\", \"001\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"legalForm\", pm.environment.get(\"legalForm\"));",
											"    }",
											"    ",
											"    var account = pm.environment.get(\"myAccounts\");",
											"    var x = Number(pm.environment.get(\"acctCounter\"));",
											"    pm.environment.set(\"currency\", JSON.stringify(pm.environment.get(\"myAccounts\")[pm.environment.get(\"acctCounter\")]).split(\"&\")[1].split(\"=\")[1]);",
											"    if (pm.environment.has(\"fundingClientNumber\") === true && pm.environment.get(\"fundingClientNumber\") !== null) {",
											"    \tpm.environment.set(\"funding\", \"\\\"fundingClient\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"fundingClients\\\", \\r \\\"id\\\": \\\"clientNumber={{fundingClientNumber}}\\\"\\r}\\r},\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"funding\", \"\");",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"merchantApplications\",\n        \"attributes\": {\n            \"merchant\": {\n                \"clientNumber\": \"10103000\",\n                \"ourReference\": \"{{ourReference}}\",\n                \"clientType\": \"{{clientType}}\",\n                \"firstName\": \"Max\",\n                \"lastName\": \"IsAwesome\",\n                \"registrationNumber\": \"123456\",\n                \"businessClass\": \"{{MCC}}\",\n                \"domesticMcc\": \"{{DMCC}}\",\n                \"shortName\": \"Max Test API\",\n                \"language\": \"001\",\n                \"legalForm\": \"{{legalForm}}\",\n                \"vatRegistrationNumber\": \"BG123 122 1231\",\n                \"tradeName\": \"Drugs\",\n                \"companyName\": \"MaxAPI\",\n                \"eCommerceIndicator\": \"002\",\n                \"taxCountry\": \"{{country}}\",\n                {{processingRegion}}\n                \"mainContactDetails\": {\n                    \"contactName\": \"Max\"\n                },\n                \"middleName\": \"Middle Bill\"\n            },\n            \"merchantAddendum\": {\n                \"feeProgramIndicator\": \"001\",\n                \"seasonalMerchant\": \"001\",\n                \"mastercardInterchangeProgram\": \"418587\",\n                \"mastercardInterchangeProgramQualification\": \"005\"\n            },\n            \"addresses\": [\n                {\n                    \"addressCategory\": \"001\",\n                    \"addressLine1\": \"Address\",\n                    \"addressLine2\": \"Main Street\",\n                    \"addressLine3\": \"Main Place\",\n                    \"addressLine4\": \"Main Block\",\n                    \"addressLine5\": \"Block 5, Apartment 1\",\n                    \"city\": \"City Name\",\n                    \"postCode\": \"6010\",\n                    \"country\": \"{{country}}\",\n                    \"telephone1\": \"123456\",\n                    \"telephone2\": \"234567\",\n                    \"faxWork\": \"345678\",\n                    \"deliveryMethod\": \"{{deliveryMethod}}\",\n                    \"emailAddress\": \"email@rs2.com\",\n                    \"contactName\": \"Max\"\n                },\n                {\n                    \"addressCategory\": \"022\",\n                    \"addressLine1\": \"Address\",\n                    \"addressLine2\": \"Main Street\",\n                    \"addressLine3\": \"Main Place\",\n                    \"addressLine4\": \"Main Block\",\n                    \"addressLine5\": \"Block 5, Apartment 1\",\n                    \"city\": \"City Name\",\n                    \"postCode\": \"6010\",\n                    \"country\": \"{{country}}\",\n                    \"telephone1\": \"123456\",\n                    \"telephone2\": \"234567\",\n                    \"faxWork\": \"345678\",\n                    \"deliveryMethod\": \"{{deliveryMethod}}\",\n                    \"emailAddress\": \"email@rs2.com\",\n                    \"contactName\": \"Max\"\n                }\n            ],\n            \"contracts\": [\n                {\n                    \"clientTariff\": \"{{clientTariff}}\",\n                    \"clientScheme\": \"{{clientScheme}}\",\n                    \"clientLevel\": \"{{clientLevel}}\",\n                    \"settlementMethod\": \"{{settlementMethod}}\",\n                    \"clientBranch\": \"{{clientBranch}}\",\n                    \"institutionAccountOfficer\": \"000\",\n                    \"postingMethod\": \"{{postingMethod}}\",\n                    \"transactionChargesTariff\": \"{{merchantTranTariff}}\",\n                    \"contractDefinition\": {\n                        \"id\": \"serviceContractId=112\"\n                    }\n                }\n            ],\n            \"settlementPackages\": [\n                {\n                    \"settlementCategory\": \"002\",\n                    \"bankClearingNumber\": \"{{bankClearingNumber}}\",\n                    \"bankTelNumber\": \"1236547890\",\n                    \"paymentReference\": \"PR_665522KT\",\n                    \"paymentMethod\": \"002\",\n                    \"accountCurrency\": \"{{currency}}\",\n                    \"contingencyLiabilityAccount\": \"\",\n                    \"correspondingBankAccount\": \"84783403\",\n                    \"correspondingBankNumber\": \"00000000030080508568\",\n                    \"receiverCountryCode\": \"{{country}}\",\n                    \"noteText\": \"Max Testing\",\n                    \"payableDetails\": {\n                        \"counterBankAccount\": \"30345677\",\n                        \"confirmationMethod\": \"003\",\n                        \"bankContactName\": \"BANK_CONTACT_NAME\",\n                        \"counterBankCity\": \"Count Bank City\"\n                    }\n                },\n                \"accounts\": [\n                    {\n                        \"clientAccountName\": \"Test Account\",\n                        \"accountDefinition\": {\n                            \"id\": \"accountTypeId=012&accountCurrency=EUR&serviceContractId=112\"\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}\n}\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}merchantApplications",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}merchantApplications"
									]
								},
								"description": "This call is the first step for onboarding and is **MANDATORY** to be created regardless of client level in the hierarchy. This API represents the main details of the client. For member level details (transacting merchant or lowest level in the hierarchy) this will include the unique merchant ID which stored in ourReference attribute of this request. \n\nA successful response will capture the ID of this merchants API resource such as the clientNumber and will be required on the succeeding API POST/PATCH calls for the following resources:\n\nPOST calls to:\n- /addresses\n- /merchantsAddendum\n- /merchantsAddendumUsa\n- /contracts\n- /settlementPackages\nPATCH to:\n- /merchants status for Application Processing\n\n**Important note:**\n\nFor merchant hierarchy onboarding, a top-down level approach should be followed such as Group level should be onboarded first followed by Sub-group level(s) and lastly the Member (transacting) level merchants. Please note that parent levels should be onboarded successfully (in ACTIVE status) before one can onboard the child level.\n\nEvery merchant pre-boarded to bankWORKS using WSM API will be marked with a specific status value of 023 (In Process), indicating that the merchant is not yet active in the system. After creation of the merchant followed by the related and required API resources for onboarding, the status of the merchant can be set to either 001 (Active) or 003 (Suspended) by sending a PATCH request to merchants API. Suspended status will only apply for member level merchants if needed.\n\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together. In this request, merchantId is assigned in order to be used to create related information of merchant in the succeeding calls."
							},
							"response": [
								{
									"name": "BOA-SB test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB shortName\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753951\",\n\t        \"ourReference\" : \"11223344\",\n\t        \"tradeName\" : \"BOA-SB Trade Name\",\n\t        \"companyName\" : \"BOA-SB Company Name\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"title\" : \"001\",\n\t        \t\"contactName\" : \"BOA-SB Contact Name\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:30:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "719"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Company Name\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000227\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": \"11223344\",\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Trade Name\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753951\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"001\",\n                \"contactName\": \"BOA-SB Contact Name\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB shortName\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "Middle level - Subgroup merchant",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB SubGrp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB SubGrp test\",\n\t        \"companyName\" : \"BOA-SB SubGrp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB SubGrp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:36:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "720"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB SubGrp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000229\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB SubGrp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"000\",\n                \"contactName\": \"BOA-SB SubGrp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB SubGrp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "Top level - Group",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB Grp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB Grp test\",\n\t        \"companyName\" : \"BOA-SB Grp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB Grp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 10:58:49 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "707"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Grp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000228\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Grp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": null,\n                \"contactName\": \"BOA-SB Grp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB Grp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Single Merchant Request - Member",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 201;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"    if (pm.environment.get(\"broker\") === null || pm.environment.get(\"broker\") === false || pm.environment.get(\"broker\") === undefined) {",
											"        pm.environment.set(\"client\", \"merchants\");",
											"        pm.environment.set(\"processingRegion\", \"\\\"processingRegion\\\": \\\"000\\\",\");",
											"        pm.environment.set(\"serviceTelephone\", \"\\\"serviceTelephone\\\":\\\"9898989898\\\",\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"client\", \"brokers\");",
											"        pm.environment.set(\"processingRegion\", \"\");",
											"        pm.environment.set(\"serviceTelephone\", \"\");",
											"    }",
											"    ",
											"    if (pm.environment.get(\"institutionNumber\") !== \"00000200\") {",
											"        pm.environment.set(\"ourReference\", pm.environment.get(\"clientNumber\"));",
											"    }",
											"    ",
											"    if (pm.environment.get(\"legalForm\") === null || pm.environment.get(\"legalForm\") === false || pm.environment.get(\"legalForm\") === undefined) {",
											"        pm.environment.set(\"legalForm\", \"001\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"legalForm\", pm.environment.get(\"legalForm\"));",
											"    }",
											"    ",
											"    var account = pm.environment.get(\"myAccounts\");",
											"    var x = Number(pm.environment.get(\"acctCounter\"));",
											"    pm.environment.set(\"currency\", JSON.stringify(pm.environment.get(\"myAccounts\")[pm.environment.get(\"acctCounter\")]).split(\"&\")[1].split(\"=\")[1]);",
											"    if (pm.environment.has(\"fundingClientNumber\") === true && pm.environment.get(\"fundingClientNumber\") !== null) {",
											"    \tpm.environment.set(\"funding\", \"\\\"fundingClient\\\": \\r {\\\"data\\\": { \\r\\\"type\\\": \\\"fundingClients\\\", \\r \\\"id\\\": \\\"clientNumber={{fundingClientNumber}}\\\"\\r}\\r},\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"funding\", \"\");",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"merchantApplications\",\n        \"attributes\": {\n            \"merchant\": {\n                \"clientNumber\": \"10103000\",\n                \"ourReference\": \"{{ourReference}}\",\n                \"clientType\": \"{{clientType}}\",\n                \"firstName\": \"Max\",\n                \"lastName\": \"IsAwesome\",\n                \"registrationNumber\": \"123456\",\n                \"businessClass\": \"{{MCC}}\",\n                \"domesticMcc\": \"{{DMCC}}\",\n                \"shortName\": \"Max Test API\",\n                \"language\": \"001\",\n                \"legalForm\": \"{{legalForm}}\",\n                \"vatRegistrationNumber\": \"BG123 122 1231\",\n                \"tradeName\": \"Drugs\",\n                \"companyName\": \"MaxAPI\",\n                \"eCommerceIndicator\": \"002\",\n                \"taxCountry\": \"{{country}}\",\n                {{processingRegion}}\n                \"mainContactDetails\": {\n                    \"contactName\": \"Max\"\n                },\n                \"middleName\": \"Middle Bill\"\n            },\n            \"merchantAddendum\": {\n                \"feeProgramIndicator\": \"001\",\n                \"seasonalMerchant\": \"001\",\n                \"mastercardInterchangeProgram\": \"418587\",\n                \"mastercardInterchangeProgramQualification\": \"005\"\n            },\n            \"addresses\": [\n                {\n                    \"addressCategory\": \"001\",\n                    \"addressLine1\": \"Address\",\n                    \"addressLine2\": \"Main Street\",\n                    \"addressLine3\": \"Main Place\",\n                    \"addressLine4\": \"Main Block\",\n                    \"addressLine5\": \"Block 5, Apartment 1\",\n                    \"city\": \"City Name\",\n                    \"postCode\": \"6010\",\n                    \"country\": \"{{country}}\",\n                    \"telephone1\": \"123456\",\n                    \"telephone2\": \"234567\",\n                    \"faxWork\": \"345678\",\n                    \"deliveryMethod\": \"{{deliveryMethod}}\",\n                    \"emailAddress\": \"email@rs2.com\",\n                    \"contactName\": \"Max\"\n                },\n                {\n                    \"addressCategory\": \"022\",\n                    \"addressLine1\": \"Address\",\n                    \"addressLine2\": \"Main Street\",\n                    \"addressLine3\": \"Main Place\",\n                    \"addressLine4\": \"Main Block\",\n                    \"addressLine5\": \"Block 5, Apartment 1\",\n                    \"city\": \"City Name\",\n                    \"postCode\": \"6010\",\n                    \"country\": \"{{country}}\",\n                    \"telephone1\": \"123456\",\n                    \"telephone2\": \"234567\",\n                    \"faxWork\": \"345678\",\n                    \"deliveryMethod\": \"{{deliveryMethod}}\",\n                    \"emailAddress\": \"email@rs2.com\",\n                    \"contactName\": \"Max\"\n                }\n            ],\n            \"contracts\": [\n                {\n                    \"clientTariff\": \"{{clientTariff}}\",\n                    \"clientScheme\": \"{{clientScheme}}\",\n                    \"clientLevel\": \"{{clientLevel}}\",\n                    \"settlementMethod\": \"{{settlementMethod}}\",\n                    \"clientBranch\": \"{{clientBranch}}\",\n                    \"institutionAccountOfficer\": \"000\",\n                    \"postingMethod\": \"{{postingMethod}}\",\n                    \"transactionChargesTariff\": \"{{merchantTranTariff}}\",\n                    \"contractDefinition\": {\n                        \"id\": \"serviceContractId=112\"\n                    }\n                }\n            ],\n            \"settlementPackages\": [\n                {\n                    \"settlementCategory\": \"002\",\n                    \"bankClearingNumber\": \"{{bankClearingNumber}}\",\n                    \"bankTelNumber\": \"1236547890\",\n                    \"paymentReference\": \"PR_665522KT\",\n                    \"paymentMethod\": \"002\",\n                    \"accountCurrency\": \"{{currency}}\",\n                    \"contingencyLiabilityAccount\": \"\",\n                    \"correspondingBankAccount\": \"84783403\",\n                    \"correspondingBankNumber\": \"00000000030080508568\",\n                    \"receiverCountryCode\": \"{{country}}\",\n                    \"noteText\": \"Max Testing\",\n                    \"payableDetails\": {\n                        \"counterBankAccount\": \"30345677\",\n                        \"confirmationMethod\": \"003\",\n                        \"bankContactName\": \"BANK_CONTACT_NAME\",\n                        \"counterBankCity\": \"Count Bank City\"\n                    }\n                },\n                \"accounts\": [\n                    {\n                        \"clientAccountName\": \"Test Account\",\n                        \"accountDefinition\": {\n                            \"id\": \"accountTypeId=012&accountCurrency=EUR&serviceContractId=112\"\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}\n}\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}merchantApplications",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}merchantApplications"
									]
								},
								"description": "This call is the first step for onboarding and is **MANDATORY** to be created regardless of client level in the hierarchy. This API represents the main details of the client. For member level details (transacting merchant or lowest level in the hierarchy) this will include the unique merchant ID which stored in ourReference attribute of this request. \n\nA successful response will capture the ID of this merchants API resource such as the clientNumber and will be required on the succeeding API POST/PATCH calls for the following resources:\n\nPOST calls to:\n- /addresses\n- /merchantsAddendum\n- /merchantsAddendumUsa\n- /contracts\n- /settlementPackages\nPATCH to:\n- /merchants status for Application Processing\n\n**Important note:**\n\nFor merchant hierarchy onboarding, a top-down level approach should be followed such as Group level should be onboarded first followed by Sub-group level(s) and lastly the Member (transacting) level merchants. Please note that parent levels should be onboarded successfully (in ACTIVE status) before one can onboard the child level.\n\nEvery merchant pre-boarded to bankWORKS using WSM API will be marked with a specific status value of 023 (In Process), indicating that the merchant is not yet active in the system. After creation of the merchant followed by the related and required API resources for onboarding, the status of the merchant can be set to either 001 (Active) or 003 (Suspended) by sending a PATCH request to merchants API. Suspended status will only apply for member level merchants if needed.\n\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together. In this request, merchantId is assigned in order to be used to create related information of merchant in the succeeding calls."
							},
							"response": [
								{
									"name": "Middle level - Subgroup merchant",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB SubGrp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB SubGrp test\",\n\t        \"companyName\" : \"BOA-SB SubGrp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB SubGrp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:36:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "720"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB SubGrp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000229\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB SubGrp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"000\",\n                \"contactName\": \"BOA-SB SubGrp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB SubGrp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "BOA-SB test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB shortName\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753951\",\n\t        \"ourReference\" : \"11223344\",\n\t        \"tradeName\" : \"BOA-SB Trade Name\",\n\t        \"companyName\" : \"BOA-SB Company Name\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"title\" : \"001\",\n\t        \t\"contactName\" : \"BOA-SB Contact Name\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:30:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "719"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Company Name\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000227\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": \"11223344\",\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Trade Name\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753951\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": \"001\",\n                \"contactName\": \"BOA-SB Contact Name\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB shortName\",\n            \"status\": \"023\"\n        }\n    }\n}"
								},
								{
									"name": "Top level - Group",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n\t  \"type\": \"merchants\",\n\t  \"attributes\": {\n\t        \"registrationNumber\" : \"987654321010\",\n\t        \"businessClass\" : \"5013\",\n\t        \"shortName\" : \"BOA-SB Grp test\",\n\t        \"language\" : \"001\",\n\t        \"legalForm\" : \"001\",\n\t        \"vatRegistrationNumber\" : \"753953216541\",\n\t        \"tradeName\" : \"BOA-SB Grp test\",\n\t        \"companyName\" : \"BOA-SB Grp test\",\n\t        \"eCommerceIndicator\" : \"002\",\n\t        \"taxCountry\" : \"USA\",\n\t        \"processingRegion\" : \"000\",\n\t        \"mainContactDetails\" : {\n\t        \t\"contactName\" : \"BOA-SB Grp test\",\n\t        \t\"serviceTelephone\" : \"8881111000\"\n\t        }\n\t  }\n  }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 10:58:49 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "707"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228\",\n        \"type\": \"merchants\",\n        \"attributes\": {\n            \"lastName\": null,\n            \"website\": null,\n            \"companyName\": \"BOA-SB Grp test\",\n            \"businessClass\": \"5013\",\n            \"processingRegion\": \"000\",\n            \"language\": \"001\",\n            \"clientNumber\": \"00000228\",\n            \"visaThreshold\": null,\n            \"legalForm\": \"001\",\n            \"ourReference\": null,\n            \"firstName\": null,\n            \"tradeName\": \"BOA-SB Grp test\",\n            \"taxRegion\": \"000\",\n            \"clientType\": \"002\",\n            \"vatRegistrationNumber\": \"753953216541\",\n            \"rbsClientNumber\": null,\n            \"registrationNumber\": \"987654321010\",\n            \"mainContactDetails\": {\n                \"title\": null,\n                \"contactName\": \"BOA-SB Grp test\",\n                \"mobile1\": null,\n                \"mobile2\": null,\n                \"serviceTelephone\": \"8881111000\"\n            },\n            \"eCommerceIndicator\": \"002\",\n            \"taxCountry\": \"USA\",\n            \"middleName\": null,\n            \"shortName\": \"BOA-SB Grp test\",\n            \"status\": \"023\"\n        }\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Merchant Data Retrieval",
					"item": [
						{
							"name": "MISC | Merchant Data with Addr. and Settl. Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var resp = JSON.parse(responseBody);",
											"// pm.environment.set(\"contractId\", resp.data[0].relationships.contracts.data[0].id);",
											"pm.environment.set(\"groupNumber\", resp.included[0].attributes.groupNumber);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants?filter[ourReference]={{MID}}&include=addresses,settlementPackages",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"merchants"
									],
									"query": [
										{
											"key": "filter[ourReference]",
											"value": "{{MID}}",
											"description": "filter via MID"
										},
										{
											"key": "filter[clientNumber]",
											"value": "{{clientNumber}}",
											"description": "filter via MCN",
											"disabled": true
										},
										{
											"key": "include",
											"value": "addresses,settlementPackages"
										},
										{
											"key": "include",
											"value": "contracts.services.devices",
											"description": "include devices",
											"disabled": true
										},
										{
											"key": "filter[devices][clientNumber]",
											"value": "{{clientNumber}}",
											"disabled": true
										},
										{
											"key": "filter[addresses][addressCategory]",
											"value": "001",
											"description": "filter only standard address as default",
											"disabled": true
										},
										{
											"key": "filter[contracts][services.effectiveDate][LE]",
											"value": "2019-10-29",
											"description": "select only the effective service",
											"disabled": true
										},
										{
											"key": "sort[services]",
											"value": "-effectiveDate",
											"disabled": true
										}
									]
								},
								"description": "This call will retrieve merchant details including addresses, settlement information, and terminal device details using MID (ourReference) or MCN (merchant clientNumber). Contracts filtered is the most effective record in this example."
							},
							"response": [
								{
									"name": "Merchant Data using MID/MCN - 00002921",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json",
												"type": "text"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchants?filter[ourReference]=10002921&include=addresses,settlementPackages&include=contracts.services.devices&filter[devices][clientNumber]=00002921&filter[addresses][addressCategory]=001&filter[contracts][services.effectiveDate][LE]=2019-10-29&sort[services]=-effectiveDate",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchants"
											],
											"query": [
												{
													"key": "filter[ourReference]",
													"value": "10002921",
													"description": "filter via MID"
												},
												{
													"key": "filter[clientNumber]",
													"value": "00002921",
													"description": "filter via MCN",
													"disabled": true
												},
												{
													"key": "include",
													"value": "addresses,settlementPackages"
												},
												{
													"key": "include",
													"value": "contracts.services.devices",
													"description": "include devices"
												},
												{
													"key": "filter[devices][clientNumber]",
													"value": "00002921"
												},
												{
													"key": "filter[addresses][addressCategory]",
													"value": "001",
													"description": "filter only standard address as default"
												},
												{
													"key": "filter[contracts][services.effectiveDate][LE]",
													"value": "2019-10-29",
													"description": "select only the effective service"
												},
												{
													"key": "sort[services]",
													"value": "-effectiveDate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Wed, 30 Oct 2019 11:43:28 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6083"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"clientNumber=00002921\",\n            \"type\": \"merchants\",\n            \"attributes\": {\n                \"lastName\": null,\n                \"website\": null,\n                \"companyName\": \"Dev only\",\n                \"businessClass\": \"5013\",\n                \"processingRegion\": \"001\",\n                \"language\": \"001\",\n                \"clientNumber\": \"00002921\",\n                \"visaThreshold\": \"000\",\n                \"legalForm\": \"001\",\n                \"ourReference\": \"10002921\",\n                \"firstName\": null,\n                \"tradeName\": \"Devs\",\n                \"clientType\": \"002\",\n                \"vatRegistrationNumber\": null,\n                \"rbsClientNumber\": null,\n                \"registrationNumber\": null,\n                \"mainContactDetails\": {\n                    \"title\": \"000\",\n                    \"contactName\": \"Joseph 2\",\n                    \"mobile1\": null,\n                    \"mobile2\": null,\n                    \"serviceTelephone\": null\n                },\n                \"eCommerceIndicator\": null,\n                \"taxCountry\": \"MLT\",\n                \"middleName\": null,\n                \"shortName\": \"JBB\",\n                \"status\": \"003\"\n            },\n            \"relationships\": {\n                \"addresses\": {\n                    \"data\": [\n                        {\n                            \"id\": \"clientNumber=00002921&addressCategory=001&effectiveDate=2016-03-21\",\n                            \"type\": \"addresses\"\n                        }\n                    ]\n                },\n                \"settlementPackages\": {\n                    \"data\": [\n                        {\n                            \"id\": \"clientNumber=00002921&settlementNumber=01\",\n                            \"type\": \"settlementPackages\"\n                        }\n                    ]\n                },\n                \"contracts\": {\n                    \"data\": [\n                        {\n                            \"id\": \"clientNumber=00002921&groupNumber=00000945&effectiveDate=2016-04-01&clientLevel=001\",\n                            \"type\": \"contracts\"\n                        },\n                        {\n                            \"id\": \"clientNumber=00002921&groupNumber=00000945&effectiveDate=2016-04-22&clientLevel=001\",\n                            \"type\": \"contracts\"\n                        },\n                        {\n                            \"id\": \"clientNumber=00002921&groupNumber=00000945&effectiveDate=2017-03-17&clientLevel=001\",\n                            \"type\": \"contracts\"\n                        }\n                    ]\n                }\n            }\n        }\n    ],\n    \"included\": [\n        {\n            \"id\": \"clientNumber=00002921&addressCategory=001&effectiveDate=2016-03-21\",\n            \"type\": \"addresses\",\n            \"attributes\": {\n                \"country\": \"ECU\",\n                \"city\": \"Hefsjxfsa\",\n                \"deliveryMethod\": \"001\",\n                \"contactName\": \"Vjtlshh Cfeq\",\n                \"telephone2\": null,\n                \"telephone1\": null,\n                \"faxWork\": null,\n                \"expiryDate\": \"9999-12-31\",\n                \"addressCategory\": \"001\",\n                \"poBox\": null,\n                \"emailAddress\": null,\n                \"addressLine1\": \"Mo 72 rg Wtlrpqx SQP Adgaq F 2\",\n                \"addressLine2\": null,\n                \"postCode\": \"170109\",\n                \"addressLine3\": null,\n                \"state\": null,\n                \"addressLine4\": null,\n                \"addressLine5\": null,\n                \"effectiveDate\": \"2016-03-21\",\n                \"addressLanguage\": null\n            }\n        },\n        {\n            \"id\": \"clientNumber=00002921&groupNumber=00000945&effectiveDate=2016-04-01&clientLevel=001\",\n            \"type\": \"contracts\",\n            \"attributes\": {\n                \"tierGroup\": null,\n                \"clientLevel\": \"001\",\n                \"clientTariff\": \"000012\",\n                \"settlementMethod\": \"025\",\n                \"groupNumber\": \"00000945\",\n                \"chargeTierLevel\": \"000\",\n                \"bankReference\": null,\n                \"clientScheme\": \"000000\",\n                \"clientBranch\": \"000\",\n                \"institutionAccountOfficer\": \"000\",\n                \"contractReference\": \"0037100\",\n                \"effectiveDate\": \"2016-04-01\",\n                \"status\": \"001\",\n                \"postingMethod\": \"004\",\n                \"transactionChargesTariff\": null\n            },\n            \"relationships\": {\n                \"services\": {\n                    \"data\": [\n                        {\n                            \"id\": \"serviceId=301&groupNumber=00000945&clientNumber=00002921&effectiveDate=2019-09-12\",\n                            \"type\": \"services\"\n                        }\n                    ]\n                }\n            }\n        },\n        {\n            \"id\": \"clientNumber=00002921&groupNumber=00000945&effectiveDate=2016-04-22&clientLevel=001\",\n            \"type\": \"contracts\",\n            \"attributes\": {\n                \"tierGroup\": null,\n                \"clientLevel\": \"001\",\n                \"clientTariff\": \"000012\",\n                \"settlementMethod\": \"024\",\n                \"groupNumber\": \"00000945\",\n                \"chargeTierLevel\": \"000\",\n                \"bankReference\": null,\n                \"clientScheme\": null,\n                \"clientBranch\": \"000\",\n                \"institutionAccountOfficer\": \"000\",\n                \"contractReference\": \"0037100\",\n                \"effectiveDate\": \"2016-04-22\",\n                \"status\": \"001\",\n                \"postingMethod\": \"004\",\n                \"transactionChargesTariff\": null\n            },\n            \"relationships\": {\n                \"services\": {\n                    \"data\": [\n                        {\n                            \"id\": \"serviceId=301&groupNumber=00000945&clientNumber=00002921&effectiveDate=2019-09-12\",\n                            \"type\": \"services\"\n                        }\n                    ]\n                }\n            }\n        },\n        {\n            \"id\": \"clientNumber=00002921&groupNumber=00000945&effectiveDate=2017-03-17&clientLevel=001\",\n            \"type\": \"contracts\",\n            \"attributes\": {\n                \"tierGroup\": null,\n                \"clientLevel\": \"001\",\n                \"clientTariff\": \"000012\",\n                \"settlementMethod\": \"024\",\n                \"groupNumber\": \"00000945\",\n                \"chargeTierLevel\": \"000\",\n                \"bankReference\": null,\n                \"clientScheme\": null,\n                \"clientBranch\": \"000\",\n                \"institutionAccountOfficer\": \"000\",\n                \"contractReference\": \"0037100\",\n                \"effectiveDate\": \"2017-03-17\",\n                \"status\": \"004\",\n                \"postingMethod\": \"004\",\n                \"transactionChargesTariff\": null\n            },\n            \"relationships\": {\n                \"services\": {\n                    \"data\": [\n                        {\n                            \"id\": \"serviceId=301&groupNumber=00000945&clientNumber=00002921&effectiveDate=2019-09-12\",\n                            \"type\": \"services\"\n                        }\n                    ]\n                }\n            }\n        },\n        {\n            \"id\": \"clientNumber=00002921&terminalId=98765432\",\n            \"type\": \"devices\",\n            \"attributes\": {\n                \"serialNumber\": null,\n                \"contactName\": null,\n                \"endOfDayIndicator\": \"002\",\n                \"currency\": \"USD\",\n                \"terminalId\": \"98765432\",\n                \"posCapability\": \"000\",\n                \"lastChangedDate\": \"2019-09-12\",\n                \"terminalType\": \"301\",\n                \"status\": \"001\"\n            }\n        },\n        {\n            \"id\": \"serviceId=301&groupNumber=00000945&clientNumber=00002921&effectiveDate=2019-09-12\",\n            \"type\": \"services\",\n            \"attributes\": {\n                \"expiryDate\": \"2020-09-30\",\n                \"reviewDate\": \"2020-09-30\",\n                \"clientTariff\": \"000000\",\n                \"clientNumber\": \"00002921\",\n                \"serviceId\": \"301\",\n                \"groupNumber\": \"00000945\",\n                \"effectiveDate\": \"2019-09-12\",\n                \"serviceCategory\": \"022\",\n                \"status\": \"001\"\n            },\n            \"relationships\": {\n                \"devices\": {\n                    \"data\": [\n                        {\n                            \"id\": \"clientNumber=00002921&terminalId=98765432\",\n                            \"type\": \"devices\"\n                        }\n                    ]\n                }\n            }\n        },\n        {\n            \"id\": \"clientNumber=00002921&settlementNumber=01\",\n            \"type\": \"settlementPackages\",\n            \"attributes\": {\n                \"payableDetails\": {\n                    \"counterBankAccount\": \"HZV0508050805080508051\",\n                    \"counterBankNumber\": null,\n                    \"confirmationMethod\": \"004\",\n                    \"counterClientNumber\": null,\n                    \"bankTelNumber\": null,\n                    \"bankContactName\": null,\n                    \"counterBankName\": null,\n                    \"counterBankAccountName\": null,\n                    \"counterBankCity\": null,\n                    \"ibanReference\": null,\n                    \"paymentReference\": null,\n                    \"fundingNarrative\": null\n                },\n                \"noteText\": null,\n                \"bankClearingNumber\": null,\n                \"receiverCountryCode\": null,\n                \"contingencyLiabilityAccount\": null,\n                \"settlementCategory\": \"001\",\n                \"accountCurrency\": \"USD\",\n                \"correspondingBankNumber\": null,\n                \"correspondingBankAccount\": null,\n                \"receivableDetails\": {\n                    \"counterBankAccount\": null,\n                    \"counterBankNumber\": null,\n                    \"bankTelNumber\": null,\n                    \"bankContactName\": null,\n                    \"counterBankName\": null,\n                    \"counterBankAccountName\": null,\n                    \"counterBankCity\": null,\n                    \"ibanReference\": null,\n                    \"fundingNarrative\": null\n                }\n            }\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://localhost:8080/wsm/jsonapi/merchants?page[limit]=20&filter[devices][clientNumber][EQ]=00002921&sort[services]=-effectiveDate&include[merchants]=addresses%2CsettlementPackages%2Ccontracts.services.devices&filter[addresses][addressCategory][EQ]=001&filter[contracts][services.effectiveDate][LE]=2019-10-29&filter[merchants][ourReference][EQ]=10002921\",\n        \"last\": \"http://localhost:8080/wsm/jsonapi/merchants?page[limit]=20&filter[devices][clientNumber][EQ]=00002921&sort[services]=-effectiveDate&include[merchants]=addresses%2CsettlementPackages%2Ccontracts.services.devices&filter[addresses][addressCategory][EQ]=001&filter[contracts][services.effectiveDate][LE]=2019-10-29&filter[merchants][ourReference][EQ]=10002921\"\n    },\n    \"meta\": {\n        \"totalResourceCount\": 1\n    }\n}"
								}
							]
						}
					],
					"description": "Any calls related to merchant data retrieval using MID or merchant client number."
				},
				{
					"name": "Merchant Hierarchy",
					"item": [
						{
							"name": "MISC | Get groupNumber for hierarchy retrieval",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var resp = JSON.parse(responseBody);",
											"pm.environment.set(\"groupNumber\", resp.included[0].attributes.ourReference);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dateNow= new Date();\r",
											"\r",
											"pm.environment.set(\"postingDate\", dateNow.toISOString().slice(0,10));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts?filter[clientNumber]={{clientNumber}}&fields=groupNumber",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"contracts"
									],
									"query": [
										{
											"key": "filter[clientNumber]",
											"value": "{{clientNumber}}"
										},
										{
											"key": "fields",
											"value": "groupNumber",
											"description": "filters only the id of main resource - contracts, to improve performance"
										}
									]
								},
								"description": "Get groupNumber of a merchant client number first before getting the whole hierarchy."
							},
							"response": [
								{
									"name": "Sample 1 - client 00110365",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts?filter[groupNumber]={{groupNumber}}&include=parentContracts&filter[parentClientNumber]={{clientNumber}}&filter[clientNumber][NEQ]={{clientNumber}}&filter[status]=001&filter[effectiveDate][GE]=2016-04-22&sort=effectiveDate&include=merchant&fields[merchants]=ourReference&fields=id",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											],
											"query": [
												{
													"key": "filter[groupNumber]",
													"value": "{{groupNumber}}",
													"description": "filter hierarchy groupNumber"
												},
												{
													"key": "include",
													"value": "parentContracts"
												},
												{
													"key": "filter[parentClientNumber]",
													"value": "{{clientNumber}}",
													"description": "clientNumber of parent / subgroup"
												},
												{
													"key": "filter[clientNumber][NEQ]",
													"value": "{{clientNumber}}",
													"description": "remove dummy clients"
												},
												{
													"key": "filter[status]",
													"value": "001",
													"description": "in Active status"
												},
												{
													"key": "filter[effectiveDate][GE]",
													"value": "2016-04-22",
													"description": "use posting date (current date) to get the latest effective contract"
												},
												{
													"key": "sort",
													"value": "effectiveDate"
												},
												{
													"key": "include",
													"value": "merchant",
													"description": "include merchant resource to get the MID"
												},
												{
													"key": "fields[merchants]",
													"value": "ourReference",
													"description": "only get MID (ourReference) and not all merchant data"
												},
												{
													"key": "fields",
													"value": "id",
													"description": "filters only the id of main resource - contracts, to improve performance"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 25 Oct 2019 08:39:18 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1546"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"clientNumber=00002921&groupNumber=00000945&effectiveDate=2016-04-22&clientLevel=001\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"parentContracts\": {\n                    \"data\": []\n                },\n                \"merchant\": {\n                    \"data\": {\n                        \"id\": \"clientNumber=00002921\",\n                        \"type\": \"merchants\"\n                    }\n                }\n            }\n        },\n        {\n            \"id\": \"clientNumber=02220365&groupNumber=00000945&effectiveDate=2016-04-22&clientLevel=001\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"parentContracts\": {\n                    \"data\": []\n                },\n                \"merchant\": {\n                    \"data\": {\n                        \"id\": \"clientNumber=02220365\",\n                        \"type\": \"merchants\"\n                    }\n                }\n            }\n        }\n    ],\n    \"included\": [\n        {\n            \"id\": \"clientNumber=00002921\",\n            \"type\": \"merchants\",\n            \"attributes\": {\n                \"ourReference\": \"22222222\"\n            }\n        },\n        {\n            \"id\": \"clientNumber=02220365\",\n            \"type\": \"merchants\",\n            \"attributes\": {\n                \"ourReference\": \"11111111\"\n            }\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://localhost:8080/wsm/jsonapi/contracts?include[contracts]=parentContracts%2Cmerchant&page[limit]=20&filter[contracts][groupNumber][EQ]=00000945&filter[contracts][clientNumber][NEQ]=00110365&fields[merchants]=ourReference&filter[contracts][effectiveDate][GE]=2016-04-22&sort[contracts]=effectiveDate&filter[contracts][parentClientNumber][EQ]=00110365&fields[contracts]=id&filter[contracts][status][EQ]=001\",\n        \"last\": \"http://localhost:8080/wsm/jsonapi/contracts?include[contracts]=parentContracts%2Cmerchant&page[limit]=20&filter[contracts][groupNumber][EQ]=00000945&filter[contracts][clientNumber][NEQ]=00110365&fields[merchants]=ourReference&filter[contracts][effectiveDate][GE]=2016-04-22&sort[contracts]=effectiveDate&filter[contracts][parentClientNumber][EQ]=00110365&fields[contracts]=id&filter[contracts][status][EQ]=001\"\n    },\n    \"meta\": {\n        \"totalResourceCount\": 2\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Get hierarchy using groupNumber",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var resp = JSON.parse(responseBody);",
											"// pm.environment.set(\"ourReference\", resp.included[0].attributes.ourReference);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dateNow= new Date();\r",
											"\r",
											"pm.environment.set(\"postingDate\", dateNow.toISOString().slice(0,10));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts?filter[groupNumber]={{groupNumber}}&filter[effectiveDate][LE]=2018-04-22&sort=clientNumber,-effectiveDate&include=parentContracts,merchant.addresses",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"contracts"
									],
									"query": [
										{
											"key": "filter[groupNumber]",
											"value": "{{groupNumber}}",
											"description": "filter hierarchy groupNumber e.g 00010798, 00000945"
										},
										{
											"key": "filter[effectiveDate][LE]",
											"value": "2018-04-22",
											"description": "use posting date (current date) to get the latest effective contract"
										},
										{
											"key": "sort",
											"value": "clientNumber,-effectiveDate"
										},
										{
											"key": "include",
											"value": "parentContracts,merchant.addresses"
										},
										{
											"key": "filter[status]",
											"value": "001",
											"description": "only in Active status",
											"disabled": true
										},
										{
											"key": "fields[merchants]",
											"value": "ourReference",
											"description": "only get MID (ourReference) and not all merchant data",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "id",
											"description": "filters only the id of main resource - contracts, to improve performance",
											"disabled": true
										}
									]
								},
								"description": "Retrieve a merchant hierarchy (in flat ie. response will not be in a top-down level format) using groupNumber which can be retrieved from the previous call. Parent contract is included in this call which will indicate which parent node the merchant belongs to. \nProvide the effective date of the merchant contract if merchant already have history of contract records. This will be used in order to only filter the latest effective contract of each node in the hierarchy and not get all the history of it."
							},
							"response": [
								{
									"name": "Sample 1 - client 00110365",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts?filter[groupNumber]={{groupNumber}}&include=parentContracts&filter[parentClientNumber]={{clientNumber}}&filter[clientNumber][NEQ]={{clientNumber}}&filter[status]=001&filter[effectiveDate][GE]=2016-04-22&sort=effectiveDate&include=merchant&fields[merchants]=ourReference&fields=id",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											],
											"query": [
												{
													"key": "filter[groupNumber]",
													"value": "{{groupNumber}}",
													"description": "filter hierarchy groupNumber"
												},
												{
													"key": "include",
													"value": "parentContracts"
												},
												{
													"key": "filter[parentClientNumber]",
													"value": "{{clientNumber}}",
													"description": "clientNumber of parent / subgroup"
												},
												{
													"key": "filter[clientNumber][NEQ]",
													"value": "{{clientNumber}}",
													"description": "remove dummy clients"
												},
												{
													"key": "filter[status]",
													"value": "001",
													"description": "in Active status"
												},
												{
													"key": "filter[effectiveDate][GE]",
													"value": "2016-04-22",
													"description": "use posting date (current date) to get the latest effective contract"
												},
												{
													"key": "sort",
													"value": "effectiveDate"
												},
												{
													"key": "include",
													"value": "merchant",
													"description": "include merchant resource to get the MID"
												},
												{
													"key": "fields[merchants]",
													"value": "ourReference",
													"description": "only get MID (ourReference) and not all merchant data"
												},
												{
													"key": "fields",
													"value": "id",
													"description": "filters only the id of main resource - contracts, to improve performance"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 25 Oct 2019 08:39:18 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1546"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"clientNumber=00002921&groupNumber=00000945&effectiveDate=2016-04-22&clientLevel=001\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"parentContracts\": {\n                    \"data\": []\n                },\n                \"merchant\": {\n                    \"data\": {\n                        \"id\": \"clientNumber=00002921\",\n                        \"type\": \"merchants\"\n                    }\n                }\n            }\n        },\n        {\n            \"id\": \"clientNumber=02220365&groupNumber=00000945&effectiveDate=2016-04-22&clientLevel=001\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"parentContracts\": {\n                    \"data\": []\n                },\n                \"merchant\": {\n                    \"data\": {\n                        \"id\": \"clientNumber=02220365\",\n                        \"type\": \"merchants\"\n                    }\n                }\n            }\n        }\n    ],\n    \"included\": [\n        {\n            \"id\": \"clientNumber=00002921\",\n            \"type\": \"merchants\",\n            \"attributes\": {\n                \"ourReference\": \"22222222\"\n            }\n        },\n        {\n            \"id\": \"clientNumber=02220365\",\n            \"type\": \"merchants\",\n            \"attributes\": {\n                \"ourReference\": \"11111111\"\n            }\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://localhost:8080/wsm/jsonapi/contracts?include[contracts]=parentContracts%2Cmerchant&page[limit]=20&filter[contracts][groupNumber][EQ]=00000945&filter[contracts][clientNumber][NEQ]=00110365&fields[merchants]=ourReference&filter[contracts][effectiveDate][GE]=2016-04-22&sort[contracts]=effectiveDate&filter[contracts][parentClientNumber][EQ]=00110365&fields[contracts]=id&filter[contracts][status][EQ]=001\",\n        \"last\": \"http://localhost:8080/wsm/jsonapi/contracts?include[contracts]=parentContracts%2Cmerchant&page[limit]=20&filter[contracts][groupNumber][EQ]=00000945&filter[contracts][clientNumber][NEQ]=00110365&fields[merchants]=ourReference&filter[contracts][effectiveDate][GE]=2016-04-22&sort[contracts]=effectiveDate&filter[contracts][parentClientNumber][EQ]=00110365&fields[contracts]=id&filter[contracts][status][EQ]=001\"\n    },\n    \"meta\": {\n        \"totalResourceCount\": 2\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Get MID-level nodes of the hierarchy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var resp = JSON.parse(responseBody);",
											"// pm.environment.set(\"contractId\", resp.data[0].relationships.contracts.data[0].id);",
											"pm.environment.set(\"groupNumber\", resp.included[0].attributes.groupNumber);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts?filter[groupNumber]={{groupNumber}}&filter[clientLevel]=001&fields=id&include=parentContracts",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"contracts"
									],
									"query": [
										{
											"key": "filter[clientNumber]",
											"value": "{{clientNumber}}",
											"disabled": true
										},
										{
											"key": "filter[groupNumber]",
											"value": "{{groupNumber}}"
										},
										{
											"key": "filter[clientLevel]",
											"value": "001"
										},
										{
											"key": "include",
											"value": "merchant.addresses,accounts.settlementPackage",
											"disabled": true
										},
										{
											"key": "fields",
											"value": "id"
										},
										{
											"key": "include",
											"value": "parentContracts"
										}
									]
								},
								"description": "Get only the MID-level (transacting merchants) of a hierarchy using a groupNumber."
							},
							"response": [
								{
									"name": "Get MID-level nodes of the hierarchy",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts?filter[groupNumber]=00000016&filter[clientLevel]=001&fields=id&include=parentContracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											],
											"query": [
												{
													"key": "filter[clientNumber]",
													"value": "00000229",
													"disabled": true
												},
												{
													"key": "filter[groupNumber]",
													"value": "00000016"
												},
												{
													"key": "filter[clientLevel]",
													"value": "001"
												},
												{
													"key": "include",
													"value": "merchant.addresses,accounts.settlementPackage",
													"disabled": true
												},
												{
													"key": "fields",
													"value": "id"
												},
												{
													"key": "include",
													"value": "parentContracts"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Mon, 25 Nov 2019 19:22:21 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1329"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"clientNumber=00000229&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=001\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"parentContracts\": {\n                    \"data\": [\n                        {\n                            \"id\": \"clientNumber=00000229&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=001\",\n                            \"type\": \"contracts\"\n                        }\n                    ]\n                }\n            }\n        },\n        {\n            \"id\": \"clientNumber=00000230&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=001\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"parentContracts\": {\n                    \"data\": [\n                        {\n                            \"id\": \"clientNumber=00000229&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=001\",\n                            \"type\": \"contracts\"\n                        }\n                    ]\n                }\n            }\n        },\n        {\n            \"id\": \"clientNumber=00000237&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=001\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"parentContracts\": {\n                    \"data\": []\n                }\n            }\n        },\n        {\n            \"id\": \"clientNumber=00000238&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=001\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"parentContracts\": {\n                    \"data\": []\n                }\n            }\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://localhost:8080/wsm/jsonapi/contracts?include[contracts]=parentContracts&page[limit]=20&filter[contracts][groupNumber][EQ]=00000016&fields[contracts]=id&filter[contracts][clientLevel][EQ]=001\",\n        \"last\": \"http://localhost:8080/wsm/jsonapi/contracts?include[contracts]=parentContracts&page[limit]=20&filter[contracts][groupNumber][EQ]=00000016&fields[contracts]=id&filter[contracts][clientLevel][EQ]=001\"\n    },\n    \"meta\": {\n        \"totalResourceCount\": 4\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Check Billing Level in a Hierarchy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var resp = JSON.parse(responseBody);",
											"// pm.environment.set(\"groupNumber\", resp.included[0].attributes.groupNumber);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts?filter[accounts][billingLevel]=001&filter[groupNumber]={{groupNumber}}&include=accounts,accounts.settlementPackage&fields=id&fields[accounts]=id",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"contracts"
									],
									"query": [
										{
											"key": "filter[accounts][billingLevel]",
											"value": "001"
										},
										{
											"key": "filter[groupNumber]",
											"value": "{{groupNumber}}"
										},
										{
											"key": "include",
											"value": "accounts,accounts.settlementPackage"
										},
										{
											"key": "fields",
											"value": "id",
											"description": "only retrieve the id from contracts if all attributes are not necessary to be displayed"
										},
										{
											"key": "fields[accounts]",
											"value": "id",
											"description": "only retrieve account id for billing if necessary"
										}
									]
								},
								"description": "This call will get the billing client for a given hierarchy (using groupNumber) and display account and settlement information of the merchant."
							},
							"response": [
								{
									"name": "Check Billing Level in a Hierarchy",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{token}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts?filter[accounts][billingLevel]=001&filter[groupNumber]={{groupNumber}}&include=accounts,accounts.settlementPackage&fields=id&fields[accounts]=id",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											],
											"query": [
												{
													"key": "filter[accounts][billingLevel]",
													"value": "001"
												},
												{
													"key": "filter[groupNumber]",
													"value": "{{groupNumber}}"
												},
												{
													"key": "include",
													"value": "accounts,accounts.settlementPackage"
												},
												{
													"key": "fields",
													"value": "id",
													"description": "only retrieve the id from contracts if all attributes are not necessary to be displayed"
												},
												{
													"key": "fields[accounts]",
													"value": "id",
													"description": "only retrieve account id for billing if necessary"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Mon, 25 Nov 2019 20:42:50 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1822"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"clientNumber=00000228&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=002\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"accounts\": {\n                    \"data\": []\n                }\n            }\n        },\n        {\n            \"id\": \"clientNumber=00000229&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=003\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"accounts\": {\n                    \"data\": [\n                        {\n                            \"id\": \"accountNumber=00000229001\",\n                            \"type\": \"accounts\"\n                        }\n                    ]\n                }\n            }\n        },\n        {\n            \"id\": \"clientNumber=00000229&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=001\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"accounts\": {\n                    \"data\": [\n                        {\n                            \"id\": \"accountNumber=00000229001\",\n                            \"type\": \"accounts\"\n                        }\n                    ]\n                }\n            }\n        },\n        {\n            \"id\": \"clientNumber=00000230&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=001\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"accounts\": {\n                    \"data\": []\n                }\n            }\n        },\n        {\n            \"id\": \"clientNumber=00000236&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=003\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"accounts\": {\n                    \"data\": []\n                }\n            }\n        },\n        {\n            \"id\": \"clientNumber=00000237&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=001\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"accounts\": {\n                    \"data\": []\n                }\n            }\n        },\n        {\n            \"id\": \"clientNumber=00000238&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=001\",\n            \"type\": \"contracts\",\n            \"relationships\": {\n                \"accounts\": {\n                    \"data\": []\n                }\n            }\n        }\n    ],\n    \"included\": [\n        {\n            \"id\": \"accountNumber=00000229001\",\n            \"type\": \"accounts\"\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://localhost:8080/wsm/jsonapi/contracts?include[contracts]=accounts%2Caccounts.settlementPackage&page[limit]=20&filter[accounts][billingLevel][EQ]=001&filter[contracts][groupNumber][EQ]=00000016&fields[contracts]=id&fields[accounts]=id%2CclientNumber\",\n        \"last\": \"http://localhost:8080/wsm/jsonapi/contracts?include[contracts]=accounts%2Caccounts.settlementPackage&page[limit]=20&filter[accounts][billingLevel][EQ]=001&filter[contracts][groupNumber][EQ]=00000016&fields[contracts]=id&fields[accounts]=id%2CclientNumber\"\n    },\n    \"meta\": {\n        \"totalResourceCount\": 7\n    }\n}"
								}
							]
						}
					],
					"description": "This section will provide sample API calls related to merchant hierarchy retrievals.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Parent Contracts",
					"item": [
						{
							"name": "MISC | Get Parent Contracts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts/{{contractId}}?include=parentContracts",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
									],
									"path": [
										"{{contractId}}"
									],
									"query": [
										{
											"key": "include",
											"value": "parentContracts"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Patching",
					"item": [
						{
							"name": "MISC | Patch Client References",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status Code 201\"] = responseCode.code === 200;",
											"",
											"var resp = JSON.parse(responseBody);",
											"pm.environment.set(\"clientReferencesId\", resp.data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n    \t\"id\" : \"{{clientReferencesId}}\",\n        \"type\": \"clientReferences\",\n        \"attributes\": {\n            \"referenceValue\": \"123457\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}clientReferences/{{clientReferencesId}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}clientReferences"
									],
									"path": [
										"{{clientReferencesId}}"
									]
								},
								"description": "This call is **OPTIONAL**.\n\nThis call will create additional merchant attributes and flag for merchants based in USA.\n\nFor API resource ID assignment, please see Tests tab. The assigned ID/s are used mainly to link merchant-related API resources together."
							},
							"response": [
								{
									"name": "USA Merchant Addendum - sample",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchantsAddendumUsa",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchantsAddendumUsa"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Wed, 02 Oct 2019 09:53:24 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "288"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000002\",\n        \"type\": \"merchantsAddendumUsa\",\n        \"attributes\": {\n            \"taxId\": \"123456\",\n            \"independentSalesOrganisation\": \"GM SalesOrg\",\n            \"url\": \"http://www.website.com\"\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000002\",\n                    \"type\": \"merchants\"\n                }\n            }\n        },\n        \"meta\": {\n            \"ttl\": 2592000\n        }\n    }\n}"
								},
								{
									"name": "Member level addendum USA",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\": {\n\t\t\"type\": \"merchantsAddendumUsa\",\n\t\t\"attributes\": {\n\t\t\t\"taxId\": \"123456\",\n\t\t\t\"independentSalesOrganisation\": \"GM SalesOrg\",\n\t\t\t\"url\": \"http://www.website.com\"\n\t\t},\n\t\t\"relationships\" : {\n\t\t\t\"merchant\" : {\n\t\t\t\t\"data\" : {\n\t\t\t\t\t\"type\" : \"merchants\",\n\t\t\t\t\t\"id\" : \"{{merchantId}}\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchantsAddendumUsa",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchantsAddendumUsa"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2019 16:37:29 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "288"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000008\",\n        \"type\": \"merchantsAddendumUsa\",\n        \"attributes\": {\n            \"taxId\": \"123456\",\n            \"independentSalesOrganisation\": \"GM SalesOrg\",\n            \"url\": \"http://www.website.com\"\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000008\",\n                    \"type\": \"merchants\"\n                }\n            }\n        },\n        \"meta\": {\n            \"ttl\": 2592000\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Patch Mandate Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 200;",
											"    var resp = JSON.parse(responseBody);",
											"    pm.environment.set(\"mandateInformationId\", resp.data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"mandateInformation\",\n        \"attributes\": {\n            \"uniqueMandateReference\": \"MANDJMH222\"\n        },\n        \"relationships\": {\n            \"settlementPackages\": {\n                \"data\": {\n                    \"type\": \"settlementPackages\",\n                    \"id\": \"{{settlementPackageId}}\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}mandateInformation/{{mandateInformationId}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}mandateInformation"
									],
									"path": [
										"{{mandateInformationId}}"
									]
								}
							},
							"response": [
								{
									"name": "USA Merchant Addendum - sample",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchantsAddendumUsa",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchantsAddendumUsa"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Wed, 02 Oct 2019 09:53:24 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "288"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000002\",\n        \"type\": \"merchantsAddendumUsa\",\n        \"attributes\": {\n            \"taxId\": \"123456\",\n            \"independentSalesOrganisation\": \"GM SalesOrg\",\n            \"url\": \"http://www.website.com\"\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000002\",\n                    \"type\": \"merchants\"\n                }\n            }\n        },\n        \"meta\": {\n            \"ttl\": 2592000\n        }\n    }\n}"
								},
								{
									"name": "Member level addendum USA",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\": {\n\t\t\"type\": \"merchantsAddendumUsa\",\n\t\t\"attributes\": {\n\t\t\t\"taxId\": \"123456\",\n\t\t\t\"independentSalesOrganisation\": \"GM SalesOrg\",\n\t\t\t\"url\": \"http://www.website.com\"\n\t\t},\n\t\t\"relationships\" : {\n\t\t\t\"merchant\" : {\n\t\t\t\t\"data\" : {\n\t\t\t\t\t\"type\" : \"merchants\",\n\t\t\t\t\t\"id\" : \"{{merchantId}}\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/merchantsAddendumUsa",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"merchantsAddendumUsa"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2019 16:37:29 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "288"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000008\",\n        \"type\": \"merchantsAddendumUsa\",\n        \"attributes\": {\n            \"taxId\": \"123456\",\n            \"independentSalesOrganisation\": \"GM SalesOrg\",\n            \"url\": \"http://www.website.com\"\n        },\n        \"relationships\": {\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000008\",\n                    \"type\": \"merchants\"\n                }\n            }\n        },\n        \"meta\": {\n            \"ttl\": 2592000\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Patch Merchant Contract",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Declaring the relationship based on client level",
											"// Is Standalone Member or Group",
											"    if (pm.environment.get(\"hierarchyLevel\") === 0) {",
											"        pm.environment.set(\"contractRelationship\",  \"contractDefinition\");",
											"        pm.environment.set(\"type\",                  \"contractDefinitions\");",
											"        pm.environment.set(\"levelContractId\",       \"{{contractId}}\");",
											"    }",
											"// Is Sub-Group in Hierarchy - Supports 8 Sub-Group Levels (excluding Group and Member levels)",
											"    else if (pm.environment.get(\"hierarchyLevel\") >= 1) {",
											"        pm.environment.set(\"contractRelationship\",  \"parentContracts\");",
											"        pm.environment.set(\"type\",                  \"contracts\");",
											"// Creating Sub-Group Hierarchies",
											"        if (pm.environment.get(\"hierarchyLevel\") == 1) {",
											"            pm.environment.set(\"levelContractId\",   \"{{groupContractId}}\");",
											"        }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 2) {",
											"            pm.environment.set(\"levelContractId\",   \"{{sub1ContractId}}\");",
											"        }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 3) {",
											"            pm.environment.set(\"levelContractId\",   \"{{sub2ContractId}}\");",
											"        }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 4) {",
											"            pm.environment.set(\"levelContractId\",   \"{{sub3ContractId}}\");",
											"        }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 5) {",
											"            pm.environment.set(\"levelContractId\",   \"{{sub4ContractId}}\");",
											"        }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 6) {",
											"            pm.environment.set(\"levelContractId\",   \"{{sub5ContractId}}\");",
											"        }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 7) {",
											"            pm.environment.set(\"levelContractId\",   \"{{sub6ContractId}}\");",
											"        }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 8) {",
											"            pm.environment.set(\"levelContractId\",   \"{{sub7ContractId}}\");",
											"        }",
											"    }",
											"// Is Member in Hierarchy (2 Level)",
											"    else if (pm.environment.get(\"hierarchyLevel\") == -2) {",
											"        pm.environment.set(\"levelContractId\",       \"{{groupContractId}}\");",
											"        pm.environment.set(\"contractRelationship\",  \"parentContracts\");",
											"        pm.environment.set(\"type\",                  \"contracts\");",
											"    }",
											"// Is Member in Hierarchy (3+ Level)",
											"    else if (pm.environment.get(\"hierarchyLevel\") == -1) {",
											"        pm.environment.set(\"levelContractId\",       \"{{upperContractID}}\");",
											"        pm.environment.set(\"contractRelationship\",  \"parentContracts\");",
											"        pm.environment.set(\"type\",                  \"contracts\");",
											"    }",
											"    ",
											"// If BOA - Set Entity ID",
											"    if (pm.environment.get(\"institutionNumber\") == \"00000200\") {",
											"        pm.environment.set(\"entity\", \"\\\"entityId\\\" : \\\"{{entityId}}\\\",\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"entity\", \"\");",
											"    }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Setting Contract Variables based on Hierarchy",
											"    tests[\"Status Code 201\"] = responseCode.code === 201;",
											"    var resp = JSON.parse(responseBody);",
											"    pm.environment.set(\"currentContractId\",resp.data.id);",
											"    if (pm.environment.get(\"hierarchyLevel\") === 0) {",
											"// Group",
											"        if (pm.environment.get(\"clientLevel\") == \"002\") {",
											"            pm.environment.set(\"groupContractId\",   resp.data.id);",
											"            pm.environment.set(\"upperContractID\",   resp.data.id);",
											"        }",
											"// Standalone Member",
											"        else if (pm.environment.get(\"clientLevel\") == \"001\") {",
											"            pm.environment.set(\"contractId\",     resp.data.id);",
											"        }",
											"    }",
											"// Sub-Group",
											"    else if     (pm.environment.get(\"hierarchyLevel\") >= 1) { pm.environment.set(\"upperContractID\",resp.data.id);",
											"        if      (pm.environment.get(\"hierarchyLevel\") == 1) { pm.environment.set(\"sub1ContractId\",resp.data.id); }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 2) { pm.environment.set(\"sub2ContractId\",resp.data.id); }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 3) { pm.environment.set(\"sub3ContractId\",resp.data.id); }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 4) { pm.environment.set(\"sub4ContractId\",resp.data.id); }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 5) { pm.environment.set(\"sub5ContractId\",resp.data.id); }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 6) { pm.environment.set(\"sub6ContractId\",resp.data.id); }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 7) { pm.environment.set(\"sub7ContractId\",resp.data.id); }",
											"        else if (pm.environment.get(\"hierarchyLevel\") == 8) { pm.environment.set(\"sub8ContractId\",resp.data.id); }",
											"    }",
											"// Member in Hierarchy",
											"    else {",
											"        pm.environment.set(\"contractId\",     resp.data.id);",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"contracts\",\n        \"attributes\": {\n        \t\"status\" : \"003\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts/{{currentContractId}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
									],
									"path": [
										"{{currentContractId}}"
									]
								},
								"description": "This will create a contract resource for a new client and is **MANDATORY** to be created regardless of client level. Creation of new contracts is not possible following client onboarding. Can be used to create future effective changes to a current contract record. \n\n**IMPORTANT NOTE:**\n\n*ATTRIBUTES:*\n\n- a top-down level approach creation below should be followed. The attribute **clientLevel** in this resource will need to be specified for each client level contract creation. Below are the available client levels available in BankWorks:\n\t- Group level: **002**\n\t- Subgroup level: **003**\n\t- Member level: **001**\n- **clientTariff** value can be retrieved from the list of **accountFeeDefinitions** or **serviceFeeDefinitions** prior this call\n- **transactionChargesTariff** value can be retrieved from **productChargeDefinitions** API prior this call\n\n*RELATIONSHIPS:*\n\n- **merchant** resource created should be associated in the relationships\n- **contractDefinition** is required in the relationship association as well for contract creation of **Group level** or **Standalone** merchants.\n- for creation of **Subgroup and Member level** contracts, **parentContracts** relationship should be associated instead of *contractDefinition* from the example request. Contract ID of the parent will need to be passed in this relationship.\n\t```\n\t\"parentContracts\" : {\n\t\t\"data\" : {\n\t\t\t\"type\" : \"contracts\",\n\t\t\t\"id\" : \"{{parentContractId}}\"\n\t\t}\n\t}\n\t```"
							},
							"response": [
								{
									"name": "Group level client contract",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"000003\",\n            \"clientLevel\": \"002\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"{{transactionChargesTariff}}\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n    \t\t\"contractDefinition\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"contractDefinitions\",\n\t    \t\t\t\"id\" : \"{{contractDefinitionId}}\"\n\t    \t\t}\n\t    \t}\n\t    }\n    }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:06:29 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "673"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=002\",\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"tierGroup\": null,\n            \"clientLevel\": \"002\",\n            \"clientTariff\": \"000001\",\n            \"settlementMethod\": \"030\",\n            \"groupNumber\": \"00000016\",\n            \"chargeTierLevel\": null,\n            \"bankReference\": null,\n            \"clientScheme\": \"000003\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"contractReference\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"status\": null,\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"000001\"\n        },\n        \"relationships\": {\n            \"contractDefinition\": {\n                \"data\": {\n                    \"id\": \"serviceContractId=051\",\n                    \"type\": \"contractDefinitions\"\n                }\n            },\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000228\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								},
								{
									"name": "BOA-SB contract test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"000003\",\n            \"clientLevel\": \"001\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"{{transactionChargesTariff}}\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n    \t\t\"contractDefinition\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"contractDefinitions\",\n\t    \t\t\t\"id\" : \"{{contractDefinitionId}}\"\n\t    \t\t}\n\t    \t}\n\t    }\n    }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:42:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "673"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227&groupNumber=00000014&effectiveDate=2019-03-25&clientLevel=001\",\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"tierGroup\": null,\n            \"clientLevel\": \"001\",\n            \"clientTariff\": \"000001\",\n            \"settlementMethod\": \"030\",\n            \"groupNumber\": \"00000014\",\n            \"chargeTierLevel\": null,\n            \"bankReference\": null,\n            \"clientScheme\": \"000003\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"contractReference\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"status\": null,\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"000001\"\n        },\n        \"relationships\": {\n            \"contractDefinition\": {\n                \"data\": {\n                    \"id\": \"serviceContractId=051\",\n                    \"type\": \"contractDefinitions\"\n                }\n            },\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000227\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								},
								{
									"name": "Subgroup client contract",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"000003\",\n            \"clientLevel\": \"003\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"{{transactionChargesTariff}}\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n    \t\t  \"parentContracts\" : {\n\t\t\t      \"data\" : {\n\t\t\t          \"type\" : \"contracts\",\n\t\t\t          \"id\" : \"{{parentContractId}}\"\n\t\t\t      }\n\t\t\t  }\n\t    }\n    }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:41:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "724"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=003\",\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"tierGroup\": null,\n            \"clientLevel\": \"003\",\n            \"clientTariff\": \"000001\",\n            \"settlementMethod\": \"030\",\n            \"groupNumber\": \"00000016\",\n            \"chargeTierLevel\": null,\n            \"bankReference\": null,\n            \"clientScheme\": \"000003\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"contractReference\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"status\": null,\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"000001\"\n        },\n        \"relationships\": {\n            \"parentContracts\": {\n                \"data\": [\n                    {\n                        \"id\": \"clientNumber=00000228&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=002\",\n                        \"type\": \"contracts\"\n                    }\n                ]\n            },\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000229\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "MISC | Patch Services",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Setting Contract Variables based on Hierarchy",
											"    tests[\"Status Code 201\"] = responseCode.code === 201;",
											"    var resp = JSON.parse(responseBody);",
											"    pm.environment.set(\"currentContractId\",resp.data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"services\",\n        \"attributes\": {\n        \t\"status\" : \"001\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}services/{{serviceId}}",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}services"
									],
									"path": [
										"{{serviceId}}"
									]
								},
								"description": "This will create a contract resource for a new client and is **MANDATORY** to be created regardless of client level. Creation of new contracts is not possible following client onboarding. Can be used to create future effective changes to a current contract record. \n\n**IMPORTANT NOTE:**\n\n*ATTRIBUTES:*\n\n- a top-down level approach creation below should be followed. The attribute **clientLevel** in this resource will need to be specified for each client level contract creation. Below are the available client levels available in BankWorks:\n\t- Group level: **002**\n\t- Subgroup level: **003**\n\t- Member level: **001**\n- **clientTariff** value can be retrieved from the list of **accountFeeDefinitions** or **serviceFeeDefinitions** prior this call\n- **transactionChargesTariff** value can be retrieved from **productChargeDefinitions** API prior this call\n\n*RELATIONSHIPS:*\n\n- **merchant** resource created should be associated in the relationships\n- **contractDefinition** is required in the relationship association as well for contract creation of **Group level** or **Standalone** merchants.\n- for creation of **Subgroup and Member level** contracts, **parentContracts** relationship should be associated instead of *contractDefinition* from the example request. Contract ID of the parent will need to be passed in this relationship.\n\t```\n\t\"parentContracts\" : {\n\t\t\"data\" : {\n\t\t\t\"type\" : \"contracts\",\n\t\t\t\"id\" : \"{{parentContractId}}\"\n\t\t}\n\t}\n\t```"
							},
							"response": [
								{
									"name": "Subgroup client contract",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"000003\",\n            \"clientLevel\": \"003\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"{{transactionChargesTariff}}\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n    \t\t  \"parentContracts\" : {\n\t\t\t      \"data\" : {\n\t\t\t          \"type\" : \"contracts\",\n\t\t\t          \"id\" : \"{{parentContractId}}\"\n\t\t\t      }\n\t\t\t  }\n\t    }\n    }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:41:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "724"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000229&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=003\",\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"tierGroup\": null,\n            \"clientLevel\": \"003\",\n            \"clientTariff\": \"000001\",\n            \"settlementMethod\": \"030\",\n            \"groupNumber\": \"00000016\",\n            \"chargeTierLevel\": null,\n            \"bankReference\": null,\n            \"clientScheme\": \"000003\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"contractReference\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"status\": null,\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"000001\"\n        },\n        \"relationships\": {\n            \"parentContracts\": {\n                \"data\": [\n                    {\n                        \"id\": \"clientNumber=00000228&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=002\",\n                        \"type\": \"contracts\"\n                    }\n                ]\n            },\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000229\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								},
								{
									"name": "BOA-SB contract test",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"000003\",\n            \"clientLevel\": \"001\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"{{transactionChargesTariff}}\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n    \t\t\"contractDefinition\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"contractDefinitions\",\n\t    \t\t\t\"id\" : \"{{contractDefinitionId}}\"\n\t    \t\t}\n\t    \t}\n\t    }\n    }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 09:42:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "673"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000227&groupNumber=00000014&effectiveDate=2019-03-25&clientLevel=001\",\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"tierGroup\": null,\n            \"clientLevel\": \"001\",\n            \"clientTariff\": \"000001\",\n            \"settlementMethod\": \"030\",\n            \"groupNumber\": \"00000014\",\n            \"chargeTierLevel\": null,\n            \"bankReference\": null,\n            \"clientScheme\": \"000003\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"contractReference\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"status\": null,\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"000001\"\n        },\n        \"relationships\": {\n            \"contractDefinition\": {\n                \"data\": {\n                    \"id\": \"serviceContractId=051\",\n                    \"type\": \"contractDefinitions\"\n                }\n            },\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000227\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								},
								{
									"name": "Group level client contract",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{token}}"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json"
											},
											{
												"key": "Crnk-Compact",
												"type": "text",
												"value": "true"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"data\" : {\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"clientTariff\": \"{{clientTariff}}\",\n            \"clientScheme\": \"000003\",\n            \"clientLevel\": \"002\",\n            \"settlementMethod\": \"030\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"{{transactionChargesTariff}}\"\n        },\n        \"relationships\" : {\n\t    \t\"merchant\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"merchants\",\n\t    \t\t\t\"id\" : \"{{merchantId}}\"\n\t    \t\t}\n    \t\t},\n    \t\t\"contractDefinition\" : {\n\t    \t\t\"data\" : {\n\t    \t\t\t\"type\" : \"contractDefinitions\",\n\t    \t\t\t\"id\" : \"{{contractDefinitionId}}\"\n\t    \t\t}\n\t    \t}\n\t    }\n    }\n}"
										},
										"url": {
											"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/contracts",
											"host": [
												"{{hostName}}{{contextRoot}}{{serviceName}}"
											],
											"path": [
												"contracts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "X-Powered-By",
											"value": "Undertow/1"
										},
										{
											"key": "Server",
											"value": "JBoss-EAP/7"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Nov 2019 11:06:29 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.api+json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "673"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": \"clientNumber=00000228&groupNumber=00000016&effectiveDate=2019-03-25&clientLevel=002\",\n        \"type\": \"contracts\",\n        \"attributes\": {\n            \"tierGroup\": null,\n            \"clientLevel\": \"002\",\n            \"clientTariff\": \"000001\",\n            \"settlementMethod\": \"030\",\n            \"groupNumber\": \"00000016\",\n            \"chargeTierLevel\": null,\n            \"bankReference\": null,\n            \"clientScheme\": \"000003\",\n            \"clientBranch\": \"000\",\n            \"institutionAccountOfficer\": \"000\",\n            \"contractReference\": null,\n            \"effectiveDate\": \"2019-03-25\",\n            \"status\": null,\n            \"postingMethod\": \"001\",\n            \"transactionChargesTariff\": \"000001\"\n        },\n        \"relationships\": {\n            \"contractDefinition\": {\n                \"data\": {\n                    \"id\": \"serviceContractId=051\",\n                    \"type\": \"contractDefinitions\"\n                }\n            },\n            \"merchant\": {\n                \"data\": {\n                    \"id\": \"clientNumber=00000228\",\n                    \"type\": \"merchants\"\n                }\n            }\n        }\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Services",
					"item": [
						{
							"name": "MISC | Applying for a New Service / Modifiying a Current Effective Service",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status Code 201\"] = responseCode.code === 201;",
											"",
											"var data = JSON.parse(responseBody);",
											"pm.environment.set(\"serviceId\", data.data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"services\",\r\n    \"attributes\": {\r\n        \"clientTariff\" : \"000001\",\r\n        \"effectiveDate\": \"2019-10-27\"\r\n    },\r\n    \"relationships\": {\r\n      \"serviceDefinitions\": {\r\n        \"data\": [\r\n\t        {\r\n\t          \"type\": \"serviceDefinitions\",\r\n\t          \"id\": \"{{serviceDefinitionId}}\"\r\n\t        }\r\n        ]\r\n      },\r\n      \"contracts\": {\r\n        \"data\": [\r\n          {\r\n            \"type\": \"contracts\",\r\n            \"id\": \"{{contractId}}\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}/services",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}"
									],
									"path": [
										"services"
									]
								},
								"description": "This request can be used to define a new merchant service be it a completely new service or a future effective modification of an existing service. Current effective services have to be modified by sending a POST request due to the effectiveDate, as current effective services cannot be modified in order not to impact processing. Should there be a future effective service, a PATCH request could be sent to modify the service.\n\nTo create a service, the following relationships need to be associated:  \n\n- Link to existing merchant **contract** \n- Link to existing **serviceFefinition** related to the contract definition chosen. This defines the base rule of the acquiring service to be assigned to the merchant and is obtained from **Business Setup Configuration** folder - under **Account and Service Definition** call.\n\nCertain service contracts with mandatory services are automatically created based on business rules hence this call should only create services which are defined to be **optional**."
							},
							"response": []
						}
					],
					"description": "This section will contain calls for client services maintenance.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Settlement Schemes",
					"item": [
						{
							"name": "MISC | Get Settlement Schemes",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    if (responseCode.code === 200) {",
											"        tests[\"Status Code 201\"] = responseCode.code === 200;",
											"        var data = JSON.parse(responseBody);",
											"        pm.environment.set(\"settlementSchemesId\", data.data[0].id);",
											"    }",
											"    else if (responseCode.code === 404) {",
											"        console.log(\"Settlement Schemes API Not Installed\");",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}settlementSchemes",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}settlementSchemes"
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get Contracts via Settlement Schemes",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    if (responseCode.code === 200) {",
											"        tests[\"Status Code 201\"] = responseCode.code === 200;",
											"        var data = JSON.parse(responseBody);",
											"        pm.environment.set(\"settlementSchemesId\", data.data[0].id);",
											"    }",
											"    else if (responseCode.code === 404) {",
											"        console.log(\"Settlement Schemes API Not Installed\");",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"type": "text",
										"value": "true"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}settlementSchemes/serviceContractId=051&settlementMethod=030&settlementCategory=100&accountTypeId=009&accountCurrency=840&transactionType=000250&triggerRuleId=000&accountNumber=00000000000&effectiveDate=2019-12-12/contracts",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}settlementSchemes"
									],
									"path": [
										"serviceContractId=051&settlementMethod=030&settlementCategory=100&accountTypeId=009&accountCurrency=840&transactionType=000250&triggerRuleId=000&accountNumber=00000000000&effectiveDate=2019-12-12",
										"contracts"
									]
								}
							},
							"response": []
						},
						{
							"name": "MISC | Get Contracts",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"    if (pm.environment.has(\"services\") === false || pm.environment.get(\"services\") === null) {",
											"        pm.environment.set(\"serviceDefinitionsParams\", \"accountDefinitions\");",
											"    }",
											"    else {",
											"        pm.environment.set(\"serviceDefinitionsParams\", \"serviceDefinitions\");",
											"    }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"    tests[\"Status Code 201\"] = responseCode.code === 200;",
											"    var data = JSON.parse(responseBody);",
											"    pm.environment.set(\"contractId\", data.data[0].id);",
											"    ",
											"//Checks if the services variable is defined. If defined, it populates the myServices Array of Service IDs",
											"    if (pm.environment.has(\"services\") === true && pm.environment.get(\"services\") !== null) {",
											"        var data = JSON.parse(responseBody);",
											"        pm.environment.set(\"serviceDefinitions\", data.data.forEach(contractDefinition => {",
											"            const result = contractDefinition.relationships.serviceDefinitions.data.reduce((serviceDefIds, serviceDefinition) => {",
											"                serviceDefIds.push(serviceDefinition.id);",
											"                pm.environment.set(\"myServices\", serviceDefIds);",
											"                return serviceDefIds;",
											"            }, []);",
											"        }));",
											"        pm.environment.set(\"position\", 0);",
											"        pm.environment.set(\"devicesCounter\", 0);",
											"        pm.environment.unset(\"serviceDefinitions\");",
											"    }",
											"//Checks if the accounts variable is defined. If defined, it populates the myAccounts Array of Service IDs",
											"    if (pm.environment.has(\"acctCurrencyArray\")) {",
											"        pm.environment.set(\"accountDefinitions\", data.data.forEach(contractDefinition => {",
											"            const result = contractDefinition.relationships.accountDefinitions.data.reduce((accountDefIds, accountDefinitions) => {",
											"                accountDefIds.push(accountDefinitions.id);",
											"                pm.environment.set(\"myAccounts\", accountDefIds);",
											"                return accountDefIds;",
											"            }, []);",
											"        }));",
											"        pm.environment.unset(\"accountDefinitions\");",
											"        pm.environment.set(\"acctCounter\", 0);",
											"    }",
											"    ",
											"    if (pm.environment.get(\"clientLevel\" != \"001\")) {",
											"        pm.environment.unset(\"position\");",
											"        pm.environment.unset(\"devicesCounter\");",
											"        pm.environment.unset(\"myServices\");",
											"        pm.environment.unset(\"services\");",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Crnk-Compact",
										"value": "true",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{hostName}}{{contextRoot}}{{serviceName}}contracts?include=settlementSchemes",
									"host": [
										"{{hostName}}{{contextRoot}}{{serviceName}}contracts"
									],
									"query": [
										{
											"key": "include",
											"value": "settlementSchemes"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "WARP Merchant Portal - Bundle Administration",
					"item": [
						{
							"name": "OAuth2 Logout",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/{{wsm-context-root}}/oauth2/logout",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{wsm-context-root}}",
										"oauth2",
										"logout"
									]
								}
							},
							"response": []
						},
						{
							"name": "OAuth2 Authentication",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setGlobalVariable(\"token\", jsonData.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic amFtZXNsOnRoMXNQQHNzd09yZA=="
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}/{{wsm-context-root}}/oauth2/token",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{wsm-context-root}}",
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Install",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "Place a ZIP file with the Hash Router, Content Panel, Core and Public Login JAR files here.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{host}}/{{gml-context-root}}/data/bundleManager/installBundle",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{gml-context-root}}",
										"data",
										"bundleManager",
										"installBundle"
									]
								},
								"description": "install Bundle with JAR file:\nhttp://localhost:8080/generic-module-loader/data/bundleManager/installBundle"
							},
							"response": []
						},
						{
							"name": "Hash Router Off",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests['HTTP Status code should be 200'] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Resource type is 'bundles'\"] = jsonData.data.type = \"bundles\"",
											"tests[\"Bundle is in state 'RESOLVED'\"] = jsonData.data.attributes.state === 32 ;",
											"tests[\"Id is composed of name_version\"] = jsonData.data.id === (jsonData.data.attributes.name + \"_\" + jsonData.data.attributes.version);     "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \n    {\n      \"id\": \"com.rs2.warp.frontend.hash-router_X.X.X_OLD\",\n      \"type\": \"bundles\",\n      \"attributes\": {\n        \"state\": 4\n      }\n    }\n  \n}"
								},
								"url": {
									"raw": "{{host}}/{{wsm-context-root}}/jsonapi/bundles/com.rs2.warp.frontend.hash-router_X.X.X_OLD",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{wsm-context-root}}",
										"jsonapi",
										"bundles",
										"com.rs2.warp.frontend.hash-router_X.X.X_OLD"
									]
								},
								"description": "Use this request to either:\n1. START\n2. STOP\n3. or set to any OSGi lifecycle state\n\nfor a given bundle.  The bundle to be affected will be based on the name + version given in the URL.  It is imperative to always include `com.rs2.warp.frontend.` as a prefix to the bundle name + version.\n\nIn this case, since warp-themes is version 1.14.4 - you would need to hit `http://psf-mvr_temp.rs2.com/generic-module-loader/jsonapi/bundles/com.rs2.warp.frontend.warp-themes.1.14.4`.  This will of course need to be modified whenever the WARP Themes bundle version changes.\n\n\n\n"
							},
							"response": []
						},
						{
							"name": "Hash Router On",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests['HTTP Status code should be 200'] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Resource type is 'bundles'\"] = jsonData.data.type = \"bundles\"",
											"tests[\"Bundle is in state 'RESOLVED'\"] = jsonData.data.attributes.state === 32 ;",
											"tests[\"Id is composed of name_version\"] = jsonData.data.id === (jsonData.data.attributes.name + \"_\" + jsonData.data.attributes.version);     "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \n    {\n      \"id\": \"com.rs2.warp.frontend.hash-router_X.X.X_NEW\",\n      \"type\": \"bundles\",\n      \"attributes\": {\n        \"state\": 32\n      }\n    }\n  \n}"
								},
								"url": {
									"raw": "{{host}}/{{wsm-context-root}}/jsonapi/bundles/com.rs2.warp.frontend.hash-router_X.X.X_NEW",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{wsm-context-root}}",
										"jsonapi",
										"bundles",
										"com.rs2.warp.frontend.hash-router_X.X.X_NEW"
									]
								},
								"description": "Use this request to either:\n1. START\n2. STOP\n3. or set to any OSGi lifecycle state\n\nfor a given bundle.  The bundle to be affected will be based on the name + version given in the URL.  It is imperative to always include `com.rs2.warp.frontend.` as a prefix to the bundle name + version.\n\nIn this case, since warp-themes is version 1.14.4 - you would need to hit `http://psf-mvr_temp.rs2.com/generic-module-loader/jsonapi/bundles/com.rs2.warp.frontend.warp-themes.1.14.4`.  This will of course need to be modified whenever the WARP Themes bundle version changes.\n\n\n\n"
							},
							"response": []
						},
						{
							"name": "Core Off",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests['HTTP Status code should be 200'] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Resource type is 'bundles'\"] = jsonData.data.type = \"bundles\"",
											"tests[\"Bundle is in state 'RESOLVED'\"] = jsonData.data.attributes.state === 32 ;",
											"tests[\"Id is composed of name_version\"] = jsonData.data.id === (jsonData.data.attributes.name + \"_\" + jsonData.data.attributes.version);     "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \n    {\n      \"id\": \"com.rs2.warp.frontend.core_X.X.X_OLD\",\n      \"type\": \"bundles\",\n      \"attributes\": {\n        \"state\": 4\n      }\n    }\n  \n}"
								},
								"url": {
									"raw": "{{host}}/{{wsm-context-root}}/jsonapi/bundles/com.rs2.warp.frontend.core_X.X.X_OLD",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{wsm-context-root}}",
										"jsonapi",
										"bundles",
										"com.rs2.warp.frontend.core_X.X.X_OLD"
									]
								},
								"description": "Use this request to either:\n1. START\n2. STOP\n3. or set to any OSGi lifecycle state\n\nfor a given bundle.  The bundle to be affected will be based on the name + version given in the URL.  It is imperative to always include `com.rs2.warp.frontend.` as a prefix to the bundle name + version.\n\nIn this case, since warp-themes is version 1.14.4 - you would need to hit `http://psf-mvr_temp.rs2.com/generic-module-loader/jsonapi/bundles/com.rs2.warp.frontend.warp-themes.1.14.4`.  This will of course need to be modified whenever the WARP Themes bundle version changes.\n\n\n\n"
							},
							"response": []
						},
						{
							"name": "Core On",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests['HTTP Status code should be 200'] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Resource type is 'bundles'\"] = jsonData.data.type = \"bundles\"",
											"tests[\"Bundle is in state 'RESOLVED'\"] = jsonData.data.attributes.state === 32 ;",
											"tests[\"Id is composed of name_version\"] = jsonData.data.id === (jsonData.data.attributes.name + \"_\" + jsonData.data.attributes.version);     "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \n    {\n      \"id\": \"com.rs2.warp.frontend.core_X.X.X_NEW\",\n      \"type\": \"bundles\",\n      \"attributes\": {\n        \"state\": 32\n      }\n    }\n  \n}"
								},
								"url": {
									"raw": "{{host}}/{{wsm-context-root}}/jsonapi/bundles/com.rs2.warp.frontend.core_X.X.X_NEW",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{wsm-context-root}}",
										"jsonapi",
										"bundles",
										"com.rs2.warp.frontend.core_X.X.X_NEW"
									]
								},
								"description": "Use this request to either:\n1. START\n2. STOP\n3. or set to any OSGi lifecycle state\n\nfor a given bundle.  The bundle to be affected will be based on the name + version given in the URL.  It is imperative to always include `com.rs2.warp.frontend.` as a prefix to the bundle name + version.\n\nIn this case, since warp-themes is version 1.14.4 - you would need to hit `http://psf-mvr_temp.rs2.com/generic-module-loader/jsonapi/bundles/com.rs2.warp.frontend.warp-themes.1.14.4`.  This will of course need to be modified whenever the WARP Themes bundle version changes.\n\n\n\n"
							},
							"response": []
						},
						{
							"name": "Public Login Off",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests['HTTP Status code should be 200'] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Resource type is 'bundles'\"] = jsonData.data.type = \"bundles\"",
											"tests[\"Bundle is in state 'RESOLVED'\"] = jsonData.data.attributes.state === 32 ;",
											"tests[\"Id is composed of name_version\"] = jsonData.data.id === (jsonData.data.attributes.name + \"_\" + jsonData.data.attributes.version);     "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \n    {\n      \"id\": \"com.rs2.warp.frontend.public-login_X.X.X_OLD\",\n      \"type\": \"bundles\",\n      \"attributes\": {\n        \"state\": 4\n      }\n    }\n  \n}"
								},
								"url": {
									"raw": "{{host}}/{{wsm-context-root}}/jsonapi/bundles/com.rs2.warp.frontend.public-login_X.X.X_OLD",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{wsm-context-root}}",
										"jsonapi",
										"bundles",
										"com.rs2.warp.frontend.public-login_X.X.X_OLD"
									]
								},
								"description": "Use this request to either:\n1. START\n2. STOP\n3. or set to any OSGi lifecycle state\n\nfor a given bundle.  The bundle to be affected will be based on the name + version given in the URL.  It is imperative to always include `com.rs2.warp.frontend.` as a prefix to the bundle name + version.\n\nIn this case, since warp-themes is version 1.14.4 - you would need to hit `http://psf-mvr_temp.rs2.com/generic-module-loader/jsonapi/bundles/com.rs2.warp.frontend.warp-themes.1.14.4`.  This will of course need to be modified whenever the WARP Themes bundle version changes.\n\n\n\n"
							},
							"response": []
						},
						{
							"name": "Public Login On",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests['HTTP Status code should be 200'] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Resource type is 'bundles'\"] = jsonData.data.type = \"bundles\"",
											"tests[\"Bundle is in state 'RESOLVED'\"] = jsonData.data.attributes.state === 32 ;",
											"tests[\"Id is composed of name_version\"] = jsonData.data.id === (jsonData.data.attributes.name + \"_\" + jsonData.data.attributes.version);     "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \n    {\n      \"id\": \"com.rs2.warp.frontend.public-login_X.X.X_NEW\",\n      \"type\": \"bundles\",\n      \"attributes\": {\n        \"state\": 32\n      }\n    }\n  \n}"
								},
								"url": {
									"raw": "{{host}}/{{wsm-context-root}}/jsonapi/bundles/com.rs2.warp.frontend.public-login_X.X.X_NEW",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{wsm-context-root}}",
										"jsonapi",
										"bundles",
										"com.rs2.warp.frontend.public-login_X.X.X_NEW"
									]
								},
								"description": "Use this request to either:\n1. START\n2. STOP\n3. or set to any OSGi lifecycle state\n\nfor a given bundle.  The bundle to be affected will be based on the name + version given in the URL.  It is imperative to always include `com.rs2.warp.frontend.` as a prefix to the bundle name + version.\n\nIn this case, since warp-themes is version 1.14.4 - you would need to hit `http://psf-mvr_temp.rs2.com/generic-module-loader/jsonapi/bundles/com.rs2.warp.frontend.warp-themes.1.14.4`.  This will of course need to be modified whenever the WARP Themes bundle version changes.\n\n\n\n"
							},
							"response": []
						},
						{
							"name": "Content Panel Off",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests['HTTP Status code should be 200'] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Resource type is 'bundles'\"] = jsonData.data.type = \"bundles\"",
											"tests[\"Bundle is in state 'RESOLVED'\"] = jsonData.data.attributes.state === 32 ;",
											"tests[\"Id is composed of name_version\"] = jsonData.data.id === (jsonData.data.attributes.name + \"_\" + jsonData.data.attributes.version);     "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \n    {\n      \"id\": \"com.rs2.warp.frontend.public-login_X.X.X_OLD\",\n      \"type\": \"bundles\",\n      \"attributes\": {\n        \"state\": 4\n      }\n    }\n  \n}"
								},
								"url": {
									"raw": "{{host}}/{{wsm-context-root}}/jsonapi/bundles/com.rs2.warp.frontend.content-panel_X.X.X_OLD",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{wsm-context-root}}",
										"jsonapi",
										"bundles",
										"com.rs2.warp.frontend.content-panel_X.X.X_OLD"
									]
								},
								"description": "Use this request to either:\n1. START\n2. STOP\n3. or set to any OSGi lifecycle state\n\nfor a given bundle.  The bundle to be affected will be based on the name + version given in the URL.  It is imperative to always include `com.rs2.warp.frontend.` as a prefix to the bundle name + version.\n\nIn this case, since warp-themes is version 1.14.4 - you would need to hit `http://psf-mvr_temp.rs2.com/generic-module-loader/jsonapi/bundles/com.rs2.warp.frontend.warp-themes.1.14.4`.  This will of course need to be modified whenever the WARP Themes bundle version changes.\n\n\n\n"
							},
							"response": []
						},
						{
							"name": "Content Panel On",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests['HTTP Status code should be 200'] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Resource type is 'bundles'\"] = jsonData.data.type = \"bundles\"",
											"tests[\"Bundle is in state 'RESOLVED'\"] = jsonData.data.attributes.state === 32 ;",
											"tests[\"Id is composed of name_version\"] = jsonData.data.id === (jsonData.data.attributes.name + \"_\" + jsonData.data.attributes.version);     "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \n    {\n      \"id\": \"com.rs2.warp.frontend.content-panel_X.X.X_NEW\",\n      \"type\": \"bundles\",\n      \"attributes\": {\n        \"state\": 32\n      }\n    }\n  \n}"
								},
								"url": {
									"raw": "{{host}}/{{wsm-context-root}}/jsonapi/bundles/com.rs2.warp.frontend.content-panel_X.X.X_NEW",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{wsm-context-root}}",
										"jsonapi",
										"bundles",
										"com.rs2.warp.frontend.content-panel_X.X.X_NEW"
									]
								},
								"description": "Use this request to either:\n1. START\n2. STOP\n3. or set to any OSGi lifecycle state\n\nfor a given bundle.  The bundle to be affected will be based on the name + version given in the URL.  It is imperative to always include `com.rs2.warp.frontend.` as a prefix to the bundle name + version.\n\nIn this case, since warp-themes is version 1.14.4 - you would need to hit `http://psf-mvr_temp.rs2.com/generic-module-loader/jsonapi/bundles/com.rs2.warp.frontend.warp-themes.1.14.4`.  This will of course need to be modified whenever the WARP Themes bundle version changes.\n\n\n\n"
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "End Dynamic Collection",
			"item": [
				{
					"name": "End Collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// -------------------- End Collection --------------------\r",
									"    tests[\"Always OK\"] = responseCode.code === 404;\r",
									"    \r",
									"    postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "postman-echo.com/ping",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"ping"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}